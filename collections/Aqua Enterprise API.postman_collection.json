{
	"info": {
		"_postman_id": "bbefcb1b-1575-49fc-b45a-1d79995d76f6",
		"name": "🔐 Aqua Enterprise API",
		"description": "Welcome to the **Aqua API Postman Collection** – your one-stop environment to explore, test, and integrate with [Aqua’s Cloud Security APIs](https://www.aquasec.com/). This collection is designed to help developers, DevOps engineers, and security professionals quickly authenticate, query, and interact with Aqua’s key API endpoints in a structured, pre-configured workspace.\n\n### **🚀 What’s Included**\n\n- **Authentication flow** with token handling (JWT parsing and storage)\n    \n- Ready-to-use examples for key APIs\n    \n- Dynamic environment variables (aqua_url_v1, aqua_url_v2) auto-populated post-login\n    \n- Modular request groups for easy navigation and testing\n    \n\n### **⚙️ How to Use**\n\n1. **Import the Collection** into Postman (use the “Run in Postman” button if available).\n    \n2. Set your environment variables:\n    \n    - signin_url\n        \n    - email\n        \n    - password\n        \n3. Run the Login request to automatically parse the JWT and configure base URLs.\n    \n4. Start exploring Aqua’s APIs using the organized request groups.\n    \n\n### **💡 Notes**\n\n- Make sure your user credentials have appropriate permissions in Aqua.\n    \n- The JWT parsing logic is handled via a pre-script to extract ese_url from csp_metadata and dynamically configure endpoints.\n    \n- This collection is ideal for both learning and automating integrations with Aqua’s backend services.\n    \n\n### **💡 Signin URLs**\n\nFor SaaS users, set the \"signin_url\" variable according to your region.\n\n| **Region** | **URL** |\n| --- | --- |\n| US | https://api.cloudsploit.com |\n| EU | https://eu-1.api.cloudsploit.com |\n| Singapore | https://asia-1.api.cloudsploit.com |\n| Sydney | https://ap-2.api.cloudsploit.com |",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15550005",
		"_collection_link": "https://interstellar-escape-237386.postman.co/workspace/aquasec~3774c55e-fd52-4d20-9ba1-535233604f08/collection/15550005-bbefcb1b-1575-49fc-b45a-1d79995d76f6?action=share&source=collection_link&creator=15550005"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "SaaS",
					"item": [
						{
							"name": "AuthenticateWithKey",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var crypto = require('crypto-js');",
											"var moment = require('moment');",
											"",
											"var secret = pm.environment.get(\"api_secret\");",
											"",
											"var timestamp = (moment.unix(new Date()))/1000;",
											"let path = pm.request.url.getPath();",
											"let method = pm.request.method.toUpperCase();",
											"",
											"let body = JSON.parse(pm.request.body.raw);",
											"",
											"var string = timestamp + method +  path + (body && Object.keys(body).length > 0 ? JSON.stringify(body) : '');",
											"",
											"//console.log(string)",
											"",
											"var hmac = crypto.HmacSHA256(string, secret);",
											"var signature = hmac.toString();",
											"",
											"pm.globals.set(\"signature\", signature);",
											"pm.globals.set(\"timestamp\", timestamp);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"function parseJwt(token) {",
											"  var base64Payload = token.split('.')[1];",
											"  var payload = Buffer.from(base64Payload, 'base64');",
											"  return JSON.parse(payload.toString());",
											"}",
											"",
											"// Parse response body",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"// Correctly extract the token string",
											"var token = jsonData.data;",
											"pm.environment.set(\"token\", token);",
											"",
											"// Parse JWT and set environment variables",
											"var decodedToken = parseJwt(token);",
											"var aqua_url_v2 = decodedToken[\"csp_metadata\"][\"urls\"][\"ese_url\"];",
											"",
											"pm.environment.set(\"aqua_url_v1\", \"https://\" + aqua_url_v2 + \"/api/v1\");",
											"pm.environment.set(\"aqua_url_v2\", \"https://\" + aqua_url_v2 + \"/api/v2\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Signature",
										"value": "{{signature}}",
										"type": "text"
									},
									{
										"key": "X-Timestamp",
										"value": "{{timestamp}}",
										"type": "text"
									},
									{
										"key": "X-API-Key",
										"value": "{{api_key}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"validity\":240,\n    \"allowed_endpoints\":[\"ANY\"],\n    \"csp_roles\":[\"Admin\"]\n}"
								},
								"url": {
									"raw": "{{signin_url}}/v2/tokens",
									"host": [
										"{{signin_url}}"
									],
									"path": [
										"v2",
										"tokens"
									]
								},
								"description": "This request will generate a bearer token with a specified time to live value that can be enhanced in the body at your convinience. It will set global variables for signature, timestamp and environment variables for token and aqua_saas_endpoint."
							},
							"response": []
						},
						{
							"name": "Authenticate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"function parseJwt(token) {",
											"  var base64Payload = token.split('.')[1];",
											"  var payload = Buffer.from(base64Payload, 'base64');",
											"  return JSON.parse(payload.toString());",
											"}",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"//console.log(jsonData)",
											"pm.environment.set(\"token\", jsonData.data);",
											"",
											"var token = pm.environment.get(\"token\");",
											"var aqua_url_v2 = (parseJwt(token))[\"csp_metadata\"][\"urls\"][\"ese_url\"]",
											"",
											"pm.environment.set(\"aqua_url_v1\", \"https://\" + aqua_url_v2 + \"/api/v1\");",
											"pm.environment.set(\"aqua_url_v2\", \"https://\" + aqua_url_v2 + \"/api/v2\");",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"{{email}}\",\n    \"password\":\"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{signin_url}}/v2/signin",
									"host": [
										"{{signin_url}}"
									],
									"path": [
										"v2",
										"signin"
									]
								},
								"description": "This request will generate a bearer token with a specified time to live value that can be enhanced in the body at your convinience. It will set global variables for signature, timestamp and environment variables for token and aqua_saas_endpoint."
							},
							"response": []
						}
					],
					"description": "You can authenticate against Aqua SaaS using two methods:\n\n- User name (email) and Password\n    \n- API Key and Secret\n    \n\nIf using the API Key and Secret, please make sure the API Key is not Global Admin. You will need to disable the \"Global Admin\" toggle, and then choose two specific permissions from the list: role:assign and tokens:readwrite"
				},
				{
					"name": "SelfHosted",
					"item": [
						{
							"name": "Authenticate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"function parseJwt(token) {",
											"  var base64Payload = token.split('.')[1];",
											"  var payload = Buffer.from(base64Payload, 'base64');",
											"  return JSON.parse(payload.toString());",
											"}",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"//console.log(jsonData)",
											"pm.environment.set(\"token\", jsonData.token);",
											"",
											"pm.environment.set(\"aqua_url_v1\", signin_url + \"/api/v1\");",
											"pm.environment.set(\"aqua_url_v2\", signin_url + \"/api/v2\");",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":\"{{username}}\",\n    \"password\":\"{{password}}\"\n}"
								},
								"url": {
									"raw": "{{signin_url}}/v1/login",
									"host": [
										"{{signin_url}}"
									],
									"path": [
										"v1",
										"login"
									]
								},
								"description": "This request will generate a bearer token with a specified time to live value that can be enhanced in the body at your convinience. It will set global variables for signature, timestamp and environment variables for token and aqua_saas_endpoint."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Access Management",
			"item": [
				{
					"name": "scopes",
					"item": [
						{
							"name": "{name}",
							"item": [
								{
									"name": "Get application scope",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Name of an application scope (must be URL-encoded)"
												}
											]
										},
										"description": "Get a specific application scope by its name"
									},
									"response": [
										{
											"name": "Application scope successfully retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"scopes",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of an application scope (must be URL-encoded)"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"voluptate et proident\",\n  \"categories\": {\n    \"artifacts\": {\n      \"image\": {\n        \"expression\": \"consectetur ut tempor sit\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"function\": {\n        \"expression\": \"ad incididunt ut deserunt ipsum\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"pas_droplet\": {\n        \"expression\": \"ex elit ea laborum\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"workloads\": {\n      \"os\": {\n        \"expression\": \"laboris proident in aute\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"kubernetes\": {\n        \"expression\": \"incididunt ad nisi\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"cf\": {\n        \"expression\": \"inc\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"infrastructure\": {\n      \"kubernetes\": {\n        \"expression\": \"anim minim in \",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"os\": {\n        \"expression\": \"laboris nostrud\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"entity_scope\": {\n      \"expression\": \"nisi incididunt ea in\",\n      \"variables\": [\n        {\n          \"attribute\": \"aqua.registry\",\n          \"value\": \"Docker Hub\",\n          \"name\": \"\"\n        },\n        {\n          \"attribute\": \"aqua.registry\",\n          \"value\": \"Docker Hub\",\n          \"name\": \"\"\n        }\n      ]\n    }\n  },\n  \"description\": \"ex\",\n  \"author\": \"ad in \",\n  \"updated\": \"exercitation\"\n}"
										},
										{
											"name": "No Application Scopes with the specified name",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"scopes",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of an application scope (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Update application scope",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"voluptate et proident\",\n  \"categories\": {\n    \"artifacts\": {\n      \"image\": {\n        \"expression\": \"consectetur ut tempor sit\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"function\": {\n        \"expression\": \"ad incididunt ut deserunt ipsum\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"pas_droplet\": {\n        \"expression\": \"ex elit ea laborum\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"workloads\": {\n      \"os\": {\n        \"expression\": \"laboris proident in aute\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"kubernetes\": {\n        \"expression\": \"incididunt ad nisi\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"cf\": {\n        \"expression\": \"inc\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"infrastructure\": {\n      \"kubernetes\": {\n        \"expression\": \"anim minim in \",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"os\": {\n        \"expression\": \"laboris nostrud\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"entity_scope\": {\n      \"expression\": \"nisi incididunt ea in\",\n      \"variables\": [\n        {\n          \"attribute\": \"aqua.registry\",\n          \"value\": \"Docker Hub\",\n          \"name\": \"\"\n        },\n        {\n          \"attribute\": \"aqua.registry\",\n          \"value\": \"Docker Hub\",\n          \"name\": \"\"\n        }\n      ]\n    }\n  },\n  \"description\": \"ex\",\n  \"author\": \"ad in \",\n  \"updated\": \"exercitation\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Name of an application scope (must be URL-encoded)"
												}
											]
										},
										"description": "Update an application scope. System-created application scopes cannot be modified."
									},
									"response": [
										{
											"name": "Application scope successfully updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"scopes",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of an application scope (must be URL-encoded)"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid or missing input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"scopes",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of an application scope (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "No application scope with the specified name exists",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"scopes",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of an application scope (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Remove application scope",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Name of an application scope (must be URL-encoded)"
												}
											]
										},
										"description": "Remove an application scope. An application scope can be removed only if it was not created by the system. In addition, application scopes cannot be removed if they are already associated with an Aqua Policy or Service; you need to remove the association first."
									},
									"response": [
										{
											"name": "Application scope successfully removed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"scopes",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of an application scope (must be URL-encoded)"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Application scope cannot be removed due to existing constraints",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"scopes",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of an application scope (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "No application scope with the specified name exists",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/scopes/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"scopes",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of an application scope (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Get entities affected by application scope",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes/:name/affected_entities",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes",
												":name",
												"affected_entities"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Name of an application scope (must be URL-encoded)"
												}
											]
										},
										"description": "Get all entities affected by a specific application scope, such as Aqua Policies and Services"
									},
									"response": [
										{
											"name": "Affected entities successfully retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/scopes/:name/affected_entities",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"scopes",
														":name",
														"affected_entities"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of an application scope (must be URL-encoded)"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"assurance_policies\": [\n    \"est aute\",\n    \"nulla\"\n  ],\n  \"runtime_policies\": [\n    \"tempor officia nisi sed\",\n    \"eu ad\"\n  ],\n  \"services\": [\n    \"irure\",\n    \"dolor elit aute quis nisi\"\n  ]\n}"
										},
										{
											"name": "No application scopes with the specified name exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/scopes/:name/affected_entities",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"scopes",
														":name",
														"affected_entities"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of an application scope (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "List application scopes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/scopes",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"scopes"
									],
									"query": [
										{
											"key": "search",
											"value": "cillum exercitation",
											"description": "List only application scopes whose names match the specified text",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Set ordering of the returned results. Can be repeated to order the results by multiple attributes. Allowed attributes are 'name' and 'author'.",
											"disabled": true
										},
										{
											"key": "page",
											"value": "cillum exercitation",
											"description": "List application scopes from the specified page of results",
											"disabled": true
										},
										{
											"key": "pagesize",
											"value": "cillum exercitation",
											"description": "The maximum number of application scopes to be listed",
											"disabled": true
										}
									]
								},
								"description": "List all application scopes"
							},
							"response": [
								{
									"name": "Application scopes successfully listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes?search=cillum exercitation&order_by=cillum exercitation&page=cillum exercitation&pagesize=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes"
											],
											"query": [
												{
													"key": "search",
													"value": "cillum exercitation"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "page",
													"value": "cillum exercitation"
												},
												{
													"key": "pagesize",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 60677438,\n  \"page\": 8703514,\n  \"pagesize\": -72065902,\n  \"result\": [\n    {\n      \"name\": \"consectetur voluptate laborum ut Lorem\",\n      \"categories\": {\n        \"artifacts\": {\n          \"image\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"function\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"pas_droplet\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"workloads\": {\n          \"os\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"kubernetes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"cf\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"infrastructure\": {\n          \"kubernetes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"os\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"entity_scope\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"description\": \"minim consectetur consequat reprehenderit\",\n      \"author\": \"est\",\n      \"updated\": \"in nisi\"\n    },\n    {\n      \"name\": \"velit sunt\",\n      \"categories\": {\n        \"artifacts\": {\n          \"image\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"function\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"pas_droplet\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"workloads\": {\n          \"os\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"kubernetes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"cf\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"infrastructure\": {\n          \"kubernetes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"os\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"entity_scope\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"description\": \"dolore Excepteur fugiat \",\n      \"author\": \"exercitation nisi dolore\",\n      \"updated\": \"mollit ad\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create application scope",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"voluptate et proident\",\n  \"categories\": {\n    \"artifacts\": {\n      \"image\": {\n        \"expression\": \"consectetur ut tempor sit\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"function\": {\n        \"expression\": \"ad incididunt ut deserunt ipsum\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"pas_droplet\": {\n        \"expression\": \"ex elit ea laborum\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"workloads\": {\n      \"os\": {\n        \"expression\": \"laboris proident in aute\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"kubernetes\": {\n        \"expression\": \"incididunt ad nisi\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"cf\": {\n        \"expression\": \"inc\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"infrastructure\": {\n      \"kubernetes\": {\n        \"expression\": \"anim minim in \",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      \"os\": {\n        \"expression\": \"laboris nostrud\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"entity_scope\": {\n      \"expression\": \"nisi incididunt ea in\",\n      \"variables\": [\n        {\n          \"attribute\": \"aqua.registry\",\n          \"value\": \"Docker Hub\",\n          \"name\": \"\"\n        },\n        {\n          \"attribute\": \"aqua.registry\",\n          \"value\": \"Docker Hub\",\n          \"name\": \"\"\n        }\n      ]\n    }\n  },\n  \"description\": \"ex\",\n  \"author\": \"ad in \",\n  \"updated\": \"exercitation\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/scopes",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"scopes"
									]
								},
								"description": "Create a new application scope"
							},
							"response": [
								{
									"name": "Application scope successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Delete application scopes",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"irure deserunt\",\n  \"consectetur do est\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/scopes/delete",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"scopes",
										"delete"
									]
								},
								"description": "Delete one or more application scopes"
							},
							"response": [
								{
									"name": "Application scope(s) successfully deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes",
												"delete"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								},
								{
									"name": "Application scope names specified were not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes",
												"delete"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Get user's application scopes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/scopes/available",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"scopes",
										"available"
									]
								},
								"description": "Get the logged user's available (enrolled) application scope names"
							},
							"response": [
								{
									"name": "User's application scopes successfully retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes/available",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes",
												"available"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"irure deserunt\",\n  \"consectetur do est\"\n]"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/scopes/available",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"scopes",
												"available"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "permissions",
					"item": [
						{
							"name": "{name}",
							"item": [
								{
									"name": "Get permission set",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"permissions",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Name of a permission set (must be URL-encoded)"
												}
											]
										},
										"description": "Get a specific permission set by name"
									},
									"response": [
										{
											"name": "Permission set successfully retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"permissions",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of a permission set (must be URL-encoded)"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"cillum ipsum mollit nostrud dolore\",\n  \"description\": \"reprehenderit Ut\",\n  \"author\": \"in fugiat occaecat labore\",\n  \"updated\": \"commodo Ut pariatur\",\n  \"ui_access\": false,\n  \"is_super\": false,\n  \"actions\": [\n    \"ei\",\n    \"in\"\n  ]\n}"
										},
										{
											"name": "No permission set with the specified name exists",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"permissions",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of a permission set (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"permissions",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of a permission set (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Update permission set",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"cillum ipsum mollit nostrud dolore\",\n  \"description\": \"reprehenderit Ut\",\n  \"author\": \"in fugiat occaecat labore\",\n  \"updated\": \"commodo Ut pariatur\",\n  \"ui_access\": false,\n  \"is_super\": false,\n  \"actions\": [\n    \"ei\",\n    \"in\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"permissions",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Name of a permission set (must be URL-encoded)"
												}
											]
										},
										"description": "Update a permission set"
									},
									"response": [
										{
											"name": "Permission set successfully updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"permissions",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of a permission set (must be URL-encoded)"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid or missing input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"permissions",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of a permission set (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "No permission set with the specified name exists",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"permissions",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of a permission set (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Remove permission set",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"permissions",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Name of a permission set (must be URL-encoded)"
												}
											]
										},
										"description": "Remove a permission set. Permission sets can be removed only if they are not associated with any role."
									},
									"response": [
										{
											"name": "Permission set successfully removed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"permissions",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of a permission set (must be URL-encoded)"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Permission set cannot be removed due to existing constraints",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"permissions",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of a permission set (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "No permission set with the specified name exists",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/permissions/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"permissions",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of a permission set (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "List permission sets",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/permissions",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"permissions"
									],
									"query": [
										{
											"key": "search",
											"value": "cillum exercitation",
											"description": "List only permission sets whose names match the specified text",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Set ordering of the returned results. Can be repeated to order the results by multiple attributes. Allowed attributes are 'name' and 'author'.",
											"disabled": true
										},
										{
											"key": "page",
											"value": "cillum exercitation",
											"description": "List permission sets from the specified page of results",
											"disabled": true
										},
										{
											"key": "pagesize",
											"value": "cillum exercitation",
											"description": "The maximum number of permission sets to be listed",
											"disabled": true
										}
									]
								},
								"description": "List all permission sets"
							},
							"response": [
								{
									"name": "Permission sets successfully listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/permissions?search=cillum exercitation&order_by=cillum exercitation&page=cillum exercitation&pagesize=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"permissions"
											],
											"query": [
												{
													"key": "search",
													"value": "cillum exercitation"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "page",
													"value": "cillum exercitation"
												},
												{
													"key": "pagesize",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": -36522478,\n  \"page\": -26947031,\n  \"pagesize\": 67521197,\n  \"result\": [\n    {\n      \"name\": \"sit\",\n      \"description\": \"esse sit ut voluptate\",\n      \"author\": \"aliquip\",\n      \"updated\": \"ullamco id dolor\",\n      \"ui_access\": true,\n      \"is_super\": false,\n      \"actions\": [\n        \"cupidatat ut dolore occaecat\",\n        \"eiusmod ullamco non labore amet\"\n      ]\n    },\n    {\n      \"name\": \"dolor Lorem\",\n      \"description\": \"cupidatat eiusmod voluptate est elit\",\n      \"author\": \"laboris est\",\n      \"updated\": \"tempor eu Lorem ut\",\n      \"ui_access\": false,\n      \"is_super\": false,\n      \"actions\": [\n        \"Ut incididunt\",\n        \"eu sed dolore labore\"\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create permission set",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"cillum ipsum mollit nostrud dolore\",\n  \"description\": \"reprehenderit Ut\",\n  \"author\": \"in fugiat occaecat labore\",\n  \"updated\": \"commodo Ut pariatur\",\n  \"ui_access\": false,\n  \"is_super\": false,\n  \"actions\": [\n    \"ei\",\n    \"in\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/permissions",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"permissions"
									]
								},
								"description": "Create a new permission set"
							},
							"response": [
								{
									"name": "Permission set successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/permissions",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"permissions"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/permissions",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"permissions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Delete permission set(s)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"irure deserunt\",\n  \"consectetur do est\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/permissions/delete",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"permissions",
										"delete"
									]
								},
								"description": "Delete one or more permission sets"
							},
							"response": [
								{
									"name": "Permission set(s) successfully deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/permissions/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"permissions",
												"delete"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/permissions/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"permissions",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								},
								{
									"name": "Permission set names specified were not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/permissions/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"permissions",
												"delete"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "List permission set actions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/permissions/actions",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"permissions",
										"actions"
									]
								},
								"description": "List all available permission set actions"
							},
							"response": [
								{
									"name": "Permission Set actions successfully listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/permissions/actions",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"permissions",
												"actions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"groups\": [\n    {\n      \"name\": \"Duis labore incididunt eu\",\n      \"actions\": [\n        {\n          \"action\": \"adipisicing aliqua ipsum\",\n          \"name\": \"aliquip ad\",\n          \"description\": \"ipsum voluptate elit labore\",\n          \"has_write_access\": false,\n          \"has_scope\": true\n        },\n        {\n          \"action\": \"eiusmod laborum\",\n          \"name\": \"reprehenderit ullamco esse occaeca\",\n          \"description\": \"in velit esse sed\",\n          \"has_write_access\": true,\n          \"has_scope\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"sunt quis irure aliqua\",\n      \"actions\": [\n        {\n          \"action\": \"ad cillum culpa eu\",\n          \"name\": \"deserunt\",\n          \"description\": \"pariatur adipisicing ipsum\",\n          \"has_write_access\": false,\n          \"has_scope\": false\n        },\n        {\n          \"action\": \"id in dolor\",\n          \"name\": \"sed nostrud enim eu\",\n          \"description\": \"irure in labore\",\n          \"has_write_access\": false,\n          \"has_scope\": false\n        }\n      ]\n    }\n  ],\n  \"dependencies\": [\n    {\n      \"name\": \"esse ad in\",\n      \"dependent_on\": {}\n    },\n    {\n      \"name\": \"anim cupidatat eiusmod proident sunt\",\n      \"dependent_on\": {}\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "roles",
					"item": [
						{
							"name": "{name}",
							"item": [
								{
									"name": "Get role",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/roles/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"roles",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Name of role (must be URL-encoded)"
												}
											]
										},
										"description": "Get a specific role by name"
									},
									"response": [
										{
											"name": "Role successfully retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/roles/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of role (must be URL-encoded)"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"dolo\",\n  \"description\": \"incididunt\",\n  \"author\": \"Duis sit veniam\",\n  \"updated\": \"nostrud dolore quis Excepteur\",\n  \"permission\": \"nulla consectetur in\",\n  \"scopes\": [\n    \"enim qui officia nostrud sed\",\n    \"occaecat proident inci\"\n  ]\n}"
										},
										{
											"name": "No role with the specified name exists",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/roles/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of role (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/roles/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of role (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Update role",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"dolo\",\n  \"description\": \"incididunt\",\n  \"author\": \"Duis sit veniam\",\n  \"updated\": \"nostrud dolore quis Excepteur\",\n  \"permission\": \"nulla consectetur in\",\n  \"scopes\": [\n    \"enim qui officia nostrud sed\",\n    \"occaecat proident inci\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/roles/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"roles",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Name of role (must be URL-encoded)"
												}
											]
										},
										"description": "Update a role. Users cannot update their own role. Also, the 'Administrator' role cannot be modified."
									},
									"response": [
										{
											"name": "Role successfully updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/roles/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of role (must be URL-encoded)"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid or missing input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/roles/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of role (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "No role with the specified name exists",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/roles/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of role (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Remove role",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/roles/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"roles",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Name of role (must be URL-encoded)"
												}
											]
										},
										"description": "Remove a role. Roles can be removed only if they have no associated users or LDAP group mappings. Additionally, the 'Administrator' role cannot be removed. Roles cannot be removed if any application scopes or permission sets are associated with them."
									},
									"response": [
										{
											"name": "Role successfully removed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/roles/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of role (must be URL-encoded)"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Role cannot be removed due to existing constraints",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/roles/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of role (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "No role with the specified name exists",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/access_management/roles/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"access_management",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Name of role (must be URL-encoded)"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "List roles",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/roles",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"roles"
									],
									"query": [
										{
											"key": "search",
											"value": "cillum exercitation",
											"description": "List only roles whose names match the specified text",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Set ordering of the returned results. Can be repeated to order the results by multiple attributes. Allowed attributes are 'name' and 'num_users'.",
											"disabled": true
										},
										{
											"key": "page",
											"value": "cillum exercitation",
											"description": "List roles from the specified page of results",
											"disabled": true
										},
										{
											"key": "pagesize",
											"value": "cillum exercitation",
											"description": "The maximum number of roles to be listed",
											"disabled": true
										}
									]
								},
								"description": "List all roles"
							},
							"response": [
								{
									"name": "Roles successfully listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/roles?search=cillum exercitation&order_by=cillum exercitation&page=cillum exercitation&pagesize=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"roles"
											],
											"query": [
												{
													"key": "search",
													"value": "cillum exercitation"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "page",
													"value": "cillum exercitation"
												},
												{
													"key": "pagesize",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 20480952,\n  \"page\": 27975355,\n  \"pagesize\": -72434572,\n  \"result\": [\n    {\n      \"name\": \"quis\",\n      \"description\": \"et\",\n      \"author\": \"f\",\n      \"updated\": \"dolore\",\n      \"permission\": \"ex velit\",\n      \"scopes\": [\n        \"Duis ut voluptate sed\",\n        \"i\"\n      ]\n    },\n    {\n      \"name\": \"eu\",\n      \"description\": \"ullamco in in elit dolor\",\n      \"author\": \"labore nulla ex esse\",\n      \"updated\": \"qui ut q\",\n      \"permission\": \"veniam consectetur\",\n      \"scopes\": [\n        \"ullamco eiusmod laboris Excepteur\",\n        \"consectetur ex\"\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create role",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"dolo\",\n  \"description\": \"incididunt\",\n  \"author\": \"Duis sit veniam\",\n  \"updated\": \"nostrud dolore quis Excepteur\",\n  \"permission\": \"nulla consectetur in\",\n  \"scopes\": [\n    \"enim qui officia nostrud sed\",\n    \"occaecat proident inci\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/roles",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"roles"
									]
								},
								"description": "Create a new role"
							},
							"response": [
								{
									"name": "Role successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/roles",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"roles"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/roles",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"roles"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Delete role(s)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"irure deserunt\",\n  \"consectetur do est\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/roles/delete",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"roles",
										"delete"
									]
								},
								"description": "Delete one or more roles"
							},
							"response": [
								{
									"name": "Role(s) successfully deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/roles/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"roles",
												"delete"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/roles/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"roles",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								},
								{
									"name": "Role names specified were not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/access_management/roles/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"access_management",
												"roles",
												"delete"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "List all users",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v1}}/users?pagesize=-96481460&page=-96481460",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "pagesize",
											"value": "-96481460",
											"description": "The maximum number of users to be listed"
										},
										{
											"key": "page",
											"value": "-96481460",
											"description": "List users from the specified page of results"
										},
										{
											"key": "search",
											"value": "cillum exercitation",
											"description": "Search for users that match the search string specified",
											"disabled": true
										},
										{
											"key": "orderby",
											"value": "cillum exercitation",
											"description": "Set ordering of the results. Allowed attributes are 'login_id', 'name', 'email' and 'first_time'.",
											"disabled": true
										}
									]
								},
								"description": "List all users"
							},
							"response": [
								{
									"name": "Users listed successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v1}}/users?pagesize=-96481460&page=-96481460&search=cillum exercitation&orderby=cillum exercitation",
											"host": [
												"{{aqua_url_v1}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "pagesize",
													"value": "-96481460"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "search",
													"value": "cillum exercitation"
												},
												{
													"key": "orderby",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": -45900050,\n  \"page\": -91560068,\n  \"pagesize\": -63514887,\n  \"result\": [\n    {\n      \"login_id\": \"dolore sed\",\n      \"password\": \"ad incidi\",\n      \"name\": \"Ut consequat magna Lorem\",\n      \"email\": \"ipsu\",\n      \"first_time\": true,\n      \"is_super\": false,\n      \"ui_access\": true,\n      \"actions\": {\n        \"nisi64f\": \"culpa nostrud eu cillum\"\n      },\n      \"scopes\": [\n        \"minim id\",\n        \"commodo\"\n      ],\n      \"role\": \"amet\",\n      \"roles\": [\n        \"Duis in\",\n        \"dolore voluptate enim proident esse\"\n      ],\n      \"type\": \"cillum dolore nisi proident\"\n    },\n    {\n      \"login_id\": \"velit amet aliqua\",\n      \"password\": \"velit\",\n      \"name\": \"ea reprehenderit est\",\n      \"email\": \"nisi minim proident dolore irure\",\n      \"first_time\": false,\n      \"is_super\": false,\n      \"ui_access\": true,\n      \"actions\": {\n        \"velit_b\": \"nostrud adipisicing\"\n      },\n      \"scopes\": [\n        \"anim Ut\",\n        \"sit id veniam\"\n      ],\n      \"role\": \"dolore sit\",\n      \"roles\": [\n        \"culpa Ut proident\",\n        \"sint\"\n      ],\n      \"type\": \"non consectetur reprehenderit dolor eu\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "List RBAC categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{aqua_url_v2}}/access_management/categories",
							"host": [
								"{{aqua_url_v2}}"
							],
							"path": [
								"access_management",
								"categories"
							]
						},
						"description": "List all RBAC (Role-Based Access Control) categories"
					},
					"response": [
						{
							"name": "RBAC scope categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "cillum exercitation",
										"description": "(Required) Authorization header must include Bearer token or Basic authentication"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/access_management/categories",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"access_management",
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"enim_4\": {\n    \"category\": \"sit est culpa cillum\",\n    \"desc\": {}\n  },\n  \"officia7\": {\n    \"category\": \"laborum tempor\",\n    \"desc\": {}\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Policies",
			"item": [
				{
					"name": "Assurance Policy",
					"item": [
						{
							"name": "{type}",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "Delete Assurance Policy",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Assurance Policy name to match"
														},
														{
															"key": "type",
															"value": "image",
															"description": "(Required) assurance type"
														}
													]
												},
												"description": "Delete the named Assurance Policy. Note: You cannot delete Assurance Policies whose 'readonly' value is set to true."
											},
											"response": [
												{
													"name": "Assurance Policy deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/:name",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "cillum exercitation",
																	"description": "(Required) The Assurance Policy name to match"
																},
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) assurance type"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "No matching policy found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/:name",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "cillum exercitation",
																	"description": "(Required) The Assurance Policy name to match"
																},
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) assurance type"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "Retrieve Assurance Policy details",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The name of the Assurance Policy"
														},
														{
															"key": "type",
															"value": "image",
															"description": "(Required) assurance type"
														}
													]
												},
												"description": "Retrieve details of the Assurance Policy whose name is specified"
											},
											"response": [
												{
													"name": "Details of the Assurance Policy",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/:name",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "cillum exercitation",
																	"description": "(Required) The name of the Assurance Policy"
																},
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) assurance type"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"allowed_images\": [\n    {\n      \"author\": \"esse\",\n      \"blacklisted\": true,\n      \"imageDigest\": \"sint esse Lorem enim\",\n      \"imageID\": -58075453,\n      \"imagename\": \"dolor Duis occaecat enim\",\n      \"lastupdated\": 75302319,\n      \"reason\": {},\n      \"registry\": \"ullamco\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"consequat sunt non\",\n      \"blacklisted\": false,\n      \"imageDigest\": \"mollit cupidatat nisi\",\n      \"imageID\": 92157605,\n      \"imagename\": \"elit deserunt eu\",\n      \"lastupdated\": -82217750,\n      \"reason\": {},\n      \"registry\": \"nisi irure sint\",\n      \"whitelisted\": true\n    }\n  ],\n  \"assurance_type\": \"ipsum irure\",\n  \"audit_on_failure\": true,\n  \"author\": \"fugiat ullamco esse\",\n  \"blacklisted_licenses\": [\n    \"Lorem sunt fugiat magna labor\",\n    \"amet\"\n  ],\n  \"blacklisted_licenses_enabled\": false,\n  \"block_failed\": true,\n  \"control_exclude_no_fix\": false,\n  \"custom_checks\": [\n    {\n      \"description\": \"ut eiusmod dolore cupidatat\",\n      \"engine\": \"sit culpa velit incididunt\",\n      \"last_modified\": 58461154,\n      \"name\": \"Ut dolor\",\n      \"path\": \"ut dolor Lorem fugiat\",\n      \"readonly\": false,\n      \"script_id\": \"ad veniam\",\n      \"snippet\": \"eiusmod dolor sit aliquip\"\n    },\n    {\n      \"description\": \"fugiat ea dolor nulla\",\n      \"engine\": \"Ut\",\n      \"last_modified\": -91278191,\n      \"name\": \"magna\",\n      \"path\": \"do consequat eu nulla cillum\",\n      \"readonly\": true,\n      \"script_id\": \"fugiat esse dolor dolor\",\n      \"snippet\": \"fugiat Ut\"\n    }\n  ],\n  \"custom_checks_enabled\": true,\n  \"cves_black_list\": [\n    \"aliquip\",\n    \"est ut\"\n  ],\n  \"cves_black_list_enabled\": true,\n  \"cves_white_list\": [\n    \"ipsum enim eu incididunt\",\n    \"incididunt \"\n  ],\n  \"cves_white_list_enabled\": false,\n  \"cvss_severity\": \"veniam non ut anim\",\n  \"cvss_severity_enabled\": true,\n  \"cvss_severity_exclude_no_fix\": false,\n  \"description\": \"irure amet velit\",\n  \"disallow_malware\": true,\n  \"docker_cis_enabled\": false,\n  \"domain\": \"dolor proident commodo\",\n  \"enforce_excessive_permissions\": false,\n  \"fail_cicd\": false,\n  \"force_microenforcer\": true,\n  \"function_integrity_enabled\": false,\n  \"blacklist_permissions_enabled\": true,\n  \"blacklist_permissions\": [\n    \"dolor est\",\n    \"id\"\n  ],\n  \"ignore_recently_published_vln\": false,\n  \"ignore_recently_published_vln_period\": 56589197,\n  \"ignore_risk_resources_enabled\": true,\n  \"ignored_risk_resources\": [\n    \"fugiat est reprehenderit\",\n    \"eu irure\"\n  ],\n  \"images\": [\n    \"eu nisi aliqua magna\",\n    \"nostrud in\"\n  ],\n  \"kube_cis_enabled\": false,\n  \"labels\": [\n    \"ullamco id\",\n    \"cupidatat veniam\"\n  ],\n  \"lastupdate\": \"1977-11-22T19:16:49.174Z\",\n  \"linux_cis_enabled\": true,\n  \"maximum_score\": -64829658,\n  \"maximum_score_enabled\": false,\n  \"maximum_score_exclude_no_fix\": false,\n  \"name\": \"nisi laboris\",\n  \"only_none_root_users\": false,\n  \"openshift_hardening_enabled\": true,\n  \"packages_black_list\": [\n    {\n      \"arch\": \"nostrud tempor cillum\",\n      \"epoch\": \"Ut\",\n      \"format\": \"veniam Lorem mollit dolore\",\n      \"license\": \"commodo esse\",\n      \"name\": \"dolor\",\n      \"release\": \"fugia\",\n      \"version\": \"id in\",\n      \"version_range\": \"nostrud consectetur consequat\"\n    },\n    {\n      \"arch\": \"enim nisi Lore\",\n      \"epoch\": \"dolor consectetur quis\",\n      \"format\": \"Lorem elit proident\",\n      \"license\": \"mollit esse\",\n      \"name\": \"laboris id n\",\n      \"release\": \"pariatur eiusmod cillum\",\n      \"version\": \"commodo laborum\",\n      \"version_range\": \"cupidatat in eu fugiat\"\n    }\n  ],\n  \"packages_black_list_enabled\": false,\n  \"packages_white_list\": [\n    {\n      \"arch\": \"esse eiusmod\",\n      \"epoch\": \"cupidatat mollit\",\n      \"format\": \"dolo\",\n      \"license\": \"ex\",\n      \"name\": \"enim\",\n      \"release\": \"ullamco sint id consectetur\",\n      \"version\": \"labore \",\n      \"version_range\": \"non fugiat ex\"\n    },\n    {\n      \"arch\": \"ea\",\n      \"epoch\": \"in elit\",\n      \"format\": \"non dolor\",\n      \"license\": \"magna culpa\",\n      \"name\": \"ut in ut\",\n      \"release\": \"ut occaecat ea dolore\",\n      \"version\": \"irure voluptate\",\n      \"version_range\": \"ipsum culpa ad\"\n    }\n  ],\n  \"packages_white_list_enabled\": true,\n  \"partial_results_image_fail\": true,\n  \"readonly\": false,\n  \"registries\": [\n    \"nulla Duis\",\n    \"cupidatat do adipisicing\"\n  ],\n  \"scan_sensitive_data\": false,\n  \"scap_enabled\": false,\n  \"scap_files\": [\n    {\n      \"description\": \"irure aliqua ipsum\",\n      \"engine\": \"ea laborum labore sit\",\n      \"last_modified\": 1791909,\n      \"name\": \"tempor laborum eiusmod\",\n      \"path\": \"exercitation amet nostrud ea\",\n      \"readonly\": false,\n      \"script_id\": \"cupidatat\",\n      \"snippet\": \"in\"\n    },\n    {\n      \"description\": \"nisi labore minim\",\n      \"engine\": \"labore dolor Excepteur aute sint\",\n      \"last_modified\": 38351237,\n      \"name\": \"deserunt cupidatat veniam esse\",\n      \"path\": \"sint ea\",\n      \"readonly\": true,\n      \"script_id\": \"ullamco deserunt\",\n      \"snippet\": \"id aliqua labore Excepteur\"\n    }\n  ],\n  \"scope\": {\n    \"expression\": \"sint quis in culpa dolore\",\n    \"variables\": [\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      },\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"application_scopes\": [\n    \"id irure do in\",\n    \"voluptate \"\n  ],\n  \"trusted_base_images\": [\n    {\n      \"author\": \"ut non\",\n      \"imageDigest\": \"eu occaecat exercitation\",\n      \"imageID\": 79685963,\n      \"imagename\": \"cillum anim Lorem nulla sunt\",\n      \"lastupdated\": 4022256,\n      \"registry\": \"sunt ex nostrud quis do\"\n    },\n    {\n      \"author\": \"elit laboris reprehenderit ea\",\n      \"imageDigest\": \"nisi\",\n      \"imageID\": -26826116,\n      \"imagename\": \"cupidatat et\",\n      \"lastupdated\": -91827000,\n      \"registry\": \"irure nostrud\"\n    }\n  ],\n  \"trusted_base_images_enabled\": true,\n  \"whitelisted_licenses\": [\n    \"commodo proident Lorem\",\n    \"dolor officia esse\"\n  ],\n  \"whitelisted_licenses_enabled\": false\n}"
												},
												{
													"name": "No matching policy found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/:name",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "cillum exercitation",
																	"description": "(Required) The name of the Assurance Policy"
																},
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) assurance type"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "Update Assurance Policy",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowed_images\": [\n    {\n      \"author\": \"esse\",\n      \"blacklisted\": true,\n      \"imageDigest\": \"sint esse Lorem enim\",\n      \"imageID\": -58075453,\n      \"imagename\": \"dolor Duis occaecat enim\",\n      \"lastupdated\": 75302319,\n      \"reason\": {},\n      \"registry\": \"ullamco\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"consequat sunt non\",\n      \"blacklisted\": false,\n      \"imageDigest\": \"mollit cupidatat nisi\",\n      \"imageID\": 92157605,\n      \"imagename\": \"elit deserunt eu\",\n      \"lastupdated\": -82217750,\n      \"reason\": {},\n      \"registry\": \"nisi irure sint\",\n      \"whitelisted\": true\n    }\n  ],\n  \"assurance_type\": \"ipsum irure\",\n  \"audit_on_failure\": true,\n  \"author\": \"fugiat ullamco esse\",\n  \"blacklisted_licenses\": [\n    \"Lorem sunt fugiat magna labor\",\n    \"amet\"\n  ],\n  \"blacklisted_licenses_enabled\": false,\n  \"block_failed\": true,\n  \"control_exclude_no_fix\": false,\n  \"custom_checks\": [\n    {\n      \"description\": \"ut eiusmod dolore cupidatat\",\n      \"engine\": \"sit culpa velit incididunt\",\n      \"last_modified\": 58461154,\n      \"name\": \"Ut dolor\",\n      \"path\": \"ut dolor Lorem fugiat\",\n      \"readonly\": false,\n      \"script_id\": \"ad veniam\",\n      \"snippet\": \"eiusmod dolor sit aliquip\"\n    },\n    {\n      \"description\": \"fugiat ea dolor nulla\",\n      \"engine\": \"Ut\",\n      \"last_modified\": -91278191,\n      \"name\": \"magna\",\n      \"path\": \"do consequat eu nulla cillum\",\n      \"readonly\": true,\n      \"script_id\": \"fugiat esse dolor dolor\",\n      \"snippet\": \"fugiat Ut\"\n    }\n  ],\n  \"custom_checks_enabled\": true,\n  \"cves_black_list\": [\n    \"aliquip\",\n    \"est ut\"\n  ],\n  \"cves_black_list_enabled\": true,\n  \"cves_white_list\": [\n    \"ipsum enim eu incididunt\",\n    \"incididunt \"\n  ],\n  \"cves_white_list_enabled\": false,\n  \"cvss_severity\": \"veniam non ut anim\",\n  \"cvss_severity_enabled\": true,\n  \"cvss_severity_exclude_no_fix\": false,\n  \"description\": \"irure amet velit\",\n  \"disallow_malware\": true,\n  \"docker_cis_enabled\": false,\n  \"domain\": \"dolor proident commodo\",\n  \"enforce_excessive_permissions\": false,\n  \"fail_cicd\": false,\n  \"force_microenforcer\": true,\n  \"function_integrity_enabled\": false,\n  \"blacklist_permissions_enabled\": true,\n  \"blacklist_permissions\": [\n    \"dolor est\",\n    \"id\"\n  ],\n  \"ignore_recently_published_vln\": false,\n  \"ignore_recently_published_vln_period\": 56589197,\n  \"ignore_risk_resources_enabled\": true,\n  \"ignored_risk_resources\": [\n    \"fugiat est reprehenderit\",\n    \"eu irure\"\n  ],\n  \"images\": [\n    \"eu nisi aliqua magna\",\n    \"nostrud in\"\n  ],\n  \"kube_cis_enabled\": false,\n  \"labels\": [\n    \"ullamco id\",\n    \"cupidatat veniam\"\n  ],\n  \"lastupdate\": \"1977-11-22T19:16:49.174Z\",\n  \"linux_cis_enabled\": true,\n  \"maximum_score\": -64829658,\n  \"maximum_score_enabled\": false,\n  \"maximum_score_exclude_no_fix\": false,\n  \"name\": \"nisi laboris\",\n  \"only_none_root_users\": false,\n  \"openshift_hardening_enabled\": true,\n  \"packages_black_list\": [\n    {\n      \"arch\": \"nostrud tempor cillum\",\n      \"epoch\": \"Ut\",\n      \"format\": \"veniam Lorem mollit dolore\",\n      \"license\": \"commodo esse\",\n      \"name\": \"dolor\",\n      \"release\": \"fugia\",\n      \"version\": \"id in\",\n      \"version_range\": \"nostrud consectetur consequat\"\n    },\n    {\n      \"arch\": \"enim nisi Lore\",\n      \"epoch\": \"dolor consectetur quis\",\n      \"format\": \"Lorem elit proident\",\n      \"license\": \"mollit esse\",\n      \"name\": \"laboris id n\",\n      \"release\": \"pariatur eiusmod cillum\",\n      \"version\": \"commodo laborum\",\n      \"version_range\": \"cupidatat in eu fugiat\"\n    }\n  ],\n  \"packages_black_list_enabled\": false,\n  \"packages_white_list\": [\n    {\n      \"arch\": \"esse eiusmod\",\n      \"epoch\": \"cupidatat mollit\",\n      \"format\": \"dolo\",\n      \"license\": \"ex\",\n      \"name\": \"enim\",\n      \"release\": \"ullamco sint id consectetur\",\n      \"version\": \"labore \",\n      \"version_range\": \"non fugiat ex\"\n    },\n    {\n      \"arch\": \"ea\",\n      \"epoch\": \"in elit\",\n      \"format\": \"non dolor\",\n      \"license\": \"magna culpa\",\n      \"name\": \"ut in ut\",\n      \"release\": \"ut occaecat ea dolore\",\n      \"version\": \"irure voluptate\",\n      \"version_range\": \"ipsum culpa ad\"\n    }\n  ],\n  \"packages_white_list_enabled\": true,\n  \"partial_results_image_fail\": true,\n  \"readonly\": false,\n  \"registries\": [\n    \"nulla Duis\",\n    \"cupidatat do adipisicing\"\n  ],\n  \"scan_sensitive_data\": false,\n  \"scap_enabled\": false,\n  \"scap_files\": [\n    {\n      \"description\": \"irure aliqua ipsum\",\n      \"engine\": \"ea laborum labore sit\",\n      \"last_modified\": 1791909,\n      \"name\": \"tempor laborum eiusmod\",\n      \"path\": \"exercitation amet nostrud ea\",\n      \"readonly\": false,\n      \"script_id\": \"cupidatat\",\n      \"snippet\": \"in\"\n    },\n    {\n      \"description\": \"nisi labore minim\",\n      \"engine\": \"labore dolor Excepteur aute sint\",\n      \"last_modified\": 38351237,\n      \"name\": \"deserunt cupidatat veniam esse\",\n      \"path\": \"sint ea\",\n      \"readonly\": true,\n      \"script_id\": \"ullamco deserunt\",\n      \"snippet\": \"id aliqua labore Excepteur\"\n    }\n  ],\n  \"scope\": {\n    \"expression\": \"sint quis in culpa dolore\",\n    \"variables\": [\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      },\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"application_scopes\": [\n    \"id irure do in\",\n    \"voluptate \"\n  ],\n  \"trusted_base_images\": [\n    {\n      \"author\": \"ut non\",\n      \"imageDigest\": \"eu occaecat exercitation\",\n      \"imageID\": 79685963,\n      \"imagename\": \"cillum anim Lorem nulla sunt\",\n      \"lastupdated\": 4022256,\n      \"registry\": \"sunt ex nostrud quis do\"\n    },\n    {\n      \"author\": \"elit laboris reprehenderit ea\",\n      \"imageDigest\": \"nisi\",\n      \"imageID\": -26826116,\n      \"imagename\": \"cupidatat et\",\n      \"lastupdated\": -91827000,\n      \"registry\": \"irure nostrud\"\n    }\n  ],\n  \"trusted_base_images_enabled\": true,\n  \"whitelisted_licenses\": [\n    \"commodo proident Lorem\",\n    \"dolor officia esse\"\n  ],\n  \"whitelisted_licenses_enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Assurance Policy name to match"
														},
														{
															"key": "type",
															"value": "image",
															"description": "(Required) assurance type"
														}
													]
												},
												"description": "\"Update details of the named Assurance Policy. Best-practice is to use the response of the GET request\nfor the existing policy as a baseline and change it accordingly. Note: The 'readonly' attribute can only be set to false when updating an Assurance Policy.\"\n"
											},
											"response": [
												{
													"name": "Assurance Policy updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"allowed_images\": [\n    {\n      \"author\": \"esse\",\n      \"blacklisted\": true,\n      \"imageDigest\": \"sint esse Lorem enim\",\n      \"imageID\": -58075453,\n      \"imagename\": \"dolor Duis occaecat enim\",\n      \"lastupdated\": 75302319,\n      \"reason\": {},\n      \"registry\": \"ullamco\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"consequat sunt non\",\n      \"blacklisted\": false,\n      \"imageDigest\": \"mollit cupidatat nisi\",\n      \"imageID\": 92157605,\n      \"imagename\": \"elit deserunt eu\",\n      \"lastupdated\": -82217750,\n      \"reason\": {},\n      \"registry\": \"nisi irure sint\",\n      \"whitelisted\": true\n    }\n  ],\n  \"assurance_type\": \"ipsum irure\",\n  \"audit_on_failure\": true,\n  \"author\": \"fugiat ullamco esse\",\n  \"blacklisted_licenses\": [\n    \"Lorem sunt fugiat magna labor\",\n    \"amet\"\n  ],\n  \"blacklisted_licenses_enabled\": false,\n  \"block_failed\": true,\n  \"control_exclude_no_fix\": false,\n  \"custom_checks\": [\n    {\n      \"description\": \"ut eiusmod dolore cupidatat\",\n      \"engine\": \"sit culpa velit incididunt\",\n      \"last_modified\": 58461154,\n      \"name\": \"Ut dolor\",\n      \"path\": \"ut dolor Lorem fugiat\",\n      \"readonly\": false,\n      \"script_id\": \"ad veniam\",\n      \"snippet\": \"eiusmod dolor sit aliquip\"\n    },\n    {\n      \"description\": \"fugiat ea dolor nulla\",\n      \"engine\": \"Ut\",\n      \"last_modified\": -91278191,\n      \"name\": \"magna\",\n      \"path\": \"do consequat eu nulla cillum\",\n      \"readonly\": true,\n      \"script_id\": \"fugiat esse dolor dolor\",\n      \"snippet\": \"fugiat Ut\"\n    }\n  ],\n  \"custom_checks_enabled\": true,\n  \"cves_black_list\": [\n    \"aliquip\",\n    \"est ut\"\n  ],\n  \"cves_black_list_enabled\": true,\n  \"cves_white_list\": [\n    \"ipsum enim eu incididunt\",\n    \"incididunt \"\n  ],\n  \"cves_white_list_enabled\": false,\n  \"cvss_severity\": \"veniam non ut anim\",\n  \"cvss_severity_enabled\": true,\n  \"cvss_severity_exclude_no_fix\": false,\n  \"description\": \"irure amet velit\",\n  \"disallow_malware\": true,\n  \"docker_cis_enabled\": false,\n  \"domain\": \"dolor proident commodo\",\n  \"enforce_excessive_permissions\": false,\n  \"fail_cicd\": false,\n  \"force_microenforcer\": true,\n  \"function_integrity_enabled\": false,\n  \"blacklist_permissions_enabled\": true,\n  \"blacklist_permissions\": [\n    \"dolor est\",\n    \"id\"\n  ],\n  \"ignore_recently_published_vln\": false,\n  \"ignore_recently_published_vln_period\": 56589197,\n  \"ignore_risk_resources_enabled\": true,\n  \"ignored_risk_resources\": [\n    \"fugiat est reprehenderit\",\n    \"eu irure\"\n  ],\n  \"images\": [\n    \"eu nisi aliqua magna\",\n    \"nostrud in\"\n  ],\n  \"kube_cis_enabled\": false,\n  \"labels\": [\n    \"ullamco id\",\n    \"cupidatat veniam\"\n  ],\n  \"lastupdate\": \"1977-11-22T19:16:49.174Z\",\n  \"linux_cis_enabled\": true,\n  \"maximum_score\": -64829658,\n  \"maximum_score_enabled\": false,\n  \"maximum_score_exclude_no_fix\": false,\n  \"name\": \"nisi laboris\",\n  \"only_none_root_users\": false,\n  \"openshift_hardening_enabled\": true,\n  \"packages_black_list\": [\n    {\n      \"arch\": \"nostrud tempor cillum\",\n      \"epoch\": \"Ut\",\n      \"format\": \"veniam Lorem mollit dolore\",\n      \"license\": \"commodo esse\",\n      \"name\": \"dolor\",\n      \"release\": \"fugia\",\n      \"version\": \"id in\",\n      \"version_range\": \"nostrud consectetur consequat\"\n    },\n    {\n      \"arch\": \"enim nisi Lore\",\n      \"epoch\": \"dolor consectetur quis\",\n      \"format\": \"Lorem elit proident\",\n      \"license\": \"mollit esse\",\n      \"name\": \"laboris id n\",\n      \"release\": \"pariatur eiusmod cillum\",\n      \"version\": \"commodo laborum\",\n      \"version_range\": \"cupidatat in eu fugiat\"\n    }\n  ],\n  \"packages_black_list_enabled\": false,\n  \"packages_white_list\": [\n    {\n      \"arch\": \"esse eiusmod\",\n      \"epoch\": \"cupidatat mollit\",\n      \"format\": \"dolo\",\n      \"license\": \"ex\",\n      \"name\": \"enim\",\n      \"release\": \"ullamco sint id consectetur\",\n      \"version\": \"labore \",\n      \"version_range\": \"non fugiat ex\"\n    },\n    {\n      \"arch\": \"ea\",\n      \"epoch\": \"in elit\",\n      \"format\": \"non dolor\",\n      \"license\": \"magna culpa\",\n      \"name\": \"ut in ut\",\n      \"release\": \"ut occaecat ea dolore\",\n      \"version\": \"irure voluptate\",\n      \"version_range\": \"ipsum culpa ad\"\n    }\n  ],\n  \"packages_white_list_enabled\": true,\n  \"partial_results_image_fail\": true,\n  \"readonly\": false,\n  \"registries\": [\n    \"nulla Duis\",\n    \"cupidatat do adipisicing\"\n  ],\n  \"scan_sensitive_data\": false,\n  \"scap_enabled\": false,\n  \"scap_files\": [\n    {\n      \"description\": \"irure aliqua ipsum\",\n      \"engine\": \"ea laborum labore sit\",\n      \"last_modified\": 1791909,\n      \"name\": \"tempor laborum eiusmod\",\n      \"path\": \"exercitation amet nostrud ea\",\n      \"readonly\": false,\n      \"script_id\": \"cupidatat\",\n      \"snippet\": \"in\"\n    },\n    {\n      \"description\": \"nisi labore minim\",\n      \"engine\": \"labore dolor Excepteur aute sint\",\n      \"last_modified\": 38351237,\n      \"name\": \"deserunt cupidatat veniam esse\",\n      \"path\": \"sint ea\",\n      \"readonly\": true,\n      \"script_id\": \"ullamco deserunt\",\n      \"snippet\": \"id aliqua labore Excepteur\"\n    }\n  ],\n  \"scope\": {\n    \"expression\": \"sint quis in culpa dolore\",\n    \"variables\": [\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      },\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"application_scopes\": [\n    \"id irure do in\",\n    \"voluptate \"\n  ],\n  \"trusted_base_images\": [\n    {\n      \"author\": \"ut non\",\n      \"imageDigest\": \"eu occaecat exercitation\",\n      \"imageID\": 79685963,\n      \"imagename\": \"cillum anim Lorem nulla sunt\",\n      \"lastupdated\": 4022256,\n      \"registry\": \"sunt ex nostrud quis do\"\n    },\n    {\n      \"author\": \"elit laboris reprehenderit ea\",\n      \"imageDigest\": \"nisi\",\n      \"imageID\": -26826116,\n      \"imagename\": \"cupidatat et\",\n      \"lastupdated\": -91827000,\n      \"registry\": \"irure nostrud\"\n    }\n  ],\n  \"trusted_base_images_enabled\": true,\n  \"whitelisted_licenses\": [\n    \"commodo proident Lorem\",\n    \"dolor officia esse\"\n  ],\n  \"whitelisted_licenses_enabled\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/:name",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "cillum exercitation",
																	"description": "(Required) The Assurance Policy name to match"
																},
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) assurance type"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Input error - correct before resubmitting",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"allowed_images\": [\n    {\n      \"author\": \"esse\",\n      \"blacklisted\": true,\n      \"imageDigest\": \"sint esse Lorem enim\",\n      \"imageID\": -58075453,\n      \"imagename\": \"dolor Duis occaecat enim\",\n      \"lastupdated\": 75302319,\n      \"reason\": {},\n      \"registry\": \"ullamco\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"consequat sunt non\",\n      \"blacklisted\": false,\n      \"imageDigest\": \"mollit cupidatat nisi\",\n      \"imageID\": 92157605,\n      \"imagename\": \"elit deserunt eu\",\n      \"lastupdated\": -82217750,\n      \"reason\": {},\n      \"registry\": \"nisi irure sint\",\n      \"whitelisted\": true\n    }\n  ],\n  \"assurance_type\": \"ipsum irure\",\n  \"audit_on_failure\": true,\n  \"author\": \"fugiat ullamco esse\",\n  \"blacklisted_licenses\": [\n    \"Lorem sunt fugiat magna labor\",\n    \"amet\"\n  ],\n  \"blacklisted_licenses_enabled\": false,\n  \"block_failed\": true,\n  \"control_exclude_no_fix\": false,\n  \"custom_checks\": [\n    {\n      \"description\": \"ut eiusmod dolore cupidatat\",\n      \"engine\": \"sit culpa velit incididunt\",\n      \"last_modified\": 58461154,\n      \"name\": \"Ut dolor\",\n      \"path\": \"ut dolor Lorem fugiat\",\n      \"readonly\": false,\n      \"script_id\": \"ad veniam\",\n      \"snippet\": \"eiusmod dolor sit aliquip\"\n    },\n    {\n      \"description\": \"fugiat ea dolor nulla\",\n      \"engine\": \"Ut\",\n      \"last_modified\": -91278191,\n      \"name\": \"magna\",\n      \"path\": \"do consequat eu nulla cillum\",\n      \"readonly\": true,\n      \"script_id\": \"fugiat esse dolor dolor\",\n      \"snippet\": \"fugiat Ut\"\n    }\n  ],\n  \"custom_checks_enabled\": true,\n  \"cves_black_list\": [\n    \"aliquip\",\n    \"est ut\"\n  ],\n  \"cves_black_list_enabled\": true,\n  \"cves_white_list\": [\n    \"ipsum enim eu incididunt\",\n    \"incididunt \"\n  ],\n  \"cves_white_list_enabled\": false,\n  \"cvss_severity\": \"veniam non ut anim\",\n  \"cvss_severity_enabled\": true,\n  \"cvss_severity_exclude_no_fix\": false,\n  \"description\": \"irure amet velit\",\n  \"disallow_malware\": true,\n  \"docker_cis_enabled\": false,\n  \"domain\": \"dolor proident commodo\",\n  \"enforce_excessive_permissions\": false,\n  \"fail_cicd\": false,\n  \"force_microenforcer\": true,\n  \"function_integrity_enabled\": false,\n  \"blacklist_permissions_enabled\": true,\n  \"blacklist_permissions\": [\n    \"dolor est\",\n    \"id\"\n  ],\n  \"ignore_recently_published_vln\": false,\n  \"ignore_recently_published_vln_period\": 56589197,\n  \"ignore_risk_resources_enabled\": true,\n  \"ignored_risk_resources\": [\n    \"fugiat est reprehenderit\",\n    \"eu irure\"\n  ],\n  \"images\": [\n    \"eu nisi aliqua magna\",\n    \"nostrud in\"\n  ],\n  \"kube_cis_enabled\": false,\n  \"labels\": [\n    \"ullamco id\",\n    \"cupidatat veniam\"\n  ],\n  \"lastupdate\": \"1977-11-22T19:16:49.174Z\",\n  \"linux_cis_enabled\": true,\n  \"maximum_score\": -64829658,\n  \"maximum_score_enabled\": false,\n  \"maximum_score_exclude_no_fix\": false,\n  \"name\": \"nisi laboris\",\n  \"only_none_root_users\": false,\n  \"openshift_hardening_enabled\": true,\n  \"packages_black_list\": [\n    {\n      \"arch\": \"nostrud tempor cillum\",\n      \"epoch\": \"Ut\",\n      \"format\": \"veniam Lorem mollit dolore\",\n      \"license\": \"commodo esse\",\n      \"name\": \"dolor\",\n      \"release\": \"fugia\",\n      \"version\": \"id in\",\n      \"version_range\": \"nostrud consectetur consequat\"\n    },\n    {\n      \"arch\": \"enim nisi Lore\",\n      \"epoch\": \"dolor consectetur quis\",\n      \"format\": \"Lorem elit proident\",\n      \"license\": \"mollit esse\",\n      \"name\": \"laboris id n\",\n      \"release\": \"pariatur eiusmod cillum\",\n      \"version\": \"commodo laborum\",\n      \"version_range\": \"cupidatat in eu fugiat\"\n    }\n  ],\n  \"packages_black_list_enabled\": false,\n  \"packages_white_list\": [\n    {\n      \"arch\": \"esse eiusmod\",\n      \"epoch\": \"cupidatat mollit\",\n      \"format\": \"dolo\",\n      \"license\": \"ex\",\n      \"name\": \"enim\",\n      \"release\": \"ullamco sint id consectetur\",\n      \"version\": \"labore \",\n      \"version_range\": \"non fugiat ex\"\n    },\n    {\n      \"arch\": \"ea\",\n      \"epoch\": \"in elit\",\n      \"format\": \"non dolor\",\n      \"license\": \"magna culpa\",\n      \"name\": \"ut in ut\",\n      \"release\": \"ut occaecat ea dolore\",\n      \"version\": \"irure voluptate\",\n      \"version_range\": \"ipsum culpa ad\"\n    }\n  ],\n  \"packages_white_list_enabled\": true,\n  \"partial_results_image_fail\": true,\n  \"readonly\": false,\n  \"registries\": [\n    \"nulla Duis\",\n    \"cupidatat do adipisicing\"\n  ],\n  \"scan_sensitive_data\": false,\n  \"scap_enabled\": false,\n  \"scap_files\": [\n    {\n      \"description\": \"irure aliqua ipsum\",\n      \"engine\": \"ea laborum labore sit\",\n      \"last_modified\": 1791909,\n      \"name\": \"tempor laborum eiusmod\",\n      \"path\": \"exercitation amet nostrud ea\",\n      \"readonly\": false,\n      \"script_id\": \"cupidatat\",\n      \"snippet\": \"in\"\n    },\n    {\n      \"description\": \"nisi labore minim\",\n      \"engine\": \"labore dolor Excepteur aute sint\",\n      \"last_modified\": 38351237,\n      \"name\": \"deserunt cupidatat veniam esse\",\n      \"path\": \"sint ea\",\n      \"readonly\": true,\n      \"script_id\": \"ullamco deserunt\",\n      \"snippet\": \"id aliqua labore Excepteur\"\n    }\n  ],\n  \"scope\": {\n    \"expression\": \"sint quis in culpa dolore\",\n    \"variables\": [\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      },\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"application_scopes\": [\n    \"id irure do in\",\n    \"voluptate \"\n  ],\n  \"trusted_base_images\": [\n    {\n      \"author\": \"ut non\",\n      \"imageDigest\": \"eu occaecat exercitation\",\n      \"imageID\": 79685963,\n      \"imagename\": \"cillum anim Lorem nulla sunt\",\n      \"lastupdated\": 4022256,\n      \"registry\": \"sunt ex nostrud quis do\"\n    },\n    {\n      \"author\": \"elit laboris reprehenderit ea\",\n      \"imageDigest\": \"nisi\",\n      \"imageID\": -26826116,\n      \"imagename\": \"cupidatat et\",\n      \"lastupdated\": -91827000,\n      \"registry\": \"irure nostrud\"\n    }\n  ],\n  \"trusted_base_images_enabled\": true,\n  \"whitelisted_licenses\": [\n    \"commodo proident Lorem\",\n    \"dolor officia esse\"\n  ],\n  \"whitelisted_licenses_enabled\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/:name",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "cillum exercitation",
																	"description": "(Required) The Assurance Policy name to match"
																},
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) assurance type"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "No matching policy found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"allowed_images\": [\n    {\n      \"author\": \"esse\",\n      \"blacklisted\": true,\n      \"imageDigest\": \"sint esse Lorem enim\",\n      \"imageID\": -58075453,\n      \"imagename\": \"dolor Duis occaecat enim\",\n      \"lastupdated\": 75302319,\n      \"reason\": {},\n      \"registry\": \"ullamco\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"consequat sunt non\",\n      \"blacklisted\": false,\n      \"imageDigest\": \"mollit cupidatat nisi\",\n      \"imageID\": 92157605,\n      \"imagename\": \"elit deserunt eu\",\n      \"lastupdated\": -82217750,\n      \"reason\": {},\n      \"registry\": \"nisi irure sint\",\n      \"whitelisted\": true\n    }\n  ],\n  \"assurance_type\": \"ipsum irure\",\n  \"audit_on_failure\": true,\n  \"author\": \"fugiat ullamco esse\",\n  \"blacklisted_licenses\": [\n    \"Lorem sunt fugiat magna labor\",\n    \"amet\"\n  ],\n  \"blacklisted_licenses_enabled\": false,\n  \"block_failed\": true,\n  \"control_exclude_no_fix\": false,\n  \"custom_checks\": [\n    {\n      \"description\": \"ut eiusmod dolore cupidatat\",\n      \"engine\": \"sit culpa velit incididunt\",\n      \"last_modified\": 58461154,\n      \"name\": \"Ut dolor\",\n      \"path\": \"ut dolor Lorem fugiat\",\n      \"readonly\": false,\n      \"script_id\": \"ad veniam\",\n      \"snippet\": \"eiusmod dolor sit aliquip\"\n    },\n    {\n      \"description\": \"fugiat ea dolor nulla\",\n      \"engine\": \"Ut\",\n      \"last_modified\": -91278191,\n      \"name\": \"magna\",\n      \"path\": \"do consequat eu nulla cillum\",\n      \"readonly\": true,\n      \"script_id\": \"fugiat esse dolor dolor\",\n      \"snippet\": \"fugiat Ut\"\n    }\n  ],\n  \"custom_checks_enabled\": true,\n  \"cves_black_list\": [\n    \"aliquip\",\n    \"est ut\"\n  ],\n  \"cves_black_list_enabled\": true,\n  \"cves_white_list\": [\n    \"ipsum enim eu incididunt\",\n    \"incididunt \"\n  ],\n  \"cves_white_list_enabled\": false,\n  \"cvss_severity\": \"veniam non ut anim\",\n  \"cvss_severity_enabled\": true,\n  \"cvss_severity_exclude_no_fix\": false,\n  \"description\": \"irure amet velit\",\n  \"disallow_malware\": true,\n  \"docker_cis_enabled\": false,\n  \"domain\": \"dolor proident commodo\",\n  \"enforce_excessive_permissions\": false,\n  \"fail_cicd\": false,\n  \"force_microenforcer\": true,\n  \"function_integrity_enabled\": false,\n  \"blacklist_permissions_enabled\": true,\n  \"blacklist_permissions\": [\n    \"dolor est\",\n    \"id\"\n  ],\n  \"ignore_recently_published_vln\": false,\n  \"ignore_recently_published_vln_period\": 56589197,\n  \"ignore_risk_resources_enabled\": true,\n  \"ignored_risk_resources\": [\n    \"fugiat est reprehenderit\",\n    \"eu irure\"\n  ],\n  \"images\": [\n    \"eu nisi aliqua magna\",\n    \"nostrud in\"\n  ],\n  \"kube_cis_enabled\": false,\n  \"labels\": [\n    \"ullamco id\",\n    \"cupidatat veniam\"\n  ],\n  \"lastupdate\": \"1977-11-22T19:16:49.174Z\",\n  \"linux_cis_enabled\": true,\n  \"maximum_score\": -64829658,\n  \"maximum_score_enabled\": false,\n  \"maximum_score_exclude_no_fix\": false,\n  \"name\": \"nisi laboris\",\n  \"only_none_root_users\": false,\n  \"openshift_hardening_enabled\": true,\n  \"packages_black_list\": [\n    {\n      \"arch\": \"nostrud tempor cillum\",\n      \"epoch\": \"Ut\",\n      \"format\": \"veniam Lorem mollit dolore\",\n      \"license\": \"commodo esse\",\n      \"name\": \"dolor\",\n      \"release\": \"fugia\",\n      \"version\": \"id in\",\n      \"version_range\": \"nostrud consectetur consequat\"\n    },\n    {\n      \"arch\": \"enim nisi Lore\",\n      \"epoch\": \"dolor consectetur quis\",\n      \"format\": \"Lorem elit proident\",\n      \"license\": \"mollit esse\",\n      \"name\": \"laboris id n\",\n      \"release\": \"pariatur eiusmod cillum\",\n      \"version\": \"commodo laborum\",\n      \"version_range\": \"cupidatat in eu fugiat\"\n    }\n  ],\n  \"packages_black_list_enabled\": false,\n  \"packages_white_list\": [\n    {\n      \"arch\": \"esse eiusmod\",\n      \"epoch\": \"cupidatat mollit\",\n      \"format\": \"dolo\",\n      \"license\": \"ex\",\n      \"name\": \"enim\",\n      \"release\": \"ullamco sint id consectetur\",\n      \"version\": \"labore \",\n      \"version_range\": \"non fugiat ex\"\n    },\n    {\n      \"arch\": \"ea\",\n      \"epoch\": \"in elit\",\n      \"format\": \"non dolor\",\n      \"license\": \"magna culpa\",\n      \"name\": \"ut in ut\",\n      \"release\": \"ut occaecat ea dolore\",\n      \"version\": \"irure voluptate\",\n      \"version_range\": \"ipsum culpa ad\"\n    }\n  ],\n  \"packages_white_list_enabled\": true,\n  \"partial_results_image_fail\": true,\n  \"readonly\": false,\n  \"registries\": [\n    \"nulla Duis\",\n    \"cupidatat do adipisicing\"\n  ],\n  \"scan_sensitive_data\": false,\n  \"scap_enabled\": false,\n  \"scap_files\": [\n    {\n      \"description\": \"irure aliqua ipsum\",\n      \"engine\": \"ea laborum labore sit\",\n      \"last_modified\": 1791909,\n      \"name\": \"tempor laborum eiusmod\",\n      \"path\": \"exercitation amet nostrud ea\",\n      \"readonly\": false,\n      \"script_id\": \"cupidatat\",\n      \"snippet\": \"in\"\n    },\n    {\n      \"description\": \"nisi labore minim\",\n      \"engine\": \"labore dolor Excepteur aute sint\",\n      \"last_modified\": 38351237,\n      \"name\": \"deserunt cupidatat veniam esse\",\n      \"path\": \"sint ea\",\n      \"readonly\": true,\n      \"script_id\": \"ullamco deserunt\",\n      \"snippet\": \"id aliqua labore Excepteur\"\n    }\n  ],\n  \"scope\": {\n    \"expression\": \"sint quis in culpa dolore\",\n    \"variables\": [\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      },\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"application_scopes\": [\n    \"id irure do in\",\n    \"voluptate \"\n  ],\n  \"trusted_base_images\": [\n    {\n      \"author\": \"ut non\",\n      \"imageDigest\": \"eu occaecat exercitation\",\n      \"imageID\": 79685963,\n      \"imagename\": \"cillum anim Lorem nulla sunt\",\n      \"lastupdated\": 4022256,\n      \"registry\": \"sunt ex nostrud quis do\"\n    },\n    {\n      \"author\": \"elit laboris reprehenderit ea\",\n      \"imageDigest\": \"nisi\",\n      \"imageID\": -26826116,\n      \"imagename\": \"cupidatat et\",\n      \"lastupdated\": -91827000,\n      \"registry\": \"irure nostrud\"\n    }\n  ],\n  \"trusted_base_images_enabled\": true,\n  \"whitelisted_licenses\": [\n    \"commodo proident Lorem\",\n    \"dolor officia esse\"\n  ],\n  \"whitelisted_licenses_enabled\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/:name",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "cillum exercitation",
																	"description": "(Required) The Assurance Policy name to match"
																},
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) assurance type"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										}
									]
								},
								{
									"name": "user scripts",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Delete Compliance Check script",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															},
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts/:id",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"user_scripts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "cillum exercitation",
																	"description": "(Required) The identifier of the user-generated (custom) Compliance Check script to delete"
																},
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														},
														"description": "Delete identified user-generated (custom) Compliance Check script"
													},
													"response": [
														{
															"name": "User-generated (custom) Compliance Check script deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "cillum exercitation",
																		"description": "(Required) Authorization header must include Bearer token or Basic authentication"
																	}
																],
																"url": {
																	"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts/:id",
																	"host": [
																		"{{aqua_url_v2}}"
																	],
																	"path": [
																		"assurance_policy",
																		":type",
																		"user_scripts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "cillum exercitation",
																			"description": "(Required) The identifier of the user-generated (custom) Compliance Check script to delete"
																		},
																		{
																			"key": "type",
																			"value": "image",
																			"description": "(Required) Assurance type (only type 'image' is supported)"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "No matching script found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "cillum exercitation",
																		"description": "(Required) Authorization header must include Bearer token or Basic authentication"
																	}
																],
																"url": {
																	"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts/:id",
																	"host": [
																		"{{aqua_url_v2}}"
																	],
																	"path": [
																		"assurance_policy",
																		":type",
																		"user_scripts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "cillum exercitation",
																			"description": "(Required) The identifier of the user-generated (custom) Compliance Check script to delete"
																		},
																		{
																			"key": "type",
																			"value": "image",
																			"description": "(Required) Assurance type (only type 'image' is supported)"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
														}
													]
												},
												{
													"name": "Get information on Compliance Check script",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer {{token}}",
																"type": "text"
															},
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts/:id",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"user_scripts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "cillum exercitation",
																	"description": "(Required) Identifier of the specific user-generated (custom) Compliance Check script"
																},
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														},
														"description": "Retrieve details of the user-generated (custom) Compliance Check script specified by the 'path' parameter."
													},
													"response": [
														{
															"name": "Details of the specified user-generated (custom) Custom Compliance Check script",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "cillum exercitation",
																		"description": "(Required) Authorization header must include Bearer token or Basic authentication"
																	}
																],
																"url": {
																	"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts/:id",
																	"host": [
																		"{{aqua_url_v2}}"
																	],
																	"path": [
																		"assurance_policy",
																		":type",
																		"user_scripts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "cillum exercitation",
																			"description": "(Required) Identifier of the specific user-generated (custom) Compliance Check script"
																		},
																		{
																			"key": "type",
																			"value": "image",
																			"description": "(Required) Assurance type (only type 'image' is supported)"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"description\": \"id ullamco non ea\",\n  \"engine\": \"fugiat incididunt\",\n  \"last_modified\": 40645713,\n  \"name\": \"qui voluptate deserun\",\n  \"path\": \"aliqua deserunt laboris ut\",\n  \"readonly\": false,\n  \"script_id\": \"eiusmod ex aliqua sint\",\n  \"snippet\": \"sit\"\n}"
														},
														{
															"name": "No images found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "cillum exercitation",
																		"description": "(Required) Authorization header must include Bearer token or Basic authentication"
																	}
																],
																"url": {
																	"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts/:id",
																	"host": [
																		"{{aqua_url_v2}}"
																	],
																	"path": [
																		"assurance_policy",
																		":type",
																		"user_scripts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "cillum exercitation",
																			"description": "(Required) Identifier of the specific user-generated (custom) Compliance Check script"
																		},
																		{
																			"key": "type",
																			"value": "image",
																			"description": "(Required) Assurance type (only type 'image' is supported)"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Invalid Assurance Policy type",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "cillum exercitation",
																		"description": "(Required) Authorization header must include Bearer token or Basic authentication"
																	}
																],
																"url": {
																	"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts/:id",
																	"host": [
																		"{{aqua_url_v2}}"
																	],
																	"path": [
																		"assurance_policy",
																		":type",
																		"user_scripts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "cillum exercitation",
																			"description": "(Required) Identifier of the specific user-generated (custom) Compliance Check script"
																		},
																		{
																			"key": "type",
																			"value": "image",
																			"description": "(Required) Assurance type (only type 'image' is supported)"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
														},
														{
															"name": "Internal error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "cillum exercitation",
																		"description": "(Required) Authorization header must include Bearer token or Basic authentication"
																	}
																],
																"url": {
																	"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts/:id",
																	"host": [
																		"{{aqua_url_v2}}"
																	],
																	"path": [
																		"assurance_policy",
																		":type",
																		"user_scripts",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "cillum exercitation",
																			"description": "(Required) Identifier of the specific user-generated (custom) Compliance Check script"
																		},
																		{
																			"key": "type",
																			"value": "image",
																			"description": "(Required) Assurance type (only type 'image' is supported)"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
														}
													]
												}
											]
										},
										{
											"name": "List custom Compliance Check scripts",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														"user_scripts"
													],
													"query": [
														{
															"key": "search",
															"value": "cillum exercitation",
															"description": "Search for user scripts that match the search string.",
															"disabled": true
														},
														{
															"key": "order_by",
															"value": "cillum exercitation",
															"description": "Set ordering of the results. Can be repeated to order the results by multiple attributes. Allowed attributes are 'name' and 'num_users'.",
															"disabled": true
														},
														{
															"key": "engine",
															"value": "cillum exercitation",
															"description": "List only the scripts that run on the specified engine.",
															"disabled": true
														},
														{
															"key": "type",
															"value": "cillum exercitation",
															"description": "List only scripts of this type [Unix shell (bash) scripts, PowerShell scripts, or OVAL files].",
															"disabled": true
														},
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "Use the name as the search term",
															"disabled": true
														},
														{
															"key": "id",
															"value": "cillum exercitation",
															"description": "Filter the list with the ID string.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) Assurance type (only type 'image' is supported)"
														}
													]
												},
												"description": "Retrieve list of all user-generated (custom) Compliance Check scripts"
											},
											"response": [
												{
													"name": "List of matching user scripts",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts?search=cillum exercitation&order_by=cillum exercitation&engine=cillum exercitation&type=cillum exercitation&name=cillum exercitation&id=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"user_scripts"
															],
															"query": [
																{
																	"key": "search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "order_by",
																	"value": "cillum exercitation"
																},
																{
																	"key": "engine",
																	"value": "cillum exercitation"
																},
																{
																	"key": "type",
																	"value": "cillum exercitation"
																},
																{
																	"key": "name",
																	"value": "cillum exercitation"
																},
																{
																	"key": "id",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"description\": \"nisi Duis\",\n    \"engine\": \"sed aliqua qui tempor\",\n    \"last_modified\": -19941884,\n    \"name\": \"velit non Ut irure\",\n    \"path\": \"consectetur d\",\n    \"readonly\": true,\n    \"script_id\": \"sunt\",\n    \"snippet\": \"laboris\"\n  },\n  {\n    \"description\": \"nisi adipisicing\",\n    \"engine\": \"adipisicing nisi sed Duis nostrud\",\n    \"last_modified\": 8554268,\n    \"name\": \"adipisicing ut cillum in\",\n    \"path\": \"labore dolor non\",\n    \"readonly\": false,\n    \"script_id\": \"consequat in elit cupidatat\",\n    \"snippet\": \"cupidatat irur\"\n  }\n]"
												},
												{
													"name": "No scripts found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts?search=cillum exercitation&order_by=cillum exercitation&engine=cillum exercitation&type=cillum exercitation&name=cillum exercitation&id=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"user_scripts"
															],
															"query": [
																{
																	"key": "search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "order_by",
																	"value": "cillum exercitation"
																},
																{
																	"key": "engine",
																	"value": "cillum exercitation"
																},
																{
																	"key": "type",
																	"value": "cillum exercitation"
																},
																{
																	"key": "name",
																	"value": "cillum exercitation"
																},
																{
																	"key": "id",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts?search=cillum exercitation&order_by=cillum exercitation&engine=cillum exercitation&type=cillum exercitation&name=cillum exercitation&id=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"user_scripts"
															],
															"query": [
																{
																	"key": "search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "order_by",
																	"value": "cillum exercitation"
																},
																{
																	"key": "engine",
																	"value": "cillum exercitation"
																},
																{
																	"key": "type",
																	"value": "cillum exercitation"
																},
																{
																	"key": "name",
																	"value": "cillum exercitation"
																},
																{
																	"key": "id",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "Update custom Compliance Check scripts",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"description\": \"culpa occaecat\",\n    \"engine\": \"mollit\",\n    \"last_modified\": -97107456,\n    \"name\": \"laborum mol\",\n    \"path\": \"est cupidatat amet ut\",\n    \"readonly\": true,\n    \"script_id\": \"sit ipsum consequat do\",\n    \"snippet\": \"elit ullamco al\"\n  },\n  {\n    \"description\": \"dolor cillum elit Ut esse\",\n    \"engine\": \"proident d\",\n    \"last_modified\": 17151906,\n    \"name\": \"in labore aliqua\",\n    \"path\": \"in id ullamco mollit\",\n    \"readonly\": false,\n    \"script_id\": \"laboris\",\n    \"snippet\": \"dolore Lorem deserunt occaecat\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														"user_scripts"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) Assurance type (only type 'image' is supported)"
														}
													]
												},
												"description": "Update the set of user-generated (custom) Compliance Check scripts"
											},
											"response": [
												{
													"name": "List saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"description\": \"culpa occaecat\",\n    \"engine\": \"mollit\",\n    \"last_modified\": -97107456,\n    \"name\": \"laborum mol\",\n    \"path\": \"est cupidatat amet ut\",\n    \"readonly\": true,\n    \"script_id\": \"sit ipsum consequat do\",\n    \"snippet\": \"elit ullamco al\"\n  },\n  {\n    \"description\": \"dolor cillum elit Ut esse\",\n    \"engine\": \"proident d\",\n    \"last_modified\": 17151906,\n    \"name\": \"in labore aliqua\",\n    \"path\": \"in id ullamco mollit\",\n    \"readonly\": false,\n    \"script_id\": \"laboris\",\n    \"snippet\": \"dolore Lorem deserunt occaecat\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"user_scripts"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Input error - failed reading image lists",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"description\": \"culpa occaecat\",\n    \"engine\": \"mollit\",\n    \"last_modified\": -97107456,\n    \"name\": \"laborum mol\",\n    \"path\": \"est cupidatat amet ut\",\n    \"readonly\": true,\n    \"script_id\": \"sit ipsum consequat do\",\n    \"snippet\": \"elit ullamco al\"\n  },\n  {\n    \"description\": \"dolor cillum elit Ut esse\",\n    \"engine\": \"proident d\",\n    \"last_modified\": 17151906,\n    \"name\": \"in labore aliqua\",\n    \"path\": \"in id ullamco mollit\",\n    \"readonly\": false,\n    \"script_id\": \"laboris\",\n    \"snippet\": \"dolore Lorem deserunt occaecat\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"user_scripts"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Failed saving image permission lists",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"description\": \"culpa occaecat\",\n    \"engine\": \"mollit\",\n    \"last_modified\": -97107456,\n    \"name\": \"laborum mol\",\n    \"path\": \"est cupidatat amet ut\",\n    \"readonly\": true,\n    \"script_id\": \"sit ipsum consequat do\",\n    \"snippet\": \"elit ullamco al\"\n  },\n  {\n    \"description\": \"dolor cillum elit Ut esse\",\n    \"engine\": \"proident d\",\n    \"last_modified\": 17151906,\n    \"name\": \"in labore aliqua\",\n    \"path\": \"in id ullamco mollit\",\n    \"readonly\": false,\n    \"script_id\": \"laboris\",\n    \"snippet\": \"dolore Lorem deserunt occaecat\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/user_scripts",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"user_scripts"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										}
									]
								},
								{
									"name": "image permissions",
									"item": [
										{
											"name": "Get filtered list of allowed/blocked images",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/image_permissions",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														"image_permissions"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) Assurance type (only type 'image' is supported)"
														}
													]
												},
												"description": "List allowed/blocked images"
											},
											"response": [
												{
													"name": "Filtered list of allowed/blocked images",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/image_permissions",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"image_permissions"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"blacklisted_images\": [\n    {\n      \"author\": \"ex aliquip deserunt nostrud\",\n      \"blacklisted\": true,\n      \"disallowed\": true,\n      \"image_digest\": \"eiusmod amet cillum dolore incididunt\",\n      \"image_id\": -29136393,\n      \"image_name\": \"et eiusm\",\n      \"lastupdated\": -86583712,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"el\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"Ut\",\n      \"blacklisted\": false,\n      \"disallowed\": false,\n      \"image_digest\": \"dolor\",\n      \"image_id\": 68793703,\n      \"image_name\": \"ex Lorem cillum sed\",\n      \"lastupdated\": 41114088,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"amet anim\",\n      \"whitelisted\": true\n    }\n  ],\n  \"whitelisted_images\": [\n    {\n      \"author\": \"amet do tempor\",\n      \"blacklisted\": true,\n      \"disallowed\": true,\n      \"image_digest\": \"ea ullamco aliquip tempor mollit\",\n      \"image_id\": -86976618,\n      \"image_name\": \"et\",\n      \"lastupdated\": 41312451,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"dolore magna anim\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"in labore sed dolor\",\n      \"blacklisted\": false,\n      \"disallowed\": false,\n      \"image_digest\": \"dolor\",\n      \"image_id\": -54296344,\n      \"image_name\": \"amet reprehenderit in\",\n      \"lastupdated\": -503987,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"dolor commodo minim sint\",\n      \"whitelisted\": false\n    }\n  ]\n}"
												},
												{
													"name": "No images found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/image_permissions",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"image_permissions"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid type input",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/image_permissions",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"image_permissions"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Internal error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/image_permissions",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"image_permissions"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "Update the list of allowed/blocked images",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"blacklisted_images\": [\n    {\n      \"author\": \"ut ullamco exercitation minim veniam\",\n      \"blacklisted\": false,\n      \"disallowed\": true,\n      \"image_digest\": \"proident laboris labore\",\n      \"image_id\": -42966982,\n      \"image_name\": \"ut\",\n      \"lastupdated\": -37117968,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"sit eiusmod amet ea\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"non culpa\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"quis dolore in\",\n      \"image_id\": 48201045,\n      \"image_name\": \"esse ad\",\n      \"lastupdated\": 6028008,\n      \"pending\": false,\n      \"reason\": {},\n      \"registry\": \"commodo id quis\",\n      \"whitelisted\": true\n    }\n  ],\n  \"whitelisted_images\": [\n    {\n      \"author\": \"proident\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"anim officia velit\",\n      \"image_id\": 90971673,\n      \"image_name\": \"dolore officia adipisicing anim laboris\",\n      \"lastupdated\": -27783989,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"dolor do\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"elit dolore eu Excepte\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"aliquip\",\n      \"image_id\": -27841278,\n      \"image_name\": \"Duis labore incididunt ex magna\",\n      \"lastupdated\": 66040739,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"se\",\n      \"whitelisted\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/image_permissions",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														"image_permissions"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) Assurance type (only type 'image' is supported)"
														}
													]
												},
												"description": "Update the list of allowed/blocked images"
											},
											"response": [
												{
													"name": "List updated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"blacklisted_images\": [\n    {\n      \"author\": \"ut ullamco exercitation minim veniam\",\n      \"blacklisted\": false,\n      \"disallowed\": true,\n      \"image_digest\": \"proident laboris labore\",\n      \"image_id\": -42966982,\n      \"image_name\": \"ut\",\n      \"lastupdated\": -37117968,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"sit eiusmod amet ea\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"non culpa\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"quis dolore in\",\n      \"image_id\": 48201045,\n      \"image_name\": \"esse ad\",\n      \"lastupdated\": 6028008,\n      \"pending\": false,\n      \"reason\": {},\n      \"registry\": \"commodo id quis\",\n      \"whitelisted\": true\n    }\n  ],\n  \"whitelisted_images\": [\n    {\n      \"author\": \"proident\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"anim officia velit\",\n      \"image_id\": 90971673,\n      \"image_name\": \"dolore officia adipisicing anim laboris\",\n      \"lastupdated\": -27783989,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"dolor do\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"elit dolore eu Excepte\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"aliquip\",\n      \"image_id\": -27841278,\n      \"image_name\": \"Duis labore incididunt ex magna\",\n      \"lastupdated\": 66040739,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"se\",\n      \"whitelisted\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/image_permissions",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"image_permissions"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Input error - list of images",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"blacklisted_images\": [\n    {\n      \"author\": \"ut ullamco exercitation minim veniam\",\n      \"blacklisted\": false,\n      \"disallowed\": true,\n      \"image_digest\": \"proident laboris labore\",\n      \"image_id\": -42966982,\n      \"image_name\": \"ut\",\n      \"lastupdated\": -37117968,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"sit eiusmod amet ea\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"non culpa\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"quis dolore in\",\n      \"image_id\": 48201045,\n      \"image_name\": \"esse ad\",\n      \"lastupdated\": 6028008,\n      \"pending\": false,\n      \"reason\": {},\n      \"registry\": \"commodo id quis\",\n      \"whitelisted\": true\n    }\n  ],\n  \"whitelisted_images\": [\n    {\n      \"author\": \"proident\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"anim officia velit\",\n      \"image_id\": 90971673,\n      \"image_name\": \"dolore officia adipisicing anim laboris\",\n      \"lastupdated\": -27783989,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"dolor do\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"elit dolore eu Excepte\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"aliquip\",\n      \"image_id\": -27841278,\n      \"image_name\": \"Duis labore incididunt ex magna\",\n      \"lastupdated\": 66040739,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"se\",\n      \"whitelisted\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/image_permissions",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"image_permissions"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Failed saving the image permission lists",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"blacklisted_images\": [\n    {\n      \"author\": \"ut ullamco exercitation minim veniam\",\n      \"blacklisted\": false,\n      \"disallowed\": true,\n      \"image_digest\": \"proident laboris labore\",\n      \"image_id\": -42966982,\n      \"image_name\": \"ut\",\n      \"lastupdated\": -37117968,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"sit eiusmod amet ea\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"non culpa\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"quis dolore in\",\n      \"image_id\": 48201045,\n      \"image_name\": \"esse ad\",\n      \"lastupdated\": 6028008,\n      \"pending\": false,\n      \"reason\": {},\n      \"registry\": \"commodo id quis\",\n      \"whitelisted\": true\n    }\n  ],\n  \"whitelisted_images\": [\n    {\n      \"author\": \"proident\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"anim officia velit\",\n      \"image_id\": 90971673,\n      \"image_name\": \"dolore officia adipisicing anim laboris\",\n      \"lastupdated\": -27783989,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"dolor do\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"elit dolore eu Excepte\",\n      \"blacklisted\": true,\n      \"disallowed\": false,\n      \"image_digest\": \"aliquip\",\n      \"image_id\": -27841278,\n      \"image_name\": \"Duis labore incididunt ex magna\",\n      \"lastupdated\": 66040739,\n      \"pending\": true,\n      \"reason\": {},\n      \"registry\": \"se\",\n      \"whitelisted\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/assurance_policy/:type/image_permissions",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"assurance_policy",
																":type",
																"image_permissions"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "image",
																	"description": "(Required) Assurance type (only type 'image' is supported)"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create Assurance Policy",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"allowed_images\": [\n    {\n      \"author\": \"esse\",\n      \"blacklisted\": true,\n      \"imageDigest\": \"sint esse Lorem enim\",\n      \"imageID\": -58075453,\n      \"imagename\": \"dolor Duis occaecat enim\",\n      \"lastupdated\": 75302319,\n      \"reason\": {},\n      \"registry\": \"ullamco\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"consequat sunt non\",\n      \"blacklisted\": false,\n      \"imageDigest\": \"mollit cupidatat nisi\",\n      \"imageID\": 92157605,\n      \"imagename\": \"elit deserunt eu\",\n      \"lastupdated\": -82217750,\n      \"reason\": {},\n      \"registry\": \"nisi irure sint\",\n      \"whitelisted\": true\n    }\n  ],\n  \"assurance_type\": \"ipsum irure\",\n  \"audit_on_failure\": true,\n  \"author\": \"fugiat ullamco esse\",\n  \"blacklisted_licenses\": [\n    \"Lorem sunt fugiat magna labor\",\n    \"amet\"\n  ],\n  \"blacklisted_licenses_enabled\": false,\n  \"block_failed\": true,\n  \"control_exclude_no_fix\": false,\n  \"custom_checks\": [\n    {\n      \"description\": \"ut eiusmod dolore cupidatat\",\n      \"engine\": \"sit culpa velit incididunt\",\n      \"last_modified\": 58461154,\n      \"name\": \"Ut dolor\",\n      \"path\": \"ut dolor Lorem fugiat\",\n      \"readonly\": false,\n      \"script_id\": \"ad veniam\",\n      \"snippet\": \"eiusmod dolor sit aliquip\"\n    },\n    {\n      \"description\": \"fugiat ea dolor nulla\",\n      \"engine\": \"Ut\",\n      \"last_modified\": -91278191,\n      \"name\": \"magna\",\n      \"path\": \"do consequat eu nulla cillum\",\n      \"readonly\": true,\n      \"script_id\": \"fugiat esse dolor dolor\",\n      \"snippet\": \"fugiat Ut\"\n    }\n  ],\n  \"custom_checks_enabled\": true,\n  \"cves_black_list\": [\n    \"aliquip\",\n    \"est ut\"\n  ],\n  \"cves_black_list_enabled\": true,\n  \"cves_white_list\": [\n    \"ipsum enim eu incididunt\",\n    \"incididunt \"\n  ],\n  \"cves_white_list_enabled\": false,\n  \"cvss_severity\": \"veniam non ut anim\",\n  \"cvss_severity_enabled\": true,\n  \"cvss_severity_exclude_no_fix\": false,\n  \"description\": \"irure amet velit\",\n  \"disallow_malware\": true,\n  \"docker_cis_enabled\": false,\n  \"domain\": \"dolor proident commodo\",\n  \"enforce_excessive_permissions\": false,\n  \"fail_cicd\": false,\n  \"force_microenforcer\": true,\n  \"function_integrity_enabled\": false,\n  \"blacklist_permissions_enabled\": true,\n  \"blacklist_permissions\": [\n    \"dolor est\",\n    \"id\"\n  ],\n  \"ignore_recently_published_vln\": false,\n  \"ignore_recently_published_vln_period\": 56589197,\n  \"ignore_risk_resources_enabled\": true,\n  \"ignored_risk_resources\": [\n    \"fugiat est reprehenderit\",\n    \"eu irure\"\n  ],\n  \"images\": [\n    \"eu nisi aliqua magna\",\n    \"nostrud in\"\n  ],\n  \"kube_cis_enabled\": false,\n  \"labels\": [\n    \"ullamco id\",\n    \"cupidatat veniam\"\n  ],\n  \"lastupdate\": \"1977-11-22T19:16:49.174Z\",\n  \"linux_cis_enabled\": true,\n  \"maximum_score\": -64829658,\n  \"maximum_score_enabled\": false,\n  \"maximum_score_exclude_no_fix\": false,\n  \"name\": \"nisi laboris\",\n  \"only_none_root_users\": false,\n  \"openshift_hardening_enabled\": true,\n  \"packages_black_list\": [\n    {\n      \"arch\": \"nostrud tempor cillum\",\n      \"epoch\": \"Ut\",\n      \"format\": \"veniam Lorem mollit dolore\",\n      \"license\": \"commodo esse\",\n      \"name\": \"dolor\",\n      \"release\": \"fugia\",\n      \"version\": \"id in\",\n      \"version_range\": \"nostrud consectetur consequat\"\n    },\n    {\n      \"arch\": \"enim nisi Lore\",\n      \"epoch\": \"dolor consectetur quis\",\n      \"format\": \"Lorem elit proident\",\n      \"license\": \"mollit esse\",\n      \"name\": \"laboris id n\",\n      \"release\": \"pariatur eiusmod cillum\",\n      \"version\": \"commodo laborum\",\n      \"version_range\": \"cupidatat in eu fugiat\"\n    }\n  ],\n  \"packages_black_list_enabled\": false,\n  \"packages_white_list\": [\n    {\n      \"arch\": \"esse eiusmod\",\n      \"epoch\": \"cupidatat mollit\",\n      \"format\": \"dolo\",\n      \"license\": \"ex\",\n      \"name\": \"enim\",\n      \"release\": \"ullamco sint id consectetur\",\n      \"version\": \"labore \",\n      \"version_range\": \"non fugiat ex\"\n    },\n    {\n      \"arch\": \"ea\",\n      \"epoch\": \"in elit\",\n      \"format\": \"non dolor\",\n      \"license\": \"magna culpa\",\n      \"name\": \"ut in ut\",\n      \"release\": \"ut occaecat ea dolore\",\n      \"version\": \"irure voluptate\",\n      \"version_range\": \"ipsum culpa ad\"\n    }\n  ],\n  \"packages_white_list_enabled\": true,\n  \"partial_results_image_fail\": true,\n  \"readonly\": false,\n  \"registries\": [\n    \"nulla Duis\",\n    \"cupidatat do adipisicing\"\n  ],\n  \"scan_sensitive_data\": false,\n  \"scap_enabled\": false,\n  \"scap_files\": [\n    {\n      \"description\": \"irure aliqua ipsum\",\n      \"engine\": \"ea laborum labore sit\",\n      \"last_modified\": 1791909,\n      \"name\": \"tempor laborum eiusmod\",\n      \"path\": \"exercitation amet nostrud ea\",\n      \"readonly\": false,\n      \"script_id\": \"cupidatat\",\n      \"snippet\": \"in\"\n    },\n    {\n      \"description\": \"nisi labore minim\",\n      \"engine\": \"labore dolor Excepteur aute sint\",\n      \"last_modified\": 38351237,\n      \"name\": \"deserunt cupidatat veniam esse\",\n      \"path\": \"sint ea\",\n      \"readonly\": true,\n      \"script_id\": \"ullamco deserunt\",\n      \"snippet\": \"id aliqua labore Excepteur\"\n    }\n  ],\n  \"scope\": {\n    \"expression\": \"sint quis in culpa dolore\",\n    \"variables\": [\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      },\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"application_scopes\": [\n    \"id irure do in\",\n    \"voluptate \"\n  ],\n  \"trusted_base_images\": [\n    {\n      \"author\": \"ut non\",\n      \"imageDigest\": \"eu occaecat exercitation\",\n      \"imageID\": 79685963,\n      \"imagename\": \"cillum anim Lorem nulla sunt\",\n      \"lastupdated\": 4022256,\n      \"registry\": \"sunt ex nostrud quis do\"\n    },\n    {\n      \"author\": \"elit laboris reprehenderit ea\",\n      \"imageDigest\": \"nisi\",\n      \"imageID\": -26826116,\n      \"imagename\": \"cupidatat et\",\n      \"lastupdated\": -91827000,\n      \"registry\": \"irure nostrud\"\n    }\n  ],\n  \"trusted_base_images_enabled\": true,\n  \"whitelisted_licenses\": [\n    \"commodo proident Lorem\",\n    \"dolor officia esse\"\n  ],\n  \"whitelisted_licenses_enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/assurance_policy/:type",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"assurance_policy",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "image",
													"description": "(Required) assurance type"
												}
											]
										},
										"description": "Create new Assurance Policy based on details specified. Note: The 'readonly' attribute can only be set to false when creating an Assurance Policy."
									},
									"response": [
										{
											"name": "Assurance Policy saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowed_images\": [\n    {\n      \"author\": \"esse\",\n      \"blacklisted\": true,\n      \"imageDigest\": \"sint esse Lorem enim\",\n      \"imageID\": -58075453,\n      \"imagename\": \"dolor Duis occaecat enim\",\n      \"lastupdated\": 75302319,\n      \"reason\": {},\n      \"registry\": \"ullamco\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"consequat sunt non\",\n      \"blacklisted\": false,\n      \"imageDigest\": \"mollit cupidatat nisi\",\n      \"imageID\": 92157605,\n      \"imagename\": \"elit deserunt eu\",\n      \"lastupdated\": -82217750,\n      \"reason\": {},\n      \"registry\": \"nisi irure sint\",\n      \"whitelisted\": true\n    }\n  ],\n  \"assurance_type\": \"ipsum irure\",\n  \"audit_on_failure\": true,\n  \"author\": \"fugiat ullamco esse\",\n  \"blacklisted_licenses\": [\n    \"Lorem sunt fugiat magna labor\",\n    \"amet\"\n  ],\n  \"blacklisted_licenses_enabled\": false,\n  \"block_failed\": true,\n  \"control_exclude_no_fix\": false,\n  \"custom_checks\": [\n    {\n      \"description\": \"ut eiusmod dolore cupidatat\",\n      \"engine\": \"sit culpa velit incididunt\",\n      \"last_modified\": 58461154,\n      \"name\": \"Ut dolor\",\n      \"path\": \"ut dolor Lorem fugiat\",\n      \"readonly\": false,\n      \"script_id\": \"ad veniam\",\n      \"snippet\": \"eiusmod dolor sit aliquip\"\n    },\n    {\n      \"description\": \"fugiat ea dolor nulla\",\n      \"engine\": \"Ut\",\n      \"last_modified\": -91278191,\n      \"name\": \"magna\",\n      \"path\": \"do consequat eu nulla cillum\",\n      \"readonly\": true,\n      \"script_id\": \"fugiat esse dolor dolor\",\n      \"snippet\": \"fugiat Ut\"\n    }\n  ],\n  \"custom_checks_enabled\": true,\n  \"cves_black_list\": [\n    \"aliquip\",\n    \"est ut\"\n  ],\n  \"cves_black_list_enabled\": true,\n  \"cves_white_list\": [\n    \"ipsum enim eu incididunt\",\n    \"incididunt \"\n  ],\n  \"cves_white_list_enabled\": false,\n  \"cvss_severity\": \"veniam non ut anim\",\n  \"cvss_severity_enabled\": true,\n  \"cvss_severity_exclude_no_fix\": false,\n  \"description\": \"irure amet velit\",\n  \"disallow_malware\": true,\n  \"docker_cis_enabled\": false,\n  \"domain\": \"dolor proident commodo\",\n  \"enforce_excessive_permissions\": false,\n  \"fail_cicd\": false,\n  \"force_microenforcer\": true,\n  \"function_integrity_enabled\": false,\n  \"blacklist_permissions_enabled\": true,\n  \"blacklist_permissions\": [\n    \"dolor est\",\n    \"id\"\n  ],\n  \"ignore_recently_published_vln\": false,\n  \"ignore_recently_published_vln_period\": 56589197,\n  \"ignore_risk_resources_enabled\": true,\n  \"ignored_risk_resources\": [\n    \"fugiat est reprehenderit\",\n    \"eu irure\"\n  ],\n  \"images\": [\n    \"eu nisi aliqua magna\",\n    \"nostrud in\"\n  ],\n  \"kube_cis_enabled\": false,\n  \"labels\": [\n    \"ullamco id\",\n    \"cupidatat veniam\"\n  ],\n  \"lastupdate\": \"1977-11-22T19:16:49.174Z\",\n  \"linux_cis_enabled\": true,\n  \"maximum_score\": -64829658,\n  \"maximum_score_enabled\": false,\n  \"maximum_score_exclude_no_fix\": false,\n  \"name\": \"nisi laboris\",\n  \"only_none_root_users\": false,\n  \"openshift_hardening_enabled\": true,\n  \"packages_black_list\": [\n    {\n      \"arch\": \"nostrud tempor cillum\",\n      \"epoch\": \"Ut\",\n      \"format\": \"veniam Lorem mollit dolore\",\n      \"license\": \"commodo esse\",\n      \"name\": \"dolor\",\n      \"release\": \"fugia\",\n      \"version\": \"id in\",\n      \"version_range\": \"nostrud consectetur consequat\"\n    },\n    {\n      \"arch\": \"enim nisi Lore\",\n      \"epoch\": \"dolor consectetur quis\",\n      \"format\": \"Lorem elit proident\",\n      \"license\": \"mollit esse\",\n      \"name\": \"laboris id n\",\n      \"release\": \"pariatur eiusmod cillum\",\n      \"version\": \"commodo laborum\",\n      \"version_range\": \"cupidatat in eu fugiat\"\n    }\n  ],\n  \"packages_black_list_enabled\": false,\n  \"packages_white_list\": [\n    {\n      \"arch\": \"esse eiusmod\",\n      \"epoch\": \"cupidatat mollit\",\n      \"format\": \"dolo\",\n      \"license\": \"ex\",\n      \"name\": \"enim\",\n      \"release\": \"ullamco sint id consectetur\",\n      \"version\": \"labore \",\n      \"version_range\": \"non fugiat ex\"\n    },\n    {\n      \"arch\": \"ea\",\n      \"epoch\": \"in elit\",\n      \"format\": \"non dolor\",\n      \"license\": \"magna culpa\",\n      \"name\": \"ut in ut\",\n      \"release\": \"ut occaecat ea dolore\",\n      \"version\": \"irure voluptate\",\n      \"version_range\": \"ipsum culpa ad\"\n    }\n  ],\n  \"packages_white_list_enabled\": true,\n  \"partial_results_image_fail\": true,\n  \"readonly\": false,\n  \"registries\": [\n    \"nulla Duis\",\n    \"cupidatat do adipisicing\"\n  ],\n  \"scan_sensitive_data\": false,\n  \"scap_enabled\": false,\n  \"scap_files\": [\n    {\n      \"description\": \"irure aliqua ipsum\",\n      \"engine\": \"ea laborum labore sit\",\n      \"last_modified\": 1791909,\n      \"name\": \"tempor laborum eiusmod\",\n      \"path\": \"exercitation amet nostrud ea\",\n      \"readonly\": false,\n      \"script_id\": \"cupidatat\",\n      \"snippet\": \"in\"\n    },\n    {\n      \"description\": \"nisi labore minim\",\n      \"engine\": \"labore dolor Excepteur aute sint\",\n      \"last_modified\": 38351237,\n      \"name\": \"deserunt cupidatat veniam esse\",\n      \"path\": \"sint ea\",\n      \"readonly\": true,\n      \"script_id\": \"ullamco deserunt\",\n      \"snippet\": \"id aliqua labore Excepteur\"\n    }\n  ],\n  \"scope\": {\n    \"expression\": \"sint quis in culpa dolore\",\n    \"variables\": [\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      },\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"application_scopes\": [\n    \"id irure do in\",\n    \"voluptate \"\n  ],\n  \"trusted_base_images\": [\n    {\n      \"author\": \"ut non\",\n      \"imageDigest\": \"eu occaecat exercitation\",\n      \"imageID\": 79685963,\n      \"imagename\": \"cillum anim Lorem nulla sunt\",\n      \"lastupdated\": 4022256,\n      \"registry\": \"sunt ex nostrud quis do\"\n    },\n    {\n      \"author\": \"elit laboris reprehenderit ea\",\n      \"imageDigest\": \"nisi\",\n      \"imageID\": -26826116,\n      \"imagename\": \"cupidatat et\",\n      \"lastupdated\": -91827000,\n      \"registry\": \"irure nostrud\"\n    }\n  ],\n  \"trusted_base_images_enabled\": true,\n  \"whitelisted_licenses\": [\n    \"commodo proident Lorem\",\n    \"dolor officia esse\"\n  ],\n  \"whitelisted_licenses_enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) assurance type"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Input error - failed reading the policy body",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowed_images\": [\n    {\n      \"author\": \"esse\",\n      \"blacklisted\": true,\n      \"imageDigest\": \"sint esse Lorem enim\",\n      \"imageID\": -58075453,\n      \"imagename\": \"dolor Duis occaecat enim\",\n      \"lastupdated\": 75302319,\n      \"reason\": {},\n      \"registry\": \"ullamco\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"consequat sunt non\",\n      \"blacklisted\": false,\n      \"imageDigest\": \"mollit cupidatat nisi\",\n      \"imageID\": 92157605,\n      \"imagename\": \"elit deserunt eu\",\n      \"lastupdated\": -82217750,\n      \"reason\": {},\n      \"registry\": \"nisi irure sint\",\n      \"whitelisted\": true\n    }\n  ],\n  \"assurance_type\": \"ipsum irure\",\n  \"audit_on_failure\": true,\n  \"author\": \"fugiat ullamco esse\",\n  \"blacklisted_licenses\": [\n    \"Lorem sunt fugiat magna labor\",\n    \"amet\"\n  ],\n  \"blacklisted_licenses_enabled\": false,\n  \"block_failed\": true,\n  \"control_exclude_no_fix\": false,\n  \"custom_checks\": [\n    {\n      \"description\": \"ut eiusmod dolore cupidatat\",\n      \"engine\": \"sit culpa velit incididunt\",\n      \"last_modified\": 58461154,\n      \"name\": \"Ut dolor\",\n      \"path\": \"ut dolor Lorem fugiat\",\n      \"readonly\": false,\n      \"script_id\": \"ad veniam\",\n      \"snippet\": \"eiusmod dolor sit aliquip\"\n    },\n    {\n      \"description\": \"fugiat ea dolor nulla\",\n      \"engine\": \"Ut\",\n      \"last_modified\": -91278191,\n      \"name\": \"magna\",\n      \"path\": \"do consequat eu nulla cillum\",\n      \"readonly\": true,\n      \"script_id\": \"fugiat esse dolor dolor\",\n      \"snippet\": \"fugiat Ut\"\n    }\n  ],\n  \"custom_checks_enabled\": true,\n  \"cves_black_list\": [\n    \"aliquip\",\n    \"est ut\"\n  ],\n  \"cves_black_list_enabled\": true,\n  \"cves_white_list\": [\n    \"ipsum enim eu incididunt\",\n    \"incididunt \"\n  ],\n  \"cves_white_list_enabled\": false,\n  \"cvss_severity\": \"veniam non ut anim\",\n  \"cvss_severity_enabled\": true,\n  \"cvss_severity_exclude_no_fix\": false,\n  \"description\": \"irure amet velit\",\n  \"disallow_malware\": true,\n  \"docker_cis_enabled\": false,\n  \"domain\": \"dolor proident commodo\",\n  \"enforce_excessive_permissions\": false,\n  \"fail_cicd\": false,\n  \"force_microenforcer\": true,\n  \"function_integrity_enabled\": false,\n  \"blacklist_permissions_enabled\": true,\n  \"blacklist_permissions\": [\n    \"dolor est\",\n    \"id\"\n  ],\n  \"ignore_recently_published_vln\": false,\n  \"ignore_recently_published_vln_period\": 56589197,\n  \"ignore_risk_resources_enabled\": true,\n  \"ignored_risk_resources\": [\n    \"fugiat est reprehenderit\",\n    \"eu irure\"\n  ],\n  \"images\": [\n    \"eu nisi aliqua magna\",\n    \"nostrud in\"\n  ],\n  \"kube_cis_enabled\": false,\n  \"labels\": [\n    \"ullamco id\",\n    \"cupidatat veniam\"\n  ],\n  \"lastupdate\": \"1977-11-22T19:16:49.174Z\",\n  \"linux_cis_enabled\": true,\n  \"maximum_score\": -64829658,\n  \"maximum_score_enabled\": false,\n  \"maximum_score_exclude_no_fix\": false,\n  \"name\": \"nisi laboris\",\n  \"only_none_root_users\": false,\n  \"openshift_hardening_enabled\": true,\n  \"packages_black_list\": [\n    {\n      \"arch\": \"nostrud tempor cillum\",\n      \"epoch\": \"Ut\",\n      \"format\": \"veniam Lorem mollit dolore\",\n      \"license\": \"commodo esse\",\n      \"name\": \"dolor\",\n      \"release\": \"fugia\",\n      \"version\": \"id in\",\n      \"version_range\": \"nostrud consectetur consequat\"\n    },\n    {\n      \"arch\": \"enim nisi Lore\",\n      \"epoch\": \"dolor consectetur quis\",\n      \"format\": \"Lorem elit proident\",\n      \"license\": \"mollit esse\",\n      \"name\": \"laboris id n\",\n      \"release\": \"pariatur eiusmod cillum\",\n      \"version\": \"commodo laborum\",\n      \"version_range\": \"cupidatat in eu fugiat\"\n    }\n  ],\n  \"packages_black_list_enabled\": false,\n  \"packages_white_list\": [\n    {\n      \"arch\": \"esse eiusmod\",\n      \"epoch\": \"cupidatat mollit\",\n      \"format\": \"dolo\",\n      \"license\": \"ex\",\n      \"name\": \"enim\",\n      \"release\": \"ullamco sint id consectetur\",\n      \"version\": \"labore \",\n      \"version_range\": \"non fugiat ex\"\n    },\n    {\n      \"arch\": \"ea\",\n      \"epoch\": \"in elit\",\n      \"format\": \"non dolor\",\n      \"license\": \"magna culpa\",\n      \"name\": \"ut in ut\",\n      \"release\": \"ut occaecat ea dolore\",\n      \"version\": \"irure voluptate\",\n      \"version_range\": \"ipsum culpa ad\"\n    }\n  ],\n  \"packages_white_list_enabled\": true,\n  \"partial_results_image_fail\": true,\n  \"readonly\": false,\n  \"registries\": [\n    \"nulla Duis\",\n    \"cupidatat do adipisicing\"\n  ],\n  \"scan_sensitive_data\": false,\n  \"scap_enabled\": false,\n  \"scap_files\": [\n    {\n      \"description\": \"irure aliqua ipsum\",\n      \"engine\": \"ea laborum labore sit\",\n      \"last_modified\": 1791909,\n      \"name\": \"tempor laborum eiusmod\",\n      \"path\": \"exercitation amet nostrud ea\",\n      \"readonly\": false,\n      \"script_id\": \"cupidatat\",\n      \"snippet\": \"in\"\n    },\n    {\n      \"description\": \"nisi labore minim\",\n      \"engine\": \"labore dolor Excepteur aute sint\",\n      \"last_modified\": 38351237,\n      \"name\": \"deserunt cupidatat veniam esse\",\n      \"path\": \"sint ea\",\n      \"readonly\": true,\n      \"script_id\": \"ullamco deserunt\",\n      \"snippet\": \"id aliqua labore Excepteur\"\n    }\n  ],\n  \"scope\": {\n    \"expression\": \"sint quis in culpa dolore\",\n    \"variables\": [\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      },\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"application_scopes\": [\n    \"id irure do in\",\n    \"voluptate \"\n  ],\n  \"trusted_base_images\": [\n    {\n      \"author\": \"ut non\",\n      \"imageDigest\": \"eu occaecat exercitation\",\n      \"imageID\": 79685963,\n      \"imagename\": \"cillum anim Lorem nulla sunt\",\n      \"lastupdated\": 4022256,\n      \"registry\": \"sunt ex nostrud quis do\"\n    },\n    {\n      \"author\": \"elit laboris reprehenderit ea\",\n      \"imageDigest\": \"nisi\",\n      \"imageID\": -26826116,\n      \"imagename\": \"cupidatat et\",\n      \"lastupdated\": -91827000,\n      \"registry\": \"irure nostrud\"\n    }\n  ],\n  \"trusted_base_images_enabled\": true,\n  \"whitelisted_licenses\": [\n    \"commodo proident Lorem\",\n    \"dolor officia esse\"\n  ],\n  \"whitelisted_licenses_enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) assurance type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Failed asserting that the policy exists",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowed_images\": [\n    {\n      \"author\": \"esse\",\n      \"blacklisted\": true,\n      \"imageDigest\": \"sint esse Lorem enim\",\n      \"imageID\": -58075453,\n      \"imagename\": \"dolor Duis occaecat enim\",\n      \"lastupdated\": 75302319,\n      \"reason\": {},\n      \"registry\": \"ullamco\",\n      \"whitelisted\": true\n    },\n    {\n      \"author\": \"consequat sunt non\",\n      \"blacklisted\": false,\n      \"imageDigest\": \"mollit cupidatat nisi\",\n      \"imageID\": 92157605,\n      \"imagename\": \"elit deserunt eu\",\n      \"lastupdated\": -82217750,\n      \"reason\": {},\n      \"registry\": \"nisi irure sint\",\n      \"whitelisted\": true\n    }\n  ],\n  \"assurance_type\": \"ipsum irure\",\n  \"audit_on_failure\": true,\n  \"author\": \"fugiat ullamco esse\",\n  \"blacklisted_licenses\": [\n    \"Lorem sunt fugiat magna labor\",\n    \"amet\"\n  ],\n  \"blacklisted_licenses_enabled\": false,\n  \"block_failed\": true,\n  \"control_exclude_no_fix\": false,\n  \"custom_checks\": [\n    {\n      \"description\": \"ut eiusmod dolore cupidatat\",\n      \"engine\": \"sit culpa velit incididunt\",\n      \"last_modified\": 58461154,\n      \"name\": \"Ut dolor\",\n      \"path\": \"ut dolor Lorem fugiat\",\n      \"readonly\": false,\n      \"script_id\": \"ad veniam\",\n      \"snippet\": \"eiusmod dolor sit aliquip\"\n    },\n    {\n      \"description\": \"fugiat ea dolor nulla\",\n      \"engine\": \"Ut\",\n      \"last_modified\": -91278191,\n      \"name\": \"magna\",\n      \"path\": \"do consequat eu nulla cillum\",\n      \"readonly\": true,\n      \"script_id\": \"fugiat esse dolor dolor\",\n      \"snippet\": \"fugiat Ut\"\n    }\n  ],\n  \"custom_checks_enabled\": true,\n  \"cves_black_list\": [\n    \"aliquip\",\n    \"est ut\"\n  ],\n  \"cves_black_list_enabled\": true,\n  \"cves_white_list\": [\n    \"ipsum enim eu incididunt\",\n    \"incididunt \"\n  ],\n  \"cves_white_list_enabled\": false,\n  \"cvss_severity\": \"veniam non ut anim\",\n  \"cvss_severity_enabled\": true,\n  \"cvss_severity_exclude_no_fix\": false,\n  \"description\": \"irure amet velit\",\n  \"disallow_malware\": true,\n  \"docker_cis_enabled\": false,\n  \"domain\": \"dolor proident commodo\",\n  \"enforce_excessive_permissions\": false,\n  \"fail_cicd\": false,\n  \"force_microenforcer\": true,\n  \"function_integrity_enabled\": false,\n  \"blacklist_permissions_enabled\": true,\n  \"blacklist_permissions\": [\n    \"dolor est\",\n    \"id\"\n  ],\n  \"ignore_recently_published_vln\": false,\n  \"ignore_recently_published_vln_period\": 56589197,\n  \"ignore_risk_resources_enabled\": true,\n  \"ignored_risk_resources\": [\n    \"fugiat est reprehenderit\",\n    \"eu irure\"\n  ],\n  \"images\": [\n    \"eu nisi aliqua magna\",\n    \"nostrud in\"\n  ],\n  \"kube_cis_enabled\": false,\n  \"labels\": [\n    \"ullamco id\",\n    \"cupidatat veniam\"\n  ],\n  \"lastupdate\": \"1977-11-22T19:16:49.174Z\",\n  \"linux_cis_enabled\": true,\n  \"maximum_score\": -64829658,\n  \"maximum_score_enabled\": false,\n  \"maximum_score_exclude_no_fix\": false,\n  \"name\": \"nisi laboris\",\n  \"only_none_root_users\": false,\n  \"openshift_hardening_enabled\": true,\n  \"packages_black_list\": [\n    {\n      \"arch\": \"nostrud tempor cillum\",\n      \"epoch\": \"Ut\",\n      \"format\": \"veniam Lorem mollit dolore\",\n      \"license\": \"commodo esse\",\n      \"name\": \"dolor\",\n      \"release\": \"fugia\",\n      \"version\": \"id in\",\n      \"version_range\": \"nostrud consectetur consequat\"\n    },\n    {\n      \"arch\": \"enim nisi Lore\",\n      \"epoch\": \"dolor consectetur quis\",\n      \"format\": \"Lorem elit proident\",\n      \"license\": \"mollit esse\",\n      \"name\": \"laboris id n\",\n      \"release\": \"pariatur eiusmod cillum\",\n      \"version\": \"commodo laborum\",\n      \"version_range\": \"cupidatat in eu fugiat\"\n    }\n  ],\n  \"packages_black_list_enabled\": false,\n  \"packages_white_list\": [\n    {\n      \"arch\": \"esse eiusmod\",\n      \"epoch\": \"cupidatat mollit\",\n      \"format\": \"dolo\",\n      \"license\": \"ex\",\n      \"name\": \"enim\",\n      \"release\": \"ullamco sint id consectetur\",\n      \"version\": \"labore \",\n      \"version_range\": \"non fugiat ex\"\n    },\n    {\n      \"arch\": \"ea\",\n      \"epoch\": \"in elit\",\n      \"format\": \"non dolor\",\n      \"license\": \"magna culpa\",\n      \"name\": \"ut in ut\",\n      \"release\": \"ut occaecat ea dolore\",\n      \"version\": \"irure voluptate\",\n      \"version_range\": \"ipsum culpa ad\"\n    }\n  ],\n  \"packages_white_list_enabled\": true,\n  \"partial_results_image_fail\": true,\n  \"readonly\": false,\n  \"registries\": [\n    \"nulla Duis\",\n    \"cupidatat do adipisicing\"\n  ],\n  \"scan_sensitive_data\": false,\n  \"scap_enabled\": false,\n  \"scap_files\": [\n    {\n      \"description\": \"irure aliqua ipsum\",\n      \"engine\": \"ea laborum labore sit\",\n      \"last_modified\": 1791909,\n      \"name\": \"tempor laborum eiusmod\",\n      \"path\": \"exercitation amet nostrud ea\",\n      \"readonly\": false,\n      \"script_id\": \"cupidatat\",\n      \"snippet\": \"in\"\n    },\n    {\n      \"description\": \"nisi labore minim\",\n      \"engine\": \"labore dolor Excepteur aute sint\",\n      \"last_modified\": 38351237,\n      \"name\": \"deserunt cupidatat veniam esse\",\n      \"path\": \"sint ea\",\n      \"readonly\": true,\n      \"script_id\": \"ullamco deserunt\",\n      \"snippet\": \"id aliqua labore Excepteur\"\n    }\n  ],\n  \"scope\": {\n    \"expression\": \"sint quis in culpa dolore\",\n    \"variables\": [\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      },\n      {\n        \"attribute\": \"aqua.registry\",\n        \"value\": \"Docker Hub\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"application_scopes\": [\n    \"id irure do in\",\n    \"voluptate \"\n  ],\n  \"trusted_base_images\": [\n    {\n      \"author\": \"ut non\",\n      \"imageDigest\": \"eu occaecat exercitation\",\n      \"imageID\": 79685963,\n      \"imagename\": \"cillum anim Lorem nulla sunt\",\n      \"lastupdated\": 4022256,\n      \"registry\": \"sunt ex nostrud quis do\"\n    },\n    {\n      \"author\": \"elit laboris reprehenderit ea\",\n      \"imageDigest\": \"nisi\",\n      \"imageID\": -26826116,\n      \"imagename\": \"cupidatat et\",\n      \"lastupdated\": -91827000,\n      \"registry\": \"irure nostrud\"\n    }\n  ],\n  \"trusted_base_images_enabled\": true,\n  \"whitelisted_licenses\": [\n    \"commodo proident Lorem\",\n    \"dolor officia esse\"\n  ],\n  \"whitelisted_licenses_enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) assurance type"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "List Assurance Policies of specified type",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/assurance_policy/:type",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"assurance_policy",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "image",
													"description": "(Required) assurance type"
												}
											]
										},
										"description": "Get list of Assurance Policies of the specified type"
									},
									"response": [
										{
											"name": "List all Assurance Policies of the specified type",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) assurance type"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": 59808028,\n  \"page\": -21310562,\n  \"pagesize\": -19827073,\n  \"query\": {\n    \"TripwireEnabled\": false,\n    \"domain\": \"sit voluptate do\",\n    \"identifiers_only\": false,\n    \"runtime_type\": \"cillum aliquip mollit in\",\n    \"show_auto_generated\": \"incididunt\"\n  },\n  \"result\": [\n    {\n      \"allowed_images\": [\n        {\n          \"author\": \"nostrud labore\",\n          \"blacklisted\": false,\n          \"imageDigest\": \"dolor veniam commodo amet cupidatat\",\n          \"imageID\": -25890082,\n          \"imagename\": \"qui reprehenderit labore\",\n          \"lastupdated\": -81676110,\n          \"reason\": {},\n          \"registry\": \"ex pariatur\",\n          \"whitelisted\": false\n        },\n        {\n          \"author\": \"do id adipisicing\",\n          \"blacklisted\": false,\n          \"imageDigest\": \"dolore ex non dolor\",\n          \"imageID\": 53637654,\n          \"imagename\": \"sint esse\",\n          \"lastupdated\": -39783502,\n          \"reason\": {},\n          \"registry\": \"commodo consectetur proident officia\",\n          \"whitelisted\": true\n        }\n      ],\n      \"assurance_type\": \"fugiat nisi nostrud\",\n      \"audit_on_failure\": true,\n      \"author\": \"eiusmod est proident aute\",\n      \"blacklisted_licenses\": [\n        \"velit ea qui\",\n        \"id sunt ad\"\n      ],\n      \"blacklisted_licenses_enabled\": false,\n      \"block_failed\": false,\n      \"control_exclude_no_fix\": false,\n      \"custom_checks\": [\n        {\n          \"description\": \"aliquip do\",\n          \"engine\": \"magna Excepteur id cillum elit\",\n          \"last_modified\": 55986508,\n          \"name\": \"dolor adipisicing\",\n          \"path\": \"cupidatat nostrud\",\n          \"readonly\": true,\n          \"script_id\": \"officia\",\n          \"snippet\": \"et\"\n        },\n        {\n          \"description\": \"laborum sed veniam dolor\",\n          \"engine\": \"sed in do eiusmod qui\",\n          \"last_modified\": 667152,\n          \"name\": \"nulla voluptate enim\",\n          \"path\": \"do Lorem cupidatat aliqua\",\n          \"readonly\": true,\n          \"script_id\": \"qui labore Ut minim\",\n          \"snippet\": \"ullamco adipisicing Lorem incididunt\"\n        }\n      ],\n      \"custom_checks_enabled\": false,\n      \"cves_black_list\": [\n        \"qui sit do cillum dolore\",\n        \"tempor minim in\"\n      ],\n      \"cves_black_list_enabled\": true,\n      \"cves_white_list\": [\n        \"cillum adipisicing\",\n        \"consequat eiusmod proident fugiat\"\n      ],\n      \"cves_white_list_enabled\": false,\n      \"cvss_severity\": \"aute Lorem proident\",\n      \"cvss_severity_enabled\": false,\n      \"cvss_severity_exclude_no_fix\": false,\n      \"description\": \"ipsum in\",\n      \"disallow_malware\": false,\n      \"docker_cis_enabled\": false,\n      \"domain\": \"adipisicing veniam Duis enim\",\n      \"enforce_excessive_permissions\": false,\n      \"fail_cicd\": true,\n      \"force_microenforcer\": false,\n      \"function_integrity_enabled\": true,\n      \"blacklist_permissions_enabled\": false,\n      \"blacklist_permissions\": [\n        \"veniam eiusmod\",\n        \"tempor dolor consectetur esse veniam\"\n      ],\n      \"ignore_recently_published_vln\": false,\n      \"ignore_recently_published_vln_period\": 22589205,\n      \"ignore_risk_resources_enabled\": true,\n      \"ignored_risk_resources\": [\n        \"ullamco adipisicing eu\",\n        \"culpa sunt aliqua Dui\"\n      ],\n      \"images\": [\n        \"aliqua do Exce\",\n        \"laboris cillum in aliquip\"\n      ],\n      \"kube_cis_enabled\": true,\n      \"labels\": [\n        \"cillum non et nulla aliqua\",\n        \"nisi minim mollit ut\"\n      ],\n      \"lastupdate\": \"1993-08-21T03:04:07.059Z\",\n      \"linux_cis_enabled\": false,\n      \"maximum_score\": -84697481,\n      \"maximum_score_enabled\": false,\n      \"maximum_score_exclude_no_fix\": true,\n      \"name\": \"occaecat eu\",\n      \"only_none_root_users\": true,\n      \"openshift_hardening_enabled\": false,\n      \"packages_black_list\": [\n        {\n          \"arch\": \"eiusmod adipisicing\",\n          \"epoch\": \"quis et\",\n          \"format\": \"aute in mollit\",\n          \"license\": \"qui tempor consequat labore \",\n          \"name\": \"Excepteur \",\n          \"release\": \"culpa eu laboris fugiat\",\n          \"version\": \"deserunt veniam Ut inci\",\n          \"version_range\": \"dolore\"\n        },\n        {\n          \"arch\": \"adipisicing proide\",\n          \"epoch\": \"ull\",\n          \"format\": \"mollit consectetur adipisicing nostrud aliquip\",\n          \"license\": \"irure pariatur non anim\",\n          \"name\": \"ea \",\n          \"release\": \"voluptate\",\n          \"version\": \"aute velit\",\n          \"version_range\": \"nulla\"\n        }\n      ],\n      \"packages_black_list_enabled\": false,\n      \"packages_white_list\": [\n        {\n          \"arch\": \"mollit elit laborum\",\n          \"epoch\": \"ut sed anim\",\n          \"format\": \"commodo et sed\",\n          \"license\": \"i\",\n          \"name\": \"voluptate eu\",\n          \"release\": \"officia esse sed amet\",\n          \"version\": \"sit amet incididunt\",\n          \"version_range\": \"consequat qui nisi fugiat\"\n        },\n        {\n          \"arch\": \"elit cillum amet nulla\",\n          \"epoch\": \"ea adipisicing Lor\",\n          \"format\": \"ea adipisicing\",\n          \"license\": \"dolor commodo aliquip\",\n          \"name\": \"occaecat anim sint exercitation officia\",\n          \"release\": \"incididunt pariatur in sint\",\n          \"version\": \"irure deserunt enim pariatur Lorem\",\n          \"version_range\": \"proident est Duis exercitation\"\n        }\n      ],\n      \"packages_white_list_enabled\": false,\n      \"partial_results_image_fail\": false,\n      \"readonly\": false,\n      \"registries\": [\n        \"commodo\",\n        \"Excepteur sit\"\n      ],\n      \"scan_sensitive_data\": false,\n      \"scap_enabled\": false,\n      \"scap_files\": [\n        {\n          \"description\": \"dolor\",\n          \"engine\": \"dolore culpa\",\n          \"last_modified\": 76275272,\n          \"name\": \"in dolor quis nulla\",\n          \"path\": \"Excepteur laborum\",\n          \"readonly\": true,\n          \"script_id\": \"officia\",\n          \"snippet\": \"consequat et non irure\"\n        },\n        {\n          \"description\": \"sunt\",\n          \"engine\": \"deserunt fugiat cupidatat\",\n          \"last_modified\": -35354336,\n          \"name\": \"sint elit\",\n          \"path\": \"ullamco velit\",\n          \"readonly\": true,\n          \"script_id\": \"reprehenderit pariatu\",\n          \"snippet\": \"commodo anim\"\n        }\n      ],\n      \"scope\": {\n        \"expression\": \"irure labore Ut\",\n        \"variables\": [\n          {\n            \"attribute\": \"aqua.registry\",\n            \"value\": \"Docker Hub\",\n            \"name\": \"\"\n          },\n          {\n            \"attribute\": \"aqua.registry\",\n            \"value\": \"Docker Hub\",\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"application_scopes\": [\n        \"consequat irure aute\",\n        \"reprehenderit incididunt\"\n      ],\n      \"trusted_base_images\": [\n        {\n          \"author\": \"adipisicing\",\n          \"imageDigest\": \"Duis\",\n          \"imageID\": 85782800,\n          \"imagename\": \"consectetur voluptate dolor\",\n          \"lastupdated\": -27682396,\n          \"registry\": \"Excepteur consectetur amet velit est\"\n        },\n        {\n          \"author\": \"eiusmod Ut\",\n          \"imageDigest\": \"id \",\n          \"imageID\": 91717665,\n          \"imagename\": \"Duis\",\n          \"lastupdated\": 4100713,\n          \"registry\": \"minim ullamco voluptate\"\n        }\n      ],\n      \"trusted_base_images_enabled\": false,\n      \"whitelisted_licenses\": [\n        \"esse sit\",\n        \"aliquip sint officia ea nisi\"\n      ],\n      \"whitelisted_licenses_enabled\": true\n    },\n    {\n      \"allowed_images\": [\n        {\n          \"author\": \"Lorem mollit veniam qui\",\n          \"blacklisted\": true,\n          \"imageDigest\": \"ut Ut elit Lor\",\n          \"imageID\": -84930896,\n          \"imagename\": \"minim fugiat commodo aute\",\n          \"lastupdated\": -8991140,\n          \"reason\": {},\n          \"registry\": \"velit Lorem ullamco ut\",\n          \"whitelisted\": true\n        },\n        {\n          \"author\": \"qui laborum\",\n          \"blacklisted\": true,\n          \"imageDigest\": \"ipsum Excepteur ullamco\",\n          \"imageID\": 32839356,\n          \"imagename\": \"ut et sit\",\n          \"lastupdated\": -56475742,\n          \"reason\": {},\n          \"registry\": \"eu mollit sit\",\n          \"whitelisted\": false\n        }\n      ],\n      \"assurance_type\": \"culpa deserunt quis\",\n      \"audit_on_failure\": true,\n      \"author\": \"ut et\",\n      \"blacklisted_licenses\": [\n        \"aliquip adipisicing\",\n        \"ea laboris\"\n      ],\n      \"blacklisted_licenses_enabled\": true,\n      \"block_failed\": true,\n      \"control_exclude_no_fix\": false,\n      \"custom_checks\": [\n        {\n          \"description\": \"in dolor enim\",\n          \"engine\": \"commodo consequat dolore proident veniam\",\n          \"last_modified\": -44655283,\n          \"name\": \"cupidatat commodo\",\n          \"path\": \"do tempor\",\n          \"readonly\": true,\n          \"script_id\": \"reprehenderit ad\",\n          \"snippet\": \"tempor occaecat\"\n        },\n        {\n          \"description\": \"nostru\",\n          \"engine\": \"laborum exerci\",\n          \"last_modified\": -1502621,\n          \"name\": \"sed Ut\",\n          \"path\": \"eiusmod anim ut\",\n          \"readonly\": true,\n          \"script_id\": \"irure Excepteur\",\n          \"snippet\": \"occaecat id non\"\n        }\n      ],\n      \"custom_checks_enabled\": false,\n      \"cves_black_list\": [\n        \"Ut\",\n        \"in et tempor voluptate consectetur\"\n      ],\n      \"cves_black_list_enabled\": false,\n      \"cves_white_list\": [\n        \"amet dolore esse\",\n        \"ullamco tempor\"\n      ],\n      \"cves_white_list_enabled\": false,\n      \"cvss_severity\": \"proident consectetur nostrud deserunt\",\n      \"cvss_severity_enabled\": false,\n      \"cvss_severity_exclude_no_fix\": true,\n      \"description\": \"quis sit\",\n      \"disallow_malware\": true,\n      \"docker_cis_enabled\": false,\n      \"domain\": \"anim magna officia\",\n      \"enforce_excessive_permissions\": true,\n      \"fail_cicd\": true,\n      \"force_microenforcer\": true,\n      \"function_integrity_enabled\": true,\n      \"blacklist_permissions_enabled\": true,\n      \"blacklist_permissions\": [\n        \"v\",\n        \"aliquip sunt eu do\"\n      ],\n      \"ignore_recently_published_vln\": false,\n      \"ignore_recently_published_vln_period\": -93729963,\n      \"ignore_risk_resources_enabled\": false,\n      \"ignored_risk_resources\": [\n        \"aliquip est\",\n        \"quis esse\"\n      ],\n      \"images\": [\n        \"nisi nostrud dolor amet labore\",\n        \"id cupidatat dolore\"\n      ],\n      \"kube_cis_enabled\": true,\n      \"labels\": [\n        \"veniam exercitation\",\n        \"dolor minim\"\n      ],\n      \"lastupdate\": \"1983-06-03T18:29:59.698Z\",\n      \"linux_cis_enabled\": true,\n      \"maximum_score\": 64359748,\n      \"maximum_score_enabled\": true,\n      \"maximum_score_exclude_no_fix\": false,\n      \"name\": \"magna proident off\",\n      \"only_none_root_users\": false,\n      \"openshift_hardening_enabled\": false,\n      \"packages_black_list\": [\n        {\n          \"arch\": \"nostrud in mollit ex\",\n          \"epoch\": \"dolore ut sed ullamco\",\n          \"format\": \"exercitation eu\",\n          \"license\": \"nulla laborum\",\n          \"name\": \"laborum\",\n          \"release\": \"sunt fugiat ut\",\n          \"version\": \"sunt pariatur\",\n          \"version_range\": \"aliqua dolore consequat\"\n        },\n        {\n          \"arch\": \"aliqua amet elit a\",\n          \"epoch\": \"co\",\n          \"format\": \"eiusmod nisi ut amet \",\n          \"license\": \"cupidatat dolor ex quis\",\n          \"name\": \"amet in \",\n          \"release\": \"Duis nulla commodo\",\n          \"version\": \"sint exercitation\",\n          \"version_range\": \"magna esse in quis\"\n        }\n      ],\n      \"packages_black_list_enabled\": true,\n      \"packages_white_list\": [\n        {\n          \"arch\": \"occaecat amet ut\",\n          \"epoch\": \"mollit velit\",\n          \"format\": \"ex reprehenderit Duis pariatur\",\n          \"license\": \"sint exercitation\",\n          \"name\": \"sint ea occaecat e\",\n          \"release\": \"sed repr\",\n          \"version\": \"occaecat veniam tempor sint\",\n          \"version_range\": \"ut\"\n        },\n        {\n          \"arch\": \"veniam in mollit deserunt\",\n          \"epoch\": \"cupidatat adipisicing culpa\",\n          \"format\": \"exercitation ipsum\",\n          \"license\": \"esse velit\",\n          \"name\": \"dolore nostrud ea commodo\",\n          \"release\": \"reprehenderit aliquip\",\n          \"version\": \"mollit eiusmod labore do\",\n          \"version_range\": \"magna deserunt incididunt nulla ipsum\"\n        }\n      ],\n      \"packages_white_list_enabled\": true,\n      \"partial_results_image_fail\": true,\n      \"readonly\": false,\n      \"registries\": [\n        \"id ex\",\n        \"adipisicing cupidatat cillum\"\n      ],\n      \"scan_sensitive_data\": true,\n      \"scap_enabled\": false,\n      \"scap_files\": [\n        {\n          \"description\": \"dolore culpa id nisi\",\n          \"engine\": \"enim consequat tempor\",\n          \"last_modified\": 58005152,\n          \"name\": \"Excepteur exercitation\",\n          \"path\": \"pariatur elit occaecat\",\n          \"readonly\": false,\n          \"script_id\": \"dolor in\",\n          \"snippet\": \"est ut mollit dolor\"\n        },\n        {\n          \"description\": \"in ad adipisicing\",\n          \"engine\": \"cillum\",\n          \"last_modified\": -86032148,\n          \"name\": \"culpa amet veniam commodo\",\n          \"path\": \"exercitation magna\",\n          \"readonly\": true,\n          \"script_id\": \"Excepteur pariatur voluptate aliquip\",\n          \"snippet\": \"consequat deserunt\"\n        }\n      ],\n      \"scope\": {\n        \"expression\": \"laborum Excepteur\",\n        \"variables\": [\n          {\n            \"attribute\": \"aqua.registry\",\n            \"value\": \"Docker Hub\",\n            \"name\": \"\"\n          },\n          {\n            \"attribute\": \"aqua.registry\",\n            \"value\": \"Docker Hub\",\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"application_scopes\": [\n        \"magna sit\",\n        \"culpa exercitation\"\n      ],\n      \"trusted_base_images\": [\n        {\n          \"author\": \"laborum minim pariatur\",\n          \"imageDigest\": \"ex nulla cillum aute veniam\",\n          \"imageID\": 65253922,\n          \"imagename\": \"non enim ipsum culpa\",\n          \"lastupdated\": -29114931,\n          \"registry\": \"a\"\n        },\n        {\n          \"author\": \"Ut esse et\",\n          \"imageDigest\": \"est\",\n          \"imageID\": 76083108,\n          \"imagename\": \"et\",\n          \"lastupdated\": -76933399,\n          \"registry\": \"ut occaecat in non\"\n        }\n      ],\n      \"trusted_base_images_enabled\": true,\n      \"whitelisted_licenses\": [\n        \"in reprehenderit\",\n        \"anim sunt\"\n      ],\n      \"whitelisted_licenses_enabled\": true\n    }\n  ]\n}"
										},
										{
											"name": "Could not get database table info",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) assurance type"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Get list of unregistered images",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/assurance_policy/:type/unregistered_images",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"assurance_policy",
												":type",
												"unregistered_images"
											],
											"variable": [
												{
													"key": "type",
													"value": "image",
													"description": "(Required) Assurance type (only type 'image' is supported)"
												}
											]
										},
										"description": "List unregistered images"
									},
									"response": [
										{
											"name": "List unregistered images",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/unregistered_images",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														"unregistered_images"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) Assurance type (only type 'image' is supported)"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"registry\": \"d\",\n  \"repository_id\": 41737039,\n  \"name\": \"do qui eiusmod\",\n  \"digest\": \"elit veniam\",\n  \"is_local\": \"cillum amet\",\n  \"aquasource_scanned\": \"veniam adipisicing f\"\n}"
										},
										{
											"name": "No images found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/unregistered_images",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														"unregistered_images"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) Assurance type (only type 'image' is supported)"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid type input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/unregistered_images",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														"unregistered_images"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) Assurance type (only type 'image' is supported)"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/assurance_policy/:type/unregistered_images",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"assurance_policy",
														":type",
														"unregistered_images"
													],
													"variable": [
														{
															"key": "type",
															"value": "image",
															"description": "(Required) Assurance type (only type 'image' is supported)"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "List all Assurance Policies",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/assurance_policy",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"assurance_policy"
									]
								},
								"description": "Get list of Assurance Policies"
							},
							"response": [
								{
									"name": "List all Assurance Policies",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/assurance_policy",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"assurance_policy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 67411243,\n  \"page\": 31092886,\n  \"pagesize\": -41368788,\n  \"query\": {\n    \"TripwireEnabled\": false,\n    \"domain\": \"sunt occ\",\n    \"identifiers_only\": false,\n    \"runtime_type\": \"amet magna dolore quis est\",\n    \"show_auto_generated\": \"deserunt dolor sed fugiat\"\n  },\n  \"result\": [\n    {\n      \"allowed_images\": [\n        {\n          \"author\": \"quis U\",\n          \"blacklisted\": false,\n          \"imageDigest\": \"aute ex amet ad mollit\",\n          \"imageID\": 12504018,\n          \"imagename\": \"nostrud\",\n          \"lastupdated\": -12481581,\n          \"reason\": {},\n          \"registry\": \"anim aliqua pari\",\n          \"whitelisted\": false\n        },\n        {\n          \"author\": \"consectetur ullamco Lorem dolore consequat\",\n          \"blacklisted\": false,\n          \"imageDigest\": \"officia nulla id\",\n          \"imageID\": -20444389,\n          \"imagename\": \"est\",\n          \"lastupdated\": -31459250,\n          \"reason\": {},\n          \"registry\": \"sit in\",\n          \"whitelisted\": false\n        }\n      ],\n      \"assurance_type\": \"esse exercitation cillum\",\n      \"audit_on_failure\": false,\n      \"author\": \"sunt aliqua eiusmod consequat\",\n      \"blacklisted_licenses\": [\n        \"dolore ad irure incididunt\",\n        \"anim dolor occaecat conse\"\n      ],\n      \"blacklisted_licenses_enabled\": true,\n      \"block_failed\": true,\n      \"control_exclude_no_fix\": false,\n      \"custom_checks\": [\n        {\n          \"description\": \"reprehenderit\",\n          \"engine\": \"dolor dolore veniam Excepteur in\",\n          \"last_modified\": 36191098,\n          \"name\": \"quis\",\n          \"path\": \"laborum dolore amet Lorem eu\",\n          \"readonly\": true,\n          \"script_id\": \"dolor veniam Lorem fugiat\",\n          \"snippet\": \"dolor non\"\n        },\n        {\n          \"description\": \"dolor velit\",\n          \"engine\": \"ex minim labore aliquip\",\n          \"last_modified\": -78439623,\n          \"name\": \"amet tempor\",\n          \"path\": \"Ut aute enim consequat minim\",\n          \"readonly\": false,\n          \"script_id\": \"sit\",\n          \"snippet\": \"minim consectetur Lorem\"\n        }\n      ],\n      \"custom_checks_enabled\": false,\n      \"cves_black_list\": [\n        \"adipisicin\",\n        \"dolore est\"\n      ],\n      \"cves_black_list_enabled\": false,\n      \"cves_white_list\": [\n        \"eu sint do incididunt\",\n        \"fugiat pariatur aliqua\"\n      ],\n      \"cves_white_list_enabled\": true,\n      \"cvss_severity\": \"laborum cupidatat d\",\n      \"cvss_severity_enabled\": true,\n      \"cvss_severity_exclude_no_fix\": true,\n      \"description\": \"mollit aliqua\",\n      \"disallow_malware\": false,\n      \"docker_cis_enabled\": true,\n      \"domain\": \"tempor\",\n      \"enforce_excessive_permissions\": false,\n      \"fail_cicd\": true,\n      \"force_microenforcer\": true,\n      \"function_integrity_enabled\": false,\n      \"blacklist_permissions_enabled\": false,\n      \"blacklist_permissions\": [\n        \"consequat do labore voluptate\",\n        \"quis Ut amet sunt\"\n      ],\n      \"ignore_recently_published_vln\": false,\n      \"ignore_recently_published_vln_period\": 14123165,\n      \"ignore_risk_resources_enabled\": false,\n      \"ignored_risk_resources\": [\n        \"sit fugiat officia\",\n        \"irure\"\n      ],\n      \"images\": [\n        \"ut incididunt\",\n        \"ullamco do\"\n      ],\n      \"kube_cis_enabled\": false,\n      \"labels\": [\n        \"enim\",\n        \"tempor do ipsum eiusmod\"\n      ],\n      \"lastupdate\": \"1986-08-09T19:46:42.703Z\",\n      \"linux_cis_enabled\": false,\n      \"maximum_score\": 62250468,\n      \"maximum_score_enabled\": true,\n      \"maximum_score_exclude_no_fix\": false,\n      \"name\": \"in tempor labore pariatur elit\",\n      \"only_none_root_users\": false,\n      \"openshift_hardening_enabled\": false,\n      \"packages_black_list\": [\n        {\n          \"arch\": \"esse voluptate\",\n          \"epoch\": \"sint pariatur magna in\",\n          \"format\": \"irure veniam quis laboris\",\n          \"license\": \"aute ea Lorem occaecat\",\n          \"name\": \"irure\",\n          \"release\": \"non Lorem\",\n          \"version\": \"occaecat officia enim in\",\n          \"version_range\": \"nostrud velit officia do mo\"\n        },\n        {\n          \"arch\": \"dolore Ut veniam consectetur\",\n          \"epoch\": \"aliqua eu\",\n          \"format\": \"ut sunt veniam Lorem irure\",\n          \"license\": \"proident dolor\",\n          \"name\": \"nostrud ad\",\n          \"release\": \"ullamco aute officia Lorem\",\n          \"version\": \"cupidatat reprehenderit\",\n          \"version_range\": \"Lorem\"\n        }\n      ],\n      \"packages_black_list_enabled\": false,\n      \"packages_white_list\": [\n        {\n          \"arch\": \"consequat eu\",\n          \"epoch\": \"ullamco sint sed labore cupidatat\",\n          \"format\": \"ut dolore\",\n          \"license\": \"dolor nulla reprehenderit ut\",\n          \"name\": \"pariatur in quis id\",\n          \"release\": \"consectetur culpa cupidatat Ut esse\",\n          \"version\": \"ea do id non\",\n          \"version_range\": \"adipisicing ut sunt Excepteur\"\n        },\n        {\n          \"arch\": \"anim aute ea consectetur\",\n          \"epoch\": \"proident officia in\",\n          \"format\": \"do eu reprehenderit est proident\",\n          \"license\": \"fugiat aute Excepteur\",\n          \"name\": \"cupidatat\",\n          \"release\": \"adipisicing Duis mollit \",\n          \"version\": \"in pariatur veniam\",\n          \"version_range\": \"ut occaecat consectetur aute enim\"\n        }\n      ],\n      \"packages_white_list_enabled\": false,\n      \"partial_results_image_fail\": false,\n      \"readonly\": false,\n      \"registries\": [\n        \"Duis culpa\",\n        \"voluptate elit dolore\"\n      ],\n      \"scan_sensitive_data\": true,\n      \"scap_enabled\": false,\n      \"scap_files\": [\n        {\n          \"description\": \"Lorem ut in voluptate pariatur\",\n          \"engine\": \"magna in sed\",\n          \"last_modified\": -76666371,\n          \"name\": \"Ut\",\n          \"path\": \"in est veniam\",\n          \"readonly\": false,\n          \"script_id\": \"magna dolor\",\n          \"snippet\": \"dolor do\"\n        },\n        {\n          \"description\": \"eu \",\n          \"engine\": \"nulla cupidatat\",\n          \"last_modified\": 7170067,\n          \"name\": \"sed non Duis\",\n          \"path\": \"sed\",\n          \"readonly\": true,\n          \"script_id\": \"voluptate\",\n          \"snippet\": \"Ut do\"\n        }\n      ],\n      \"scope\": {\n        \"expression\": \"elit laboris proident ut non\",\n        \"variables\": [\n          {\n            \"attribute\": \"aqua.registry\",\n            \"value\": \"Docker Hub\",\n            \"name\": \"\"\n          },\n          {\n            \"attribute\": \"aqua.registry\",\n            \"value\": \"Docker Hub\",\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"application_scopes\": [\n        \"commodo cupidatat\",\n        \"ullamco consequat\"\n      ],\n      \"trusted_base_images\": [\n        {\n          \"author\": \"aliquip sunt esse sit\",\n          \"imageDigest\": \"in pariatur reprehender\",\n          \"imageID\": 42857826,\n          \"imagename\": \"magna commodo amet dolor\",\n          \"lastupdated\": -67332002,\n          \"registry\": \"in ame\"\n        },\n        {\n          \"author\": \"nostrud\",\n          \"imageDigest\": \"minim exercitation\",\n          \"imageID\": 22456458,\n          \"imagename\": \"labore incididunt minim\",\n          \"lastupdated\": -9159654,\n          \"registry\": \"Duis deserun\"\n        }\n      ],\n      \"trusted_base_images_enabled\": true,\n      \"whitelisted_licenses\": [\n        \"eu incididunt ea\",\n        \"veniam velit nisi\"\n      ],\n      \"whitelisted_licenses_enabled\": false\n    },\n    {\n      \"allowed_images\": [\n        {\n          \"author\": \"voluptate dolor\",\n          \"blacklisted\": false,\n          \"imageDigest\": \"ex\",\n          \"imageID\": -65813197,\n          \"imagename\": \"ad\",\n          \"lastupdated\": 80376636,\n          \"reason\": {},\n          \"registry\": \"ut magna enim\",\n          \"whitelisted\": false\n        },\n        {\n          \"author\": \"cupidatat sit adipisic\",\n          \"blacklisted\": false,\n          \"imageDigest\": \"sunt proident elit aliqua\",\n          \"imageID\": -54593939,\n          \"imagename\": \"sit\",\n          \"lastupdated\": 40518717,\n          \"reason\": {},\n          \"registry\": \"irure ut est consectetur\",\n          \"whitelisted\": true\n        }\n      ],\n      \"assurance_type\": \"ut aute non tempor consectetur\",\n      \"audit_on_failure\": false,\n      \"author\": \"e\",\n      \"blacklisted_licenses\": [\n        \"nulla fugiat cupidatat occaecat\",\n        \"dolore\"\n      ],\n      \"blacklisted_licenses_enabled\": true,\n      \"block_failed\": false,\n      \"control_exclude_no_fix\": false,\n      \"custom_checks\": [\n        {\n          \"description\": \"qui esse in ipsum\",\n          \"engine\": \"adipisicing veniam laborum la\",\n          \"last_modified\": -15146752,\n          \"name\": \"Duis ea occaecat culpa\",\n          \"path\": \"incididunt cupidatat\",\n          \"readonly\": true,\n          \"script_id\": \"pariatur laborum magna dolore\",\n          \"snippet\": \"aliqua\"\n        },\n        {\n          \"description\": \"occaecat quis\",\n          \"engine\": \"nostrud sint\",\n          \"last_modified\": 68578751,\n          \"name\": \"ipsum dolore\",\n          \"path\": \"ex aliqua\",\n          \"readonly\": false,\n          \"script_id\": \"Ut ullamco non\",\n          \"snippet\": \"sint in cillum\"\n        }\n      ],\n      \"custom_checks_enabled\": false,\n      \"cves_black_list\": [\n        \"non minim in ex\",\n        \"occae\"\n      ],\n      \"cves_black_list_enabled\": false,\n      \"cves_white_list\": [\n        \"voluptate nisi\",\n        \"incididunt voluptate sit\"\n      ],\n      \"cves_white_list_enabled\": false,\n      \"cvss_severity\": \"voluptate ullamco cupidatat\",\n      \"cvss_severity_enabled\": true,\n      \"cvss_severity_exclude_no_fix\": false,\n      \"description\": \"quis\",\n      \"disallow_malware\": false,\n      \"docker_cis_enabled\": false,\n      \"domain\": \"labor\",\n      \"enforce_excessive_permissions\": true,\n      \"fail_cicd\": true,\n      \"force_microenforcer\": true,\n      \"function_integrity_enabled\": true,\n      \"blacklist_permissions_enabled\": false,\n      \"blacklist_permissions\": [\n        \"proident laboris amet est magna\",\n        \"dolore in fugiat laborum\"\n      ],\n      \"ignore_recently_published_vln\": true,\n      \"ignore_recently_published_vln_period\": 61855862,\n      \"ignore_risk_resources_enabled\": true,\n      \"ignored_risk_resources\": [\n        \"officia in\",\n        \"minim\"\n      ],\n      \"images\": [\n        \"culpa aute anim\",\n        \"eiusmod\"\n      ],\n      \"kube_cis_enabled\": true,\n      \"labels\": [\n        \"laborum eu in\",\n        \"aliqua qui\"\n      ],\n      \"lastupdate\": \"1984-12-15T15:18:22.972Z\",\n      \"linux_cis_enabled\": true,\n      \"maximum_score\": 10063791,\n      \"maximum_score_enabled\": true,\n      \"maximum_score_exclude_no_fix\": true,\n      \"name\": \"proident Excepteur aute\",\n      \"only_none_root_users\": true,\n      \"openshift_hardening_enabled\": true,\n      \"packages_black_list\": [\n        {\n          \"arch\": \"mollit consectetur velit ut\",\n          \"epoch\": \"velit sed aute ea officia\",\n          \"format\": \"laboris \",\n          \"license\": \"velit enim deserunt sint\",\n          \"name\": \"voluptate irure proident laborum\",\n          \"release\": \"sunt id dolor eiusmod\",\n          \"version\": \"amet est ex magna aute\",\n          \"version_range\": \"laborum\"\n        },\n        {\n          \"arch\": \"velit cillum\",\n          \"epoch\": \"esse magna aute laboris\",\n          \"format\": \"cupidatat elit\",\n          \"license\": \"in velit aute\",\n          \"name\": \"velit quis ad\",\n          \"release\": \"dolor commodo magna tem\",\n          \"version\": \"Ut laborum consectetur\",\n          \"version_range\": \"ut aliqua\"\n        }\n      ],\n      \"packages_black_list_enabled\": true,\n      \"packages_white_list\": [\n        {\n          \"arch\": \"ut eiusmod\",\n          \"epoch\": \"quis cillum\",\n          \"format\": \"dolore al\",\n          \"license\": \"laboris\",\n          \"name\": \"velit ut Ut ullamco\",\n          \"release\": \"cupidatat enim\",\n          \"version\": \"laboris\",\n          \"version_range\": \"Excepteur ea laboris ut\"\n        },\n        {\n          \"arch\": \"labore Excepteur irure enim\",\n          \"epoch\": \"incididunt elit\",\n          \"format\": \"sit aute ut ullamco\",\n          \"license\": \"tempor irure\",\n          \"name\": \"minim consequat ut\",\n          \"release\": \"ea\",\n          \"version\": \"eu aliquip\",\n          \"version_range\": \"voluptate laborum nisi\"\n        }\n      ],\n      \"packages_white_list_enabled\": false,\n      \"partial_results_image_fail\": true,\n      \"readonly\": false,\n      \"registries\": [\n        \"culpa ut amet sunt\",\n        \"et pariatur non\"\n      ],\n      \"scan_sensitive_data\": false,\n      \"scap_enabled\": false,\n      \"scap_files\": [\n        {\n          \"description\": \"sunt\",\n          \"engine\": \"reprehenderit esse culpa\",\n          \"last_modified\": 64707975,\n          \"name\": \"sit ea\",\n          \"path\": \"incididunt cillum\",\n          \"readonly\": false,\n          \"script_id\": \"laboris ea exercitation et\",\n          \"snippet\": \"sunt in qui occaecat\"\n        },\n        {\n          \"description\": \"ipsum consequat irure ut\",\n          \"engine\": \"enim ad nulla laborum dolor\",\n          \"last_modified\": -26305434,\n          \"name\": \"amet quis laborum dolore\",\n          \"path\": \"ea in Ut est\",\n          \"readonly\": true,\n          \"script_id\": \"sit\",\n          \"snippet\": \"quis deserunt \"\n        }\n      ],\n      \"scope\": {\n        \"expression\": \"non velit sunt aliquip voluptate\",\n        \"variables\": [\n          {\n            \"attribute\": \"aqua.registry\",\n            \"value\": \"Docker Hub\",\n            \"name\": \"\"\n          },\n          {\n            \"attribute\": \"aqua.registry\",\n            \"value\": \"Docker Hub\",\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"application_scopes\": [\n        \"est in eiusmod sint aliqua\",\n        \"aute esse\"\n      ],\n      \"trusted_base_images\": [\n        {\n          \"author\": \"Ut\",\n          \"imageDigest\": \"minim laborum elit nisi\",\n          \"imageID\": 54864827,\n          \"imagename\": \"consectetur proident\",\n          \"lastupdated\": 15610961,\n          \"registry\": \"sed ullamco incididunt magna\"\n        },\n        {\n          \"author\": \"ut\",\n          \"imageDigest\": \"Lorem eiusmod cillum\",\n          \"imageID\": 44132145,\n          \"imagename\": \"in dolor\",\n          \"lastupdated\": -25853251,\n          \"registry\": \"aliquip in sed cupidatat\"\n        }\n      ],\n      \"trusted_base_images_enabled\": true,\n      \"whitelisted_licenses\": [\n        \"nulla nostrud\",\n        \"ex fugiat veniam cupidatat\"\n      ],\n      \"whitelisted_licenses_enabled\": false\n    }\n  ]\n}"
								},
								{
									"name": "Could not get database table info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/assurance_policy",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"assurance_policy"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "Runtime policies",
					"item": [
						{
							"name": "{name}",
							"item": [
								{
									"name": "Delete Runtime Policy",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) The Runtime Policy name to match"
												}
											]
										},
										"description": "Delete named Runtime Policy"
									},
									"response": [
										{
											"name": "Runtime Policy deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "No matching Runtime Policy found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Get Runtime Policy",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) The Runtime Policy name to match"
												}
											]
										},
										"description": "Retrieve details of named Runtime Policy"
									},
									"response": [
										{
											"name": "Details of Runtime Policy",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowed_executables\": {\n    \"allow_executables\": [\n      \"sint\",\n      \"mollit in labo\"\n    ],\n    \"allow_root_executables\": [\n      \"irure ut id dolor dolore\",\n      \"incididunt sed magna exercitation\"\n    ],\n    \"enabled\": true,\n    \"separate_executables\": false\n  },\n  \"auditing\": {\n    \"audit_all_network\": true,\n    \"audit_all_processes\": false,\n    \"audit_os_user_activity\": false,\n    \"audit_process_cmdline\": false,\n    \"audit_success_login\": true,\n    \"audit_failed_login\": false,\n    \"audit_brute_force_login\": true,\n    \"enabled\": true\n  },\n  \"author\": \"consectetur consequat pariatur\",\n  \"blacklisted_os_users\": {\n    \"enabled\": false,\n    \"group_black_list\": [\n      \"mollit\",\n      \"ex veniam dolor sunt\"\n    ],\n    \"user_black_list\": [\n      \"eu culpa est do cupidatat\",\n      \"aliquip\"\n    ]\n  },\n  \"block_disallowed_images\": false,\n  \"block_non_compliant_resources\": false,\n  \"block_nw_unlink_cont\": false,\n  \"bypass_scope\": {\n    \"enabled\": false,\n    \"scope\": {\n      \"expression\": \"ipsum\",\n      \"variables\": [\n        {\n          \"attribute\": \"dolor commodo exercitation\",\n          \"value\": \"cillum quis anim nostrud\"\n        },\n        {\n          \"attribute\": \"culpa laborum proident\",\n          \"value\": \"eiusmod reprehenderit minim irure\"\n        }\n      ]\n    }\n  },\n  \"created\": \"1963-05-18T19:11:25.779Z\",\n  \"cve\": \"nulla Ut consequat\",\n  \"default_security_profile\": \"quis id\",\n  \"description\": \"nulla in aliqua esse\",\n  \"domain\": \"in incididunt\",\n  \"drift_prevention\": {\n    \"enabled\": false,\n    \"exec_lockdown\": false,\n    \"image_lockdown\": false\n  },\n  \"enable_fork_guard\": false,\n  \"enable_ip_reputation\": true,\n  \"enable_dns_reputation\": true,\n  \"enable_crypto_mining_dns\": false,\n  \"enable_port_scan_protection\": true,\n  \"enabled\": false,\n  \"enforce\": true,\n  \"enforce_after_days\": 64969540,\n  \"enforce_scheduler_added_on\": -91563994,\n  \"executable_blacklist\": {\n    \"enabled\": true,\n    \"executables\": [\n      \"aute aliqua consequat dolore voluptate\",\n      \"officia consequat\"\n    ]\n  },\n  \"file_block\": {\n    \"enabled\": false,\n    \"filename_block_list\": [\n      \"proident amet laborum quis irure\",\n      \"voluptate exercitation\"\n    ]\n  },\n  \"file_integrity_monitoring\": {\n    \"enabled\": true,\n    \"exceptional_monitored_files\": [\n      \"aliqua sed es\",\n      \"Duis magna Excepteur\"\n    ],\n    \"monitored_files\": [\n      \"id magna voluptate labore amet\",\n      \"u\"\n    ],\n    \"monitored_files_attributes\": true,\n    \"monitored_files_modify\": false,\n    \"monitored_files_read\": false\n  },\n  \"fork_guard_process_limit\": 8404914,\n  \"image_name\": \"cillum vol\",\n  \"is_audit_checked\": true,\n  \"is_auto_generated\": true,\n  \"lastupdate\": 35079054,\n  \"limit_container_privileges\": {\n    \"block_add_capabilities\": false,\n    \"enabled\": true,\n    \"ipcmode\": true,\n    \"netmode\": false,\n    \"pidmode\": false,\n    \"prevent_low_port_binding\": false,\n    \"prevent_root_user\": true,\n    \"privileged\": false,\n    \"use_host_user\": true,\n    \"usermode\": true,\n    \"utsmode\": false\n  },\n  \"linux_capabilities\": {\n    \"enabled\": true,\n    \"remove_linux_capabilities\": [\n      \"ipsum reprehenderit voluptate occaecat proi\",\n      \"amet ea\"\n    ]\n  },\n  \"name\": \"magna id cupidatat\",\n  \"no_new_privileges\": false,\n  \"only_registered_images\": true,\n  \"package_block\": {\n    \"enabled\": false,\n    \"package_black_list\": [\n      \"ut est aute Ut\",\n      \"laborum conseq\"\n    ]\n  },\n  \"port_block\": {\n    \"block_inbound_ports\": [\n      \"ut ullamco reprehenderit\",\n      \"enim officia\"\n    ],\n    \"block_outbound_ports\": [\n      \"proident sunt ut cillum\",\n      \"nulla nisi occaecat\"\n    ],\n    \"enabled\": true\n  },\n  \"prevent_override_default_config\": {\n    \"enabled\": true,\n    \"enforce_apparmor\": false,\n    \"enforce_seccomp\": false,\n    \"enforce_selinux\": false\n  },\n  \"readonly\": false,\n  \"readonly_files\": {\n    \"enabled\": false,\n    \"exceptional_readonly_files\": [\n      \"sunt anim\",\n      \"ut in tempor Duis\"\n    ],\n    \"readonly_files\": [\n      \"irure consequat esse\",\n      \"laboris\"\n    ]\n  },\n  \"repo_name\": \"nostrud Ut\",\n  \"resource_name\": \"dolore qui\",\n  \"resource_type\": \"commodo non exercitation\",\n  \"restricted_volumes\": {\n    \"enabled\": false,\n    \"volumes\": [\n      \"reprehenderit laborum Excepteur\",\n      \"Ut ex exercitation\"\n    ]\n  },\n  \"runtime_type\": \"esse\",\n  \"scope\": {\n    \"name\": \"reprehenderit in\",\n    \"categories\": {\n      \"artifacts\": {\n        \"image\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"function\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"pas_droplet\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"workloads\": {\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"cf\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"infrastructure\": {\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"entity_scope\": {\n        \"expression\": \"sed non in do\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"description\": \"aliquip\",\n    \"author\": \"reprehenderit tempor officia Lorem in\",\n    \"updated\": \"Excepteur mollit eiusmod\"\n  },\n  \"tripwire\": {\n    \"apply_on\": [\n      \"adipisicing in dolor\",\n      \"ullamco \"\n    ],\n    \"enabled\": true,\n    \"serverless_app\": \"labore dolor amet ad\",\n    \"user_id\": \"anim Ut consectetur\",\n    \"user_password\": \"officia\"\n  },\n  \"type\": \"proident consequat\",\n  \"updated\": \"1976-01-30T12:31:45.609Z\",\n  \"version\": \"et ex\",\n  \"vpatch_version\": \"labore anim\",\n  \"whitelisted_os_users\": {\n    \"enabled\": true,\n    \"group_white_list\": [\n      \"minim consectetur non eiusmod\",\n      \"Excepteur amet\"\n    ],\n    \"user_white_list\": [\n      \"voluptate ipsum ea in laborum\",\n      \"magna do\"\n    ]\n  }\n}"
										},
										{
											"name": "No matching policy found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Update Runtime Policy",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"allowed_executables\": {\n    \"allow_executables\": [\n      \"sint\",\n      \"mollit in labo\"\n    ],\n    \"allow_root_executables\": [\n      \"irure ut id dolor dolore\",\n      \"incididunt sed magna exercitation\"\n    ],\n    \"enabled\": true,\n    \"separate_executables\": false\n  },\n  \"auditing\": {\n    \"audit_all_network\": true,\n    \"audit_all_processes\": false,\n    \"audit_os_user_activity\": false,\n    \"audit_process_cmdline\": false,\n    \"audit_success_login\": true,\n    \"audit_failed_login\": false,\n    \"audit_brute_force_login\": true,\n    \"enabled\": true\n  },\n  \"author\": \"consectetur consequat pariatur\",\n  \"blacklisted_os_users\": {\n    \"enabled\": false,\n    \"group_black_list\": [\n      \"mollit\",\n      \"ex veniam dolor sunt\"\n    ],\n    \"user_black_list\": [\n      \"eu culpa est do cupidatat\",\n      \"aliquip\"\n    ]\n  },\n  \"block_disallowed_images\": false,\n  \"block_non_compliant_resources\": false,\n  \"block_nw_unlink_cont\": false,\n  \"bypass_scope\": {\n    \"enabled\": false,\n    \"scope\": {\n      \"expression\": \"ipsum\",\n      \"variables\": [\n        {\n          \"attribute\": \"dolor commodo exercitation\",\n          \"value\": \"cillum quis anim nostrud\"\n        },\n        {\n          \"attribute\": \"culpa laborum proident\",\n          \"value\": \"eiusmod reprehenderit minim irure\"\n        }\n      ]\n    }\n  },\n  \"created\": \"1963-05-18T19:11:25.779Z\",\n  \"cve\": \"nulla Ut consequat\",\n  \"default_security_profile\": \"quis id\",\n  \"description\": \"nulla in aliqua esse\",\n  \"domain\": \"in incididunt\",\n  \"drift_prevention\": {\n    \"enabled\": false,\n    \"exec_lockdown\": false,\n    \"image_lockdown\": false\n  },\n  \"enable_fork_guard\": false,\n  \"enable_ip_reputation\": true,\n  \"enable_dns_reputation\": true,\n  \"enable_crypto_mining_dns\": false,\n  \"enable_port_scan_protection\": true,\n  \"enabled\": false,\n  \"enforce\": true,\n  \"enforce_after_days\": 64969540,\n  \"enforce_scheduler_added_on\": -91563994,\n  \"executable_blacklist\": {\n    \"enabled\": true,\n    \"executables\": [\n      \"aute aliqua consequat dolore voluptate\",\n      \"officia consequat\"\n    ]\n  },\n  \"file_block\": {\n    \"enabled\": false,\n    \"filename_block_list\": [\n      \"proident amet laborum quis irure\",\n      \"voluptate exercitation\"\n    ]\n  },\n  \"file_integrity_monitoring\": {\n    \"enabled\": true,\n    \"exceptional_monitored_files\": [\n      \"aliqua sed es\",\n      \"Duis magna Excepteur\"\n    ],\n    \"monitored_files\": [\n      \"id magna voluptate labore amet\",\n      \"u\"\n    ],\n    \"monitored_files_attributes\": true,\n    \"monitored_files_modify\": false,\n    \"monitored_files_read\": false\n  },\n  \"fork_guard_process_limit\": 8404914,\n  \"image_name\": \"cillum vol\",\n  \"is_audit_checked\": true,\n  \"is_auto_generated\": true,\n  \"lastupdate\": 35079054,\n  \"limit_container_privileges\": {\n    \"block_add_capabilities\": false,\n    \"enabled\": true,\n    \"ipcmode\": true,\n    \"netmode\": false,\n    \"pidmode\": false,\n    \"prevent_low_port_binding\": false,\n    \"prevent_root_user\": true,\n    \"privileged\": false,\n    \"use_host_user\": true,\n    \"usermode\": true,\n    \"utsmode\": false\n  },\n  \"linux_capabilities\": {\n    \"enabled\": true,\n    \"remove_linux_capabilities\": [\n      \"ipsum reprehenderit voluptate occaecat proi\",\n      \"amet ea\"\n    ]\n  },\n  \"name\": \"magna id cupidatat\",\n  \"no_new_privileges\": false,\n  \"only_registered_images\": true,\n  \"package_block\": {\n    \"enabled\": false,\n    \"package_black_list\": [\n      \"ut est aute Ut\",\n      \"laborum conseq\"\n    ]\n  },\n  \"port_block\": {\n    \"block_inbound_ports\": [\n      \"ut ullamco reprehenderit\",\n      \"enim officia\"\n    ],\n    \"block_outbound_ports\": [\n      \"proident sunt ut cillum\",\n      \"nulla nisi occaecat\"\n    ],\n    \"enabled\": true\n  },\n  \"prevent_override_default_config\": {\n    \"enabled\": true,\n    \"enforce_apparmor\": false,\n    \"enforce_seccomp\": false,\n    \"enforce_selinux\": false\n  },\n  \"readonly\": false,\n  \"readonly_files\": {\n    \"enabled\": false,\n    \"exceptional_readonly_files\": [\n      \"sunt anim\",\n      \"ut in tempor Duis\"\n    ],\n    \"readonly_files\": [\n      \"irure consequat esse\",\n      \"laboris\"\n    ]\n  },\n  \"repo_name\": \"nostrud Ut\",\n  \"resource_name\": \"dolore qui\",\n  \"resource_type\": \"commodo non exercitation\",\n  \"restricted_volumes\": {\n    \"enabled\": false,\n    \"volumes\": [\n      \"reprehenderit laborum Excepteur\",\n      \"Ut ex exercitation\"\n    ]\n  },\n  \"runtime_type\": \"esse\",\n  \"scope\": {\n    \"name\": \"reprehenderit in\",\n    \"categories\": {\n      \"artifacts\": {\n        \"image\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"function\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"pas_droplet\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"workloads\": {\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"cf\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"infrastructure\": {\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"entity_scope\": {\n        \"expression\": \"sed non in do\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"description\": \"aliquip\",\n    \"author\": \"reprehenderit tempor officia Lorem in\",\n    \"updated\": \"Excepteur mollit eiusmod\"\n  },\n  \"tripwire\": {\n    \"apply_on\": [\n      \"adipisicing in dolor\",\n      \"ullamco \"\n    ],\n    \"enabled\": true,\n    \"serverless_app\": \"labore dolor amet ad\",\n    \"user_id\": \"anim Ut consectetur\",\n    \"user_password\": \"officia\"\n  },\n  \"type\": \"proident consequat\",\n  \"updated\": \"1976-01-30T12:31:45.609Z\",\n  \"version\": \"et ex\",\n  \"vpatch_version\": \"labore anim\",\n  \"whitelisted_os_users\": {\n    \"enabled\": true,\n    \"group_white_list\": [\n      \"minim consectetur non eiusmod\",\n      \"Excepteur amet\"\n    ],\n    \"user_white_list\": [\n      \"voluptate ipsum ea in laborum\",\n      \"magna do\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) The Runtime Policy name to match"
												}
											]
										},
										"description": "Update details of named Runtime Policy"
									},
									"response": [
										{
											"name": "Details of Runtime Policy",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowed_executables\": {\n    \"allow_executables\": [\n      \"sint\",\n      \"mollit in labo\"\n    ],\n    \"allow_root_executables\": [\n      \"irure ut id dolor dolore\",\n      \"incididunt sed magna exercitation\"\n    ],\n    \"enabled\": true,\n    \"separate_executables\": false\n  },\n  \"auditing\": {\n    \"audit_all_network\": true,\n    \"audit_all_processes\": false,\n    \"audit_os_user_activity\": false,\n    \"audit_process_cmdline\": false,\n    \"audit_success_login\": true,\n    \"audit_failed_login\": false,\n    \"audit_brute_force_login\": true,\n    \"enabled\": true\n  },\n  \"author\": \"consectetur consequat pariatur\",\n  \"blacklisted_os_users\": {\n    \"enabled\": false,\n    \"group_black_list\": [\n      \"mollit\",\n      \"ex veniam dolor sunt\"\n    ],\n    \"user_black_list\": [\n      \"eu culpa est do cupidatat\",\n      \"aliquip\"\n    ]\n  },\n  \"block_disallowed_images\": false,\n  \"block_non_compliant_resources\": false,\n  \"block_nw_unlink_cont\": false,\n  \"bypass_scope\": {\n    \"enabled\": false,\n    \"scope\": {\n      \"expression\": \"ipsum\",\n      \"variables\": [\n        {\n          \"attribute\": \"dolor commodo exercitation\",\n          \"value\": \"cillum quis anim nostrud\"\n        },\n        {\n          \"attribute\": \"culpa laborum proident\",\n          \"value\": \"eiusmod reprehenderit minim irure\"\n        }\n      ]\n    }\n  },\n  \"created\": \"1963-05-18T19:11:25.779Z\",\n  \"cve\": \"nulla Ut consequat\",\n  \"default_security_profile\": \"quis id\",\n  \"description\": \"nulla in aliqua esse\",\n  \"domain\": \"in incididunt\",\n  \"drift_prevention\": {\n    \"enabled\": false,\n    \"exec_lockdown\": false,\n    \"image_lockdown\": false\n  },\n  \"enable_fork_guard\": false,\n  \"enable_ip_reputation\": true,\n  \"enable_dns_reputation\": true,\n  \"enable_crypto_mining_dns\": false,\n  \"enable_port_scan_protection\": true,\n  \"enabled\": false,\n  \"enforce\": true,\n  \"enforce_after_days\": 64969540,\n  \"enforce_scheduler_added_on\": -91563994,\n  \"executable_blacklist\": {\n    \"enabled\": true,\n    \"executables\": [\n      \"aute aliqua consequat dolore voluptate\",\n      \"officia consequat\"\n    ]\n  },\n  \"file_block\": {\n    \"enabled\": false,\n    \"filename_block_list\": [\n      \"proident amet laborum quis irure\",\n      \"voluptate exercitation\"\n    ]\n  },\n  \"file_integrity_monitoring\": {\n    \"enabled\": true,\n    \"exceptional_monitored_files\": [\n      \"aliqua sed es\",\n      \"Duis magna Excepteur\"\n    ],\n    \"monitored_files\": [\n      \"id magna voluptate labore amet\",\n      \"u\"\n    ],\n    \"monitored_files_attributes\": true,\n    \"monitored_files_modify\": false,\n    \"monitored_files_read\": false\n  },\n  \"fork_guard_process_limit\": 8404914,\n  \"image_name\": \"cillum vol\",\n  \"is_audit_checked\": true,\n  \"is_auto_generated\": true,\n  \"lastupdate\": 35079054,\n  \"limit_container_privileges\": {\n    \"block_add_capabilities\": false,\n    \"enabled\": true,\n    \"ipcmode\": true,\n    \"netmode\": false,\n    \"pidmode\": false,\n    \"prevent_low_port_binding\": false,\n    \"prevent_root_user\": true,\n    \"privileged\": false,\n    \"use_host_user\": true,\n    \"usermode\": true,\n    \"utsmode\": false\n  },\n  \"linux_capabilities\": {\n    \"enabled\": true,\n    \"remove_linux_capabilities\": [\n      \"ipsum reprehenderit voluptate occaecat proi\",\n      \"amet ea\"\n    ]\n  },\n  \"name\": \"magna id cupidatat\",\n  \"no_new_privileges\": false,\n  \"only_registered_images\": true,\n  \"package_block\": {\n    \"enabled\": false,\n    \"package_black_list\": [\n      \"ut est aute Ut\",\n      \"laborum conseq\"\n    ]\n  },\n  \"port_block\": {\n    \"block_inbound_ports\": [\n      \"ut ullamco reprehenderit\",\n      \"enim officia\"\n    ],\n    \"block_outbound_ports\": [\n      \"proident sunt ut cillum\",\n      \"nulla nisi occaecat\"\n    ],\n    \"enabled\": true\n  },\n  \"prevent_override_default_config\": {\n    \"enabled\": true,\n    \"enforce_apparmor\": false,\n    \"enforce_seccomp\": false,\n    \"enforce_selinux\": false\n  },\n  \"readonly\": false,\n  \"readonly_files\": {\n    \"enabled\": false,\n    \"exceptional_readonly_files\": [\n      \"sunt anim\",\n      \"ut in tempor Duis\"\n    ],\n    \"readonly_files\": [\n      \"irure consequat esse\",\n      \"laboris\"\n    ]\n  },\n  \"repo_name\": \"nostrud Ut\",\n  \"resource_name\": \"dolore qui\",\n  \"resource_type\": \"commodo non exercitation\",\n  \"restricted_volumes\": {\n    \"enabled\": false,\n    \"volumes\": [\n      \"reprehenderit laborum Excepteur\",\n      \"Ut ex exercitation\"\n    ]\n  },\n  \"runtime_type\": \"esse\",\n  \"scope\": {\n    \"name\": \"reprehenderit in\",\n    \"categories\": {\n      \"artifacts\": {\n        \"image\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"function\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"pas_droplet\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"workloads\": {\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"cf\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"infrastructure\": {\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"entity_scope\": {\n        \"expression\": \"sed non in do\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"description\": \"aliquip\",\n    \"author\": \"reprehenderit tempor officia Lorem in\",\n    \"updated\": \"Excepteur mollit eiusmod\"\n  },\n  \"tripwire\": {\n    \"apply_on\": [\n      \"adipisicing in dolor\",\n      \"ullamco \"\n    ],\n    \"enabled\": true,\n    \"serverless_app\": \"labore dolor amet ad\",\n    \"user_id\": \"anim Ut consectetur\",\n    \"user_password\": \"officia\"\n  },\n  \"type\": \"proident consequat\",\n  \"updated\": \"1976-01-30T12:31:45.609Z\",\n  \"version\": \"et ex\",\n  \"vpatch_version\": \"labore anim\",\n  \"whitelisted_os_users\": {\n    \"enabled\": true,\n    \"group_white_list\": [\n      \"minim consectetur non eiusmod\",\n      \"Excepteur amet\"\n    ],\n    \"user_white_list\": [\n      \"voluptate ipsum ea in laborum\",\n      \"magna do\"\n    ]\n  }\n}"
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "No matching Runtime Policy found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Download serverless Function Runtime Policy",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies/:name/download",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies",
												":name",
												"download"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) The Runtime Policy name to match"
												}
											]
										},
										"description": "Download a Runtime Policy layer for serverless functions, as a .zip archive"
									},
									"response": [
										{
											"name": ".zip archive of Runtime Policy details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name/download",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name",
														"download"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowed_executables\": {\n    \"allow_executables\": [\n      \"sint\",\n      \"mollit in labo\"\n    ],\n    \"allow_root_executables\": [\n      \"irure ut id dolor dolore\",\n      \"incididunt sed magna exercitation\"\n    ],\n    \"enabled\": true,\n    \"separate_executables\": false\n  },\n  \"auditing\": {\n    \"audit_all_network\": true,\n    \"audit_all_processes\": false,\n    \"audit_os_user_activity\": false,\n    \"audit_process_cmdline\": false,\n    \"audit_success_login\": true,\n    \"audit_failed_login\": false,\n    \"audit_brute_force_login\": true,\n    \"enabled\": true\n  },\n  \"author\": \"consectetur consequat pariatur\",\n  \"blacklisted_os_users\": {\n    \"enabled\": false,\n    \"group_black_list\": [\n      \"mollit\",\n      \"ex veniam dolor sunt\"\n    ],\n    \"user_black_list\": [\n      \"eu culpa est do cupidatat\",\n      \"aliquip\"\n    ]\n  },\n  \"block_disallowed_images\": false,\n  \"block_non_compliant_resources\": false,\n  \"block_nw_unlink_cont\": false,\n  \"bypass_scope\": {\n    \"enabled\": false,\n    \"scope\": {\n      \"expression\": \"ipsum\",\n      \"variables\": [\n        {\n          \"attribute\": \"dolor commodo exercitation\",\n          \"value\": \"cillum quis anim nostrud\"\n        },\n        {\n          \"attribute\": \"culpa laborum proident\",\n          \"value\": \"eiusmod reprehenderit minim irure\"\n        }\n      ]\n    }\n  },\n  \"created\": \"1963-05-18T19:11:25.779Z\",\n  \"cve\": \"nulla Ut consequat\",\n  \"default_security_profile\": \"quis id\",\n  \"description\": \"nulla in aliqua esse\",\n  \"domain\": \"in incididunt\",\n  \"drift_prevention\": {\n    \"enabled\": false,\n    \"exec_lockdown\": false,\n    \"image_lockdown\": false\n  },\n  \"enable_fork_guard\": false,\n  \"enable_ip_reputation\": true,\n  \"enable_dns_reputation\": true,\n  \"enable_crypto_mining_dns\": false,\n  \"enable_port_scan_protection\": true,\n  \"enabled\": false,\n  \"enforce\": true,\n  \"enforce_after_days\": 64969540,\n  \"enforce_scheduler_added_on\": -91563994,\n  \"executable_blacklist\": {\n    \"enabled\": true,\n    \"executables\": [\n      \"aute aliqua consequat dolore voluptate\",\n      \"officia consequat\"\n    ]\n  },\n  \"file_block\": {\n    \"enabled\": false,\n    \"filename_block_list\": [\n      \"proident amet laborum quis irure\",\n      \"voluptate exercitation\"\n    ]\n  },\n  \"file_integrity_monitoring\": {\n    \"enabled\": true,\n    \"exceptional_monitored_files\": [\n      \"aliqua sed es\",\n      \"Duis magna Excepteur\"\n    ],\n    \"monitored_files\": [\n      \"id magna voluptate labore amet\",\n      \"u\"\n    ],\n    \"monitored_files_attributes\": true,\n    \"monitored_files_modify\": false,\n    \"monitored_files_read\": false\n  },\n  \"fork_guard_process_limit\": 8404914,\n  \"image_name\": \"cillum vol\",\n  \"is_audit_checked\": true,\n  \"is_auto_generated\": true,\n  \"lastupdate\": 35079054,\n  \"limit_container_privileges\": {\n    \"block_add_capabilities\": false,\n    \"enabled\": true,\n    \"ipcmode\": true,\n    \"netmode\": false,\n    \"pidmode\": false,\n    \"prevent_low_port_binding\": false,\n    \"prevent_root_user\": true,\n    \"privileged\": false,\n    \"use_host_user\": true,\n    \"usermode\": true,\n    \"utsmode\": false\n  },\n  \"linux_capabilities\": {\n    \"enabled\": true,\n    \"remove_linux_capabilities\": [\n      \"ipsum reprehenderit voluptate occaecat proi\",\n      \"amet ea\"\n    ]\n  },\n  \"name\": \"magna id cupidatat\",\n  \"no_new_privileges\": false,\n  \"only_registered_images\": true,\n  \"package_block\": {\n    \"enabled\": false,\n    \"package_black_list\": [\n      \"ut est aute Ut\",\n      \"laborum conseq\"\n    ]\n  },\n  \"port_block\": {\n    \"block_inbound_ports\": [\n      \"ut ullamco reprehenderit\",\n      \"enim officia\"\n    ],\n    \"block_outbound_ports\": [\n      \"proident sunt ut cillum\",\n      \"nulla nisi occaecat\"\n    ],\n    \"enabled\": true\n  },\n  \"prevent_override_default_config\": {\n    \"enabled\": true,\n    \"enforce_apparmor\": false,\n    \"enforce_seccomp\": false,\n    \"enforce_selinux\": false\n  },\n  \"readonly\": false,\n  \"readonly_files\": {\n    \"enabled\": false,\n    \"exceptional_readonly_files\": [\n      \"sunt anim\",\n      \"ut in tempor Duis\"\n    ],\n    \"readonly_files\": [\n      \"irure consequat esse\",\n      \"laboris\"\n    ]\n  },\n  \"repo_name\": \"nostrud Ut\",\n  \"resource_name\": \"dolore qui\",\n  \"resource_type\": \"commodo non exercitation\",\n  \"restricted_volumes\": {\n    \"enabled\": false,\n    \"volumes\": [\n      \"reprehenderit laborum Excepteur\",\n      \"Ut ex exercitation\"\n    ]\n  },\n  \"runtime_type\": \"esse\",\n  \"scope\": {\n    \"name\": \"reprehenderit in\",\n    \"categories\": {\n      \"artifacts\": {\n        \"image\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"function\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"pas_droplet\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"workloads\": {\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"cf\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"infrastructure\": {\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"entity_scope\": {\n        \"expression\": \"sed non in do\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"description\": \"aliquip\",\n    \"author\": \"reprehenderit tempor officia Lorem in\",\n    \"updated\": \"Excepteur mollit eiusmod\"\n  },\n  \"tripwire\": {\n    \"apply_on\": [\n      \"adipisicing in dolor\",\n      \"ullamco \"\n    ],\n    \"enabled\": true,\n    \"serverless_app\": \"labore dolor amet ad\",\n    \"user_id\": \"anim Ut consectetur\",\n    \"user_password\": \"officia\"\n  },\n  \"type\": \"proident consequat\",\n  \"updated\": \"1976-01-30T12:31:45.609Z\",\n  \"version\": \"et ex\",\n  \"vpatch_version\": \"labore anim\",\n  \"whitelisted_os_users\": {\n    \"enabled\": true,\n    \"group_white_list\": [\n      \"minim consectetur non eiusmod\",\n      \"Excepteur amet\"\n    ],\n    \"user_white_list\": [\n      \"voluptate ipsum ea in laborum\",\n      \"magna do\"\n    ]\n  }\n}"
										},
										{
											"name": "Failed retrieving Runtime Policy details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name/download",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name",
														"download"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Update Runtime Policy vShield status",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies/:name/:status",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies",
												":name",
												":status"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) The Runtime Policy name to match"
												},
												{
													"key": "status",
													"value": "cillum exercitation",
													"description": "(Required) The new toggled vShield status ('enforce' or 'disable')"
												}
											]
										},
										"description": "Update vShield status of named Runtime Policy"
									},
									"response": [
										{
											"name": "Runtime Rolicy vShield status updated successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name/:status",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name",
														":status"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														},
														{
															"key": "status",
															"value": "cillum exercitation",
															"description": "(Required) The new toggled vShield status ('enforce' or 'disable')"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name/:status",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name",
														":status"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														},
														{
															"key": "status",
															"value": "cillum exercitation",
															"description": "(Required) The new toggled vShield status ('enforce' or 'disable')"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "vShield license does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name/:status",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name",
														":status"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														},
														{
															"key": "status",
															"value": "cillum exercitation",
															"description": "(Required) The new toggled vShield status ('enforce' or 'disable')"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "No matching Runtime Policy or status found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/runtime_policies/:name/:status",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"runtime_policies",
														":name",
														":status"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) The Runtime Policy name to match"
														},
														{
															"key": "status",
															"value": "cillum exercitation",
															"description": "(Required) The new toggled vShield status ('enforce' or 'disable')"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Runtime Policies",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/runtime_policies",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"runtime_policies"
									]
								},
								"description": "Get list of defined Runtime Policies"
							},
							"response": [
								{
									"name": "Database vital statistics",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": -48710232,\n  \"page\": -37580697,\n  \"pagesize\": -28235603,\n  \"query\": {\n    \"TripwireEnabled\": true,\n    \"domain\": \"eiusmod voluptate sed\",\n    \"identifiers_only\": false,\n    \"runtime_type\": \"anim aute consectetur qui\",\n    \"show_auto_generated\": \"cillum ullamco dolor\"\n  },\n  \"result\": [\n    {\n      \"author\": \"magna cillum en\",\n      \"created\": \"1947-03-08T04:44:10.397Z\",\n      \"cve\": \"veniam deserunt esse laboris\",\n      \"description\": \"Lorem occaecat cupidatat in ut\",\n      \"domain\": \"cill\",\n      \"enabled\": true,\n      \"enforce\": true,\n      \"enforce_after_days\": 5724008,\n      \"enforce_scheduler_added_on\": -79354361,\n      \"image_name\": \"do pariatur laboris Duis\",\n      \"is_audit_checked\": true,\n      \"is_auto_generated\": true,\n      \"lastupdate\": 4928230,\n      \"name\": \"consectetur ut do ex mollit\",\n      \"readonly\": true,\n      \"repo_name\": \"ex reprehenderit\",\n      \"resource_name\": \"ut\",\n      \"resource_type\": \"sunt dolore quis Lorem\",\n      \"runtime_type\": \"id quis\",\n      \"updated\": \"1973-08-10T21:27:41.505Z\",\n      \"version\": \"incididunt est non\",\n      \"vpatch_version\": \"cillum eu\"\n    },\n    {\n      \"author\": \"nostrud et\",\n      \"created\": \"2005-07-28T04:15:38.785Z\",\n      \"cve\": \"officia ipsum Duis\",\n      \"description\": \"sint anim culpa\",\n      \"domain\": \"velit consectetur ipsum\",\n      \"enabled\": false,\n      \"enforce\": true,\n      \"enforce_after_days\": -25444838,\n      \"enforce_scheduler_added_on\": 2817446,\n      \"image_name\": \"mollit ex amet\",\n      \"is_audit_checked\": false,\n      \"is_auto_generated\": true,\n      \"lastupdate\": 55274009,\n      \"name\": \"ipsum sed exercitation\",\n      \"readonly\": true,\n      \"repo_name\": \"aliquip qui ex incididunt\",\n      \"resource_name\": \"i\",\n      \"resource_type\": \"officia commodo pariatur\",\n      \"runtime_type\": \"cillum nostrud \",\n      \"updated\": \"1953-12-14T11:17:53.843Z\",\n      \"version\": \"elit ullamco\",\n      \"vpatch_version\": \"magna\"\n    }\n  ]\n}"
								},
								{
									"name": "Could not get database table info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Create Runtime Policy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"allowed_executables\": {\n    \"allow_executables\": [\n      \"ex qui\",\n      \"esse eu\"\n    ],\n    \"allow_root_executables\": [\n      \"amet deserunt laborum ei\",\n      \"aliqua mollit in magna incididunt\"\n    ],\n    \"enabled\": true,\n    \"separate_executables\": false\n  },\n  \"auditing\": {\n    \"audit_all_network\": false,\n    \"audit_all_processes\": false,\n    \"audit_os_user_activity\": false,\n    \"audit_process_cmdline\": false,\n    \"audit_success_login\": false,\n    \"audit_failed_login\": false,\n    \"audit_brute_force_login\": false,\n    \"enabled\": false\n  },\n  \"author\": \"tempor cupidatat in officia\",\n  \"blacklisted_os_users\": {\n    \"enabled\": false,\n    \"group_black_list\": [\n      \"proide\",\n      \"enim aliqua exercitation do\"\n    ],\n    \"user_black_list\": [\n      \"consequat ut incididunt aliqua nostrud\",\n      \"ut\"\n    ]\n  },\n  \"block_disallowed_images\": true,\n  \"block_non_compliant_resources\": true,\n  \"block_nw_unlink_cont\": true,\n  \"bypass_scope\": {\n    \"enabled\": false,\n    \"scope\": {\n      \"expression\": \"pariatur ex Excepteur\",\n      \"variables\": [\n        {\n          \"attribute\": \"aliqua ut non Ut\",\n          \"value\": \"mollit enim cillum ipsum fugiat\"\n        },\n        {\n          \"attribute\": \"ullamco anim\",\n          \"value\": \"nulla fugiat\"\n        }\n      ]\n    }\n  },\n  \"created\": \"2018-12-23T04:29:41.310Z\",\n  \"cve\": \"irure dolor magna pariatur laboris\",\n  \"default_security_profile\": \"proident al\",\n  \"description\": \"sunt minim tempor cillum\",\n  \"domain\": \"dolor aliqua\",\n  \"drift_prevention\": {\n    \"enabled\": true,\n    \"exec_lockdown\": true,\n    \"image_lockdown\": true\n  },\n  \"enable_fork_guard\": false,\n  \"enable_ip_reputation\": false,\n  \"enable_dns_reputation\": false,\n  \"enable_crypto_mining_dns\": true,\n  \"enable_port_scan_protection\": true,\n  \"enabled\": true,\n  \"enforce\": true,\n  \"enforce_after_days\": -69074642,\n  \"enforce_scheduler_added_on\": -36446341,\n  \"executable_blacklist\": {\n    \"enabled\": true,\n    \"executables\": [\n      \"voluptate ad\",\n      \"esse\"\n    ]\n  },\n  \"file_block\": {\n    \"enabled\": true,\n    \"filename_block_list\": [\n      \"nisi\",\n      \"cillum\"\n    ]\n  },\n  \"file_integrity_monitoring\": {\n    \"enabled\": false,\n    \"exceptional_monitored_files\": [\n      \"tempor officia ipsum\",\n      \"dolor dolor esse\"\n    ],\n    \"monitored_files\": [\n      \"ullamco ut\",\n      \"et ipsum aliqua ad\"\n    ],\n    \"monitored_files_attributes\": true,\n    \"monitored_files_modify\": true,\n    \"monitored_files_read\": true\n  },\n  \"fork_guard_process_limit\": -16140202,\n  \"image_name\": \"in officia dolor do proident\",\n  \"is_audit_checked\": true,\n  \"is_auto_generated\": false,\n  \"lastupdate\": 30112131,\n  \"limit_container_privileges\": {\n    \"block_add_capabilities\": true,\n    \"enabled\": true,\n    \"ipcmode\": true,\n    \"netmode\": true,\n    \"pidmode\": true,\n    \"prevent_low_port_binding\": false,\n    \"prevent_root_user\": false,\n    \"privileged\": false,\n    \"use_host_user\": true,\n    \"usermode\": false,\n    \"utsmode\": true\n  },\n  \"linux_capabilities\": {\n    \"enabled\": false,\n    \"remove_linux_capabilities\": [\n      \"sunt nisi ad pariat\",\n      \"cillum incididunt minim\"\n    ]\n  },\n  \"name\": \"adipisicing dolor Excepteur non\",\n  \"no_new_privileges\": true,\n  \"only_registered_images\": false,\n  \"package_block\": {\n    \"enabled\": true,\n    \"package_black_list\": [\n      \"laborum\",\n      \"id ut fugiat\"\n    ]\n  },\n  \"port_block\": {\n    \"block_inbound_ports\": [\n      \"sed sint\",\n      \"consectetur sit adipisicing id\"\n    ],\n    \"block_outbound_ports\": [\n      \"officia Excepteur\",\n      \"Lorem eu aliqua\"\n    ],\n    \"enabled\": false\n  },\n  \"prevent_override_default_config\": {\n    \"enabled\": true,\n    \"enforce_apparmor\": true,\n    \"enforce_seccomp\": true,\n    \"enforce_selinux\": false\n  },\n  \"readonly\": true,\n  \"readonly_files\": {\n    \"enabled\": true,\n    \"exceptional_readonly_files\": [\n      \"Excepteur anim labore pariatur\",\n      \"dolore commodo\"\n    ],\n    \"readonly_files\": [\n      \"ullamco ut\",\n      \"mollit Excepteur\"\n    ]\n  },\n  \"repo_name\": \"dolor eu\",\n  \"resource_name\": \"sit exercitation\",\n  \"resource_type\": \"dolor in\",\n  \"restricted_volumes\": {\n    \"enabled\": false,\n    \"volumes\": [\n      \"officia ullamco\",\n      \"cillum mollit dolore nostrud ex\"\n    ]\n  },\n  \"runtime_type\": \"minim magna ullamco\",\n  \"scope\": {\n    \"name\": \"est nostrud\",\n    \"categories\": {\n      \"artifacts\": {\n        \"image\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"function\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"pas_droplet\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"workloads\": {\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"cf\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"infrastructure\": {\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"entity_scope\": {\n        \"expression\": \"ea\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"description\": \"magna in\",\n    \"author\": \"i\",\n    \"updated\": \"\"\n  },\n  \"tripwire\": {\n    \"apply_on\": [\n      \"fugiat voluptate\",\n      \"in ullamco dolore fugiat\"\n    ],\n    \"enabled\": true,\n    \"serverless_app\": \"non dolor fugiat pariatur enim\",\n    \"user_id\": \"ex adipi\",\n    \"user_password\": \"sint\"\n  },\n  \"type\": \"qui eiusmod voluptate laboris\",\n  \"updated\": \"1957-08-11T12:07:30.600Z\",\n  \"version\": \"ipsum aliqua sit ad\",\n  \"vpatch_version\": \"ut dolore\",\n  \"whitelisted_os_users\": {\n    \"enabled\": false,\n    \"group_white_list\": [\n      \"cillum\",\n      \"esse\"\n    ],\n    \"user_white_list\": [\n      \"dolor mollit labore sint veniam\",\n      \"voluptate\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/runtime_policies",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"runtime_policies"
									]
								},
								"description": "Create new Runtime Policy based on specified details"
							},
							"response": [
								{
									"name": "Details of Runtime Policy",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"allowed_executables\": {\n    \"allow_executables\": [\n      \"sint\",\n      \"mollit in labo\"\n    ],\n    \"allow_root_executables\": [\n      \"irure ut id dolor dolore\",\n      \"incididunt sed magna exercitation\"\n    ],\n    \"enabled\": true,\n    \"separate_executables\": false\n  },\n  \"auditing\": {\n    \"audit_all_network\": true,\n    \"audit_all_processes\": false,\n    \"audit_os_user_activity\": false,\n    \"audit_process_cmdline\": false,\n    \"audit_success_login\": true,\n    \"audit_failed_login\": false,\n    \"audit_brute_force_login\": true,\n    \"enabled\": true\n  },\n  \"author\": \"consectetur consequat pariatur\",\n  \"blacklisted_os_users\": {\n    \"enabled\": false,\n    \"group_black_list\": [\n      \"mollit\",\n      \"ex veniam dolor sunt\"\n    ],\n    \"user_black_list\": [\n      \"eu culpa est do cupidatat\",\n      \"aliquip\"\n    ]\n  },\n  \"block_disallowed_images\": false,\n  \"block_non_compliant_resources\": false,\n  \"block_nw_unlink_cont\": false,\n  \"bypass_scope\": {\n    \"enabled\": false,\n    \"scope\": {\n      \"expression\": \"ipsum\",\n      \"variables\": [\n        {\n          \"attribute\": \"dolor commodo exercitation\",\n          \"value\": \"cillum quis anim nostrud\"\n        },\n        {\n          \"attribute\": \"culpa laborum proident\",\n          \"value\": \"eiusmod reprehenderit minim irure\"\n        }\n      ]\n    }\n  },\n  \"created\": \"1963-05-18T19:11:25.779Z\",\n  \"cve\": \"nulla Ut consequat\",\n  \"default_security_profile\": \"quis id\",\n  \"description\": \"nulla in aliqua esse\",\n  \"domain\": \"in incididunt\",\n  \"drift_prevention\": {\n    \"enabled\": false,\n    \"exec_lockdown\": false,\n    \"image_lockdown\": false\n  },\n  \"enable_fork_guard\": false,\n  \"enable_ip_reputation\": true,\n  \"enable_dns_reputation\": true,\n  \"enable_crypto_mining_dns\": false,\n  \"enable_port_scan_protection\": true,\n  \"enabled\": false,\n  \"enforce\": true,\n  \"enforce_after_days\": 64969540,\n  \"enforce_scheduler_added_on\": -91563994,\n  \"executable_blacklist\": {\n    \"enabled\": true,\n    \"executables\": [\n      \"aute aliqua consequat dolore voluptate\",\n      \"officia consequat\"\n    ]\n  },\n  \"file_block\": {\n    \"enabled\": false,\n    \"filename_block_list\": [\n      \"proident amet laborum quis irure\",\n      \"voluptate exercitation\"\n    ]\n  },\n  \"file_integrity_monitoring\": {\n    \"enabled\": true,\n    \"exceptional_monitored_files\": [\n      \"aliqua sed es\",\n      \"Duis magna Excepteur\"\n    ],\n    \"monitored_files\": [\n      \"id magna voluptate labore amet\",\n      \"u\"\n    ],\n    \"monitored_files_attributes\": true,\n    \"monitored_files_modify\": false,\n    \"monitored_files_read\": false\n  },\n  \"fork_guard_process_limit\": 8404914,\n  \"image_name\": \"cillum vol\",\n  \"is_audit_checked\": true,\n  \"is_auto_generated\": true,\n  \"lastupdate\": 35079054,\n  \"limit_container_privileges\": {\n    \"block_add_capabilities\": false,\n    \"enabled\": true,\n    \"ipcmode\": true,\n    \"netmode\": false,\n    \"pidmode\": false,\n    \"prevent_low_port_binding\": false,\n    \"prevent_root_user\": true,\n    \"privileged\": false,\n    \"use_host_user\": true,\n    \"usermode\": true,\n    \"utsmode\": false\n  },\n  \"linux_capabilities\": {\n    \"enabled\": true,\n    \"remove_linux_capabilities\": [\n      \"ipsum reprehenderit voluptate occaecat proi\",\n      \"amet ea\"\n    ]\n  },\n  \"name\": \"magna id cupidatat\",\n  \"no_new_privileges\": false,\n  \"only_registered_images\": true,\n  \"package_block\": {\n    \"enabled\": false,\n    \"package_black_list\": [\n      \"ut est aute Ut\",\n      \"laborum conseq\"\n    ]\n  },\n  \"port_block\": {\n    \"block_inbound_ports\": [\n      \"ut ullamco reprehenderit\",\n      \"enim officia\"\n    ],\n    \"block_outbound_ports\": [\n      \"proident sunt ut cillum\",\n      \"nulla nisi occaecat\"\n    ],\n    \"enabled\": true\n  },\n  \"prevent_override_default_config\": {\n    \"enabled\": true,\n    \"enforce_apparmor\": false,\n    \"enforce_seccomp\": false,\n    \"enforce_selinux\": false\n  },\n  \"readonly\": false,\n  \"readonly_files\": {\n    \"enabled\": false,\n    \"exceptional_readonly_files\": [\n      \"sunt anim\",\n      \"ut in tempor Duis\"\n    ],\n    \"readonly_files\": [\n      \"irure consequat esse\",\n      \"laboris\"\n    ]\n  },\n  \"repo_name\": \"nostrud Ut\",\n  \"resource_name\": \"dolore qui\",\n  \"resource_type\": \"commodo non exercitation\",\n  \"restricted_volumes\": {\n    \"enabled\": false,\n    \"volumes\": [\n      \"reprehenderit laborum Excepteur\",\n      \"Ut ex exercitation\"\n    ]\n  },\n  \"runtime_type\": \"esse\",\n  \"scope\": {\n    \"name\": \"reprehenderit in\",\n    \"categories\": {\n      \"artifacts\": {\n        \"image\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"function\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"pas_droplet\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"workloads\": {\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"cf\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"infrastructure\": {\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"entity_scope\": {\n        \"expression\": \"sed non in do\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"description\": \"aliquip\",\n    \"author\": \"reprehenderit tempor officia Lorem in\",\n    \"updated\": \"Excepteur mollit eiusmod\"\n  },\n  \"tripwire\": {\n    \"apply_on\": [\n      \"adipisicing in dolor\",\n      \"ullamco \"\n    ],\n    \"enabled\": true,\n    \"serverless_app\": \"labore dolor amet ad\",\n    \"user_id\": \"anim Ut consectetur\",\n    \"user_password\": \"officia\"\n  },\n  \"type\": \"proident consequat\",\n  \"updated\": \"1976-01-30T12:31:45.609Z\",\n  \"version\": \"et ex\",\n  \"vpatch_version\": \"labore anim\",\n  \"whitelisted_os_users\": {\n    \"enabled\": true,\n    \"group_white_list\": [\n      \"minim consectetur non eiusmod\",\n      \"Excepteur amet\"\n    ],\n    \"user_white_list\": [\n      \"voluptate ipsum ea in laborum\",\n      \"magna do\"\n    ]\n  }\n}"
								},
								{
									"name": "Input error - correct before resubmitting",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Match Runtime Policy to compliance type",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/runtime_policies/advice/:complianceType",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"runtime_policies",
										"advice",
										":complianceType"
									],
									"variable": [
										{
											"key": "complianceType",
											"value": "cillum exercitation",
											"description": "(Required) The compliance type to match"
										}
									]
								},
								"description": "Retrieve details of Runtime Policy associated with a specific compliance type"
							},
							"response": [
								{
									"name": "Details of Runtime Policy",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies/advice/:complianceType",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies",
												"advice",
												":complianceType"
											],
											"variable": [
												{
													"key": "complianceType",
													"value": "cillum exercitation",
													"description": "(Required) The compliance type to match"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"allowed_executables\": {\n    \"allow_executables\": [\n      \"sint\",\n      \"mollit in labo\"\n    ],\n    \"allow_root_executables\": [\n      \"irure ut id dolor dolore\",\n      \"incididunt sed magna exercitation\"\n    ],\n    \"enabled\": true,\n    \"separate_executables\": false\n  },\n  \"auditing\": {\n    \"audit_all_network\": true,\n    \"audit_all_processes\": false,\n    \"audit_os_user_activity\": false,\n    \"audit_process_cmdline\": false,\n    \"audit_success_login\": true,\n    \"audit_failed_login\": false,\n    \"audit_brute_force_login\": true,\n    \"enabled\": true\n  },\n  \"author\": \"consectetur consequat pariatur\",\n  \"blacklisted_os_users\": {\n    \"enabled\": false,\n    \"group_black_list\": [\n      \"mollit\",\n      \"ex veniam dolor sunt\"\n    ],\n    \"user_black_list\": [\n      \"eu culpa est do cupidatat\",\n      \"aliquip\"\n    ]\n  },\n  \"block_disallowed_images\": false,\n  \"block_non_compliant_resources\": false,\n  \"block_nw_unlink_cont\": false,\n  \"bypass_scope\": {\n    \"enabled\": false,\n    \"scope\": {\n      \"expression\": \"ipsum\",\n      \"variables\": [\n        {\n          \"attribute\": \"dolor commodo exercitation\",\n          \"value\": \"cillum quis anim nostrud\"\n        },\n        {\n          \"attribute\": \"culpa laborum proident\",\n          \"value\": \"eiusmod reprehenderit minim irure\"\n        }\n      ]\n    }\n  },\n  \"created\": \"1963-05-18T19:11:25.779Z\",\n  \"cve\": \"nulla Ut consequat\",\n  \"default_security_profile\": \"quis id\",\n  \"description\": \"nulla in aliqua esse\",\n  \"domain\": \"in incididunt\",\n  \"drift_prevention\": {\n    \"enabled\": false,\n    \"exec_lockdown\": false,\n    \"image_lockdown\": false\n  },\n  \"enable_fork_guard\": false,\n  \"enable_ip_reputation\": true,\n  \"enable_dns_reputation\": true,\n  \"enable_crypto_mining_dns\": false,\n  \"enable_port_scan_protection\": true,\n  \"enabled\": false,\n  \"enforce\": true,\n  \"enforce_after_days\": 64969540,\n  \"enforce_scheduler_added_on\": -91563994,\n  \"executable_blacklist\": {\n    \"enabled\": true,\n    \"executables\": [\n      \"aute aliqua consequat dolore voluptate\",\n      \"officia consequat\"\n    ]\n  },\n  \"file_block\": {\n    \"enabled\": false,\n    \"filename_block_list\": [\n      \"proident amet laborum quis irure\",\n      \"voluptate exercitation\"\n    ]\n  },\n  \"file_integrity_monitoring\": {\n    \"enabled\": true,\n    \"exceptional_monitored_files\": [\n      \"aliqua sed es\",\n      \"Duis magna Excepteur\"\n    ],\n    \"monitored_files\": [\n      \"id magna voluptate labore amet\",\n      \"u\"\n    ],\n    \"monitored_files_attributes\": true,\n    \"monitored_files_modify\": false,\n    \"monitored_files_read\": false\n  },\n  \"fork_guard_process_limit\": 8404914,\n  \"image_name\": \"cillum vol\",\n  \"is_audit_checked\": true,\n  \"is_auto_generated\": true,\n  \"lastupdate\": 35079054,\n  \"limit_container_privileges\": {\n    \"block_add_capabilities\": false,\n    \"enabled\": true,\n    \"ipcmode\": true,\n    \"netmode\": false,\n    \"pidmode\": false,\n    \"prevent_low_port_binding\": false,\n    \"prevent_root_user\": true,\n    \"privileged\": false,\n    \"use_host_user\": true,\n    \"usermode\": true,\n    \"utsmode\": false\n  },\n  \"linux_capabilities\": {\n    \"enabled\": true,\n    \"remove_linux_capabilities\": [\n      \"ipsum reprehenderit voluptate occaecat proi\",\n      \"amet ea\"\n    ]\n  },\n  \"name\": \"magna id cupidatat\",\n  \"no_new_privileges\": false,\n  \"only_registered_images\": true,\n  \"package_block\": {\n    \"enabled\": false,\n    \"package_black_list\": [\n      \"ut est aute Ut\",\n      \"laborum conseq\"\n    ]\n  },\n  \"port_block\": {\n    \"block_inbound_ports\": [\n      \"ut ullamco reprehenderit\",\n      \"enim officia\"\n    ],\n    \"block_outbound_ports\": [\n      \"proident sunt ut cillum\",\n      \"nulla nisi occaecat\"\n    ],\n    \"enabled\": true\n  },\n  \"prevent_override_default_config\": {\n    \"enabled\": true,\n    \"enforce_apparmor\": false,\n    \"enforce_seccomp\": false,\n    \"enforce_selinux\": false\n  },\n  \"readonly\": false,\n  \"readonly_files\": {\n    \"enabled\": false,\n    \"exceptional_readonly_files\": [\n      \"sunt anim\",\n      \"ut in tempor Duis\"\n    ],\n    \"readonly_files\": [\n      \"irure consequat esse\",\n      \"laboris\"\n    ]\n  },\n  \"repo_name\": \"nostrud Ut\",\n  \"resource_name\": \"dolore qui\",\n  \"resource_type\": \"commodo non exercitation\",\n  \"restricted_volumes\": {\n    \"enabled\": false,\n    \"volumes\": [\n      \"reprehenderit laborum Excepteur\",\n      \"Ut ex exercitation\"\n    ]\n  },\n  \"runtime_type\": \"esse\",\n  \"scope\": {\n    \"name\": \"reprehenderit in\",\n    \"categories\": {\n      \"artifacts\": {\n        \"image\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"function\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"pas_droplet\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"workloads\": {\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"cf\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"infrastructure\": {\n        \"kubernetes\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        },\n        \"os\": {\n          \"expression\": \"v1\",\n          \"variables\": [\n            {\n              \"attribute\": \"aqua.registry\",\n              \"value\": \"Docker Hub\",\n              \"name\": \"\"\n            }\n          ]\n        }\n      },\n      \"entity_scope\": {\n        \"expression\": \"sed non in do\",\n        \"variables\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    },\n    \"description\": \"aliquip\",\n    \"author\": \"reprehenderit tempor officia Lorem in\",\n    \"updated\": \"Excepteur mollit eiusmod\"\n  },\n  \"tripwire\": {\n    \"apply_on\": [\n      \"adipisicing in dolor\",\n      \"ullamco \"\n    ],\n    \"enabled\": true,\n    \"serverless_app\": \"labore dolor amet ad\",\n    \"user_id\": \"anim Ut consectetur\",\n    \"user_password\": \"officia\"\n  },\n  \"type\": \"proident consequat\",\n  \"updated\": \"1976-01-30T12:31:45.609Z\",\n  \"version\": \"et ex\",\n  \"vpatch_version\": \"labore anim\",\n  \"whitelisted_os_users\": {\n    \"enabled\": true,\n    \"group_white_list\": [\n      \"minim consectetur non eiusmod\",\n      \"Excepteur amet\"\n    ],\n    \"user_white_list\": [\n      \"voluptate ipsum ea in laborum\",\n      \"magna do\"\n    ]\n  }\n}"
								},
								{
									"name": "No matching Runtime Policy found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/runtime_policies/advice/:complianceType",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"runtime_policies",
												"advice",
												":complianceType"
											],
											"variable": [
												{
													"key": "complianceType",
													"value": "cillum exercitation",
													"description": "(Required) The compliance type to match"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "Firewall policies",
					"item": [
						{
							"name": "{policyid}",
							"item": [
								{
									"name": "Delete Firewall Policy",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/firewall_policies/:policyid",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"firewall_policies",
												":policyid"
											],
											"variable": [
												{
													"key": "policyid",
													"value": "cillum exercitation",
													"description": "(Required) The Firewall Policy name to match"
												}
											]
										},
										"description": "Delete named Firewall Policy"
									},
									"response": [
										{
											"name": "Firewall Policy deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/firewall_policies/:policyid",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"firewall_policies",
														":policyid"
													],
													"variable": [
														{
															"key": "policyid",
															"value": "cillum exercitation",
															"description": "(Required) The Firewall Policy name to match"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "No matching Policy found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/firewall_policies/:policyid",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"firewall_policies",
														":policyid"
													],
													"variable": [
														{
															"key": "policyid",
															"value": "cillum exercitation",
															"description": "(Required) The Firewall Policy name to match"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Get Firewall Policy",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/firewall_policies/:policyid",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"firewall_policies",
												":policyid"
											],
											"variable": [
												{
													"key": "policyid",
													"value": "cillum exercitation",
													"description": "(Required) The Firewall Policy name to match"
												}
											]
										},
										"description": "Retrieve details of named Firewall Policy"
									},
									"response": [
										{
											"name": "Details of Firewall Policy",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/firewall_policies/:policyid",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"firewall_policies",
														":policyid"
													],
													"variable": [
														{
															"key": "policyid",
															"value": "cillum exercitation",
															"description": "(Required) The Firewall Policy name to match"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"author\": \"commodo nulla sint aliqui\",\n  \"block_icmp_ping\": true,\n  \"block_metadata_service\": true,\n  \"description\": \"et adipisicing\",\n  \"inbound_networks\": [\n    {\n      \"allow\": true,\n      \"port_range\": \"aliqua dolore sit deserunt\",\n      \"resource\": \"Ut commodo\",\n      \"resource_type\": \"eiusmod non ad id\"\n    },\n    {\n      \"allow\": false,\n      \"port_range\": \"magna enim\",\n      \"resource\": \"elit est\",\n      \"resource_type\": \"consequat non ad labore\"\n    }\n  ],\n  \"lastupdate\": 56993346,\n  \"name\": \"ut elit\",\n  \"outbound_networks\": [\n    {\n      \"allow\": true,\n      \"port_range\": \"ad amet\",\n      \"resource\": \"aute ullamco\",\n      \"resource_type\": \"sit deserunt\"\n    },\n    {\n      \"allow\": false,\n      \"port_range\": \"sed elit enim aliquip\",\n      \"resource\": \"pariatur in magna laboris aliquip\",\n      \"resource_type\": \"Lorem irure adipisicing ea\"\n    }\n  ],\n  \"type\": \"nulla ad sed in\",\n  \"version\": \"Lorem quis\"\n}"
										},
										{
											"name": "No matching Policy found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/firewall_policies/:policyid",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"firewall_policies",
														":policyid"
													],
													"variable": [
														{
															"key": "policyid",
															"value": "cillum exercitation",
															"description": "(Required) The Firewall Policy name to match"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Update Firewall Policy",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"author\": \"commodo nulla sint aliqui\",\n  \"block_icmp_ping\": true,\n  \"block_metadata_service\": true,\n  \"description\": \"et adipisicing\",\n  \"inbound_networks\": [\n    {\n      \"allow\": true,\n      \"port_range\": \"aliqua dolore sit deserunt\",\n      \"resource\": \"Ut commodo\",\n      \"resource_type\": \"eiusmod non ad id\"\n    },\n    {\n      \"allow\": false,\n      \"port_range\": \"magna enim\",\n      \"resource\": \"elit est\",\n      \"resource_type\": \"consequat non ad labore\"\n    }\n  ],\n  \"lastupdate\": 56993346,\n  \"name\": \"ut elit\",\n  \"outbound_networks\": [\n    {\n      \"allow\": true,\n      \"port_range\": \"ad amet\",\n      \"resource\": \"aute ullamco\",\n      \"resource_type\": \"sit deserunt\"\n    },\n    {\n      \"allow\": false,\n      \"port_range\": \"sed elit enim aliquip\",\n      \"resource\": \"pariatur in magna laboris aliquip\",\n      \"resource_type\": \"Lorem irure adipisicing ea\"\n    }\n  ],\n  \"type\": \"nulla ad sed in\",\n  \"version\": \"Lorem quis\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/firewall_policies/:policyid",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"firewall_policies",
												":policyid"
											],
											"variable": [
												{
													"key": "policyid",
													"value": "cillum exercitation",
													"description": "(Required) The firewall Policy name to match"
												}
											]
										},
										"description": "Update details of named Firewall Policy"
									},
									"response": [
										{
											"name": "Details of Firewall Policy",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/firewall_policies/:policyid",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"firewall_policies",
														":policyid"
													],
													"variable": [
														{
															"key": "policyid",
															"value": "cillum exercitation",
															"description": "(Required) The firewall Policy name to match"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"author\": \"commodo nulla sint aliqui\",\n  \"block_icmp_ping\": true,\n  \"block_metadata_service\": true,\n  \"description\": \"et adipisicing\",\n  \"inbound_networks\": [\n    {\n      \"allow\": true,\n      \"port_range\": \"aliqua dolore sit deserunt\",\n      \"resource\": \"Ut commodo\",\n      \"resource_type\": \"eiusmod non ad id\"\n    },\n    {\n      \"allow\": false,\n      \"port_range\": \"magna enim\",\n      \"resource\": \"elit est\",\n      \"resource_type\": \"consequat non ad labore\"\n    }\n  ],\n  \"lastupdate\": 56993346,\n  \"name\": \"ut elit\",\n  \"outbound_networks\": [\n    {\n      \"allow\": true,\n      \"port_range\": \"ad amet\",\n      \"resource\": \"aute ullamco\",\n      \"resource_type\": \"sit deserunt\"\n    },\n    {\n      \"allow\": false,\n      \"port_range\": \"sed elit enim aliquip\",\n      \"resource\": \"pariatur in magna laboris aliquip\",\n      \"resource_type\": \"Lorem irure adipisicing ea\"\n    }\n  ],\n  \"type\": \"nulla ad sed in\",\n  \"version\": \"Lorem quis\"\n}"
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/firewall_policies/:policyid",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"firewall_policies",
														":policyid"
													],
													"variable": [
														{
															"key": "policyid",
															"value": "cillum exercitation",
															"description": "(Required) The firewall Policy name to match"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "No matching policy found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/firewall_policies/:policyid",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"firewall_policies",
														":policyid"
													],
													"variable": [
														{
															"key": "policyid",
															"value": "cillum exercitation",
															"description": "(Required) The firewall Policy name to match"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "applications",
							"item": [
								{
									"name": "List Aqua services",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v1}}/applications?internal=true&scope_names=cillum exercitation&search=cillum exercitation&orderby=cillum exercitation",
											"host": [
												"{{aqua_url_v1}}"
											],
											"path": [
												"applications"
											],
											"query": [
												{
													"key": "internal",
													"value": "true"
												},
												{
													"key": "scope_names",
													"value": "cillum exercitation"
												},
												{
													"key": "search",
													"value": "cillum exercitation"
												},
												{
													"key": "orderby",
													"value": "cillum exercitation"
												}
											]
										},
										"description": "Return a list of all Aqua services"
									},
									"response": [
										{
											"name": "List all existing Aqua services",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v1}}/applications?internal=true&scope_names=cillum exercitation&search=cillum exercitation&orderby=cillum exercitation",
													"host": [
														"{{aqua_url_v1}}"
													],
													"path": [
														"applications"
													],
													"query": [
														{
															"key": "internal",
															"value": "true"
														},
														{
															"key": "scope_names",
															"value": "cillum exercitation"
														},
														{
															"key": "search",
															"value": "cillum exercitation"
														},
														{
															"key": "orderby",
															"value": "cillum exercitation"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": -23793866,\n  \"page\": -24447758,\n  \"pagesize\": 15487297,\n  \"result\": [\n    {\n      \"name\": \"tempor amet minim veniam\",\n      \"description\": \"enim dolor Lorem est\",\n      \"author\": \"nisi veniam elit velit\",\n      \"lastupdate\": 90849168,\n      \"version\": \"Excepteur labore\",\n      \"enforce\": false,\n      \"internal\": true,\n      \"permission\": \"occaecat incididunt\",\n      \"application_scopes\": [\n        \"in\",\n        \"ea\"\n      ],\n      \"containers\": [\n        {\n          \"container_id\": \"deserunt non culpa\",\n          \"container_name\": \"veniam commodo\",\n          \"host_id\": \"et velit sunt nulla\",\n          \"host_name\": \"nulla anim sed eu\"\n        },\n        {\n          \"container_id\": \"Lorem cupidatat exer\",\n          \"container_name\": \"officia Duis Lorem ad consectetur\",\n          \"host_id\": \"amet velit Ut\",\n          \"host_name\": \"id culpa Excepteur\"\n        }\n      ],\n      \"containers_count\": 69159383,\n      \"count\": -4910851,\n      \"evaluated\": true,\n      \"policies\": [\n        \"elit pariatur quis Ut sint\",\n        \"adipisicing reprehenderit\"\n      ],\n      \"monitoring\": false,\n      \"membership_rules\": {},\n      \"not_evaluated_count\": -60208913,\n      \"unregistered_count\": 13418073,\n      \"is_registered\": true,\n      \"vulnerability_risk\": 53068017\n    },\n    {\n      \"name\": \"incididunt\",\n      \"description\": \"anim nulla do sunt officia\",\n      \"author\": \"Duis mollit dolor proiden\",\n      \"lastupdate\": -90786928,\n      \"version\": \"proiden\",\n      \"enforce\": true,\n      \"internal\": true,\n      \"permission\": \"nulla\",\n      \"application_scopes\": [\n        \"minim commodo nostrud nisi eiusmod\",\n        \"ullamco ex anim Lorem\"\n      ],\n      \"containers\": [\n        {\n          \"container_id\": \"dolore\",\n          \"container_name\": \"veniam aliquip dolor ex nostrud\",\n          \"host_id\": \"\",\n          \"host_name\": \"laboris dolor ex\"\n        },\n        {\n          \"container_id\": \"pariatur\",\n          \"container_name\": \"est adipisicing enim in\",\n          \"host_id\": \"sint pariatur mollit\",\n          \"host_name\": \"non aliqua ex laboris\"\n        }\n      ],\n      \"containers_count\": 38245188,\n      \"count\": 23815709,\n      \"evaluated\": false,\n      \"policies\": [\n        \"pariatur in\",\n        \"tempor Ut\"\n      ],\n      \"monitoring\": true,\n      \"membership_rules\": {},\n      \"not_evaluated_count\": -38937392,\n      \"unregistered_count\": -84036582,\n      \"is_registered\": true,\n      \"vulnerability_risk\": -61688334\n    }\n  ]\n}"
										},
										{
											"name": "Failed to get the list of Aqua services",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v1}}/applications?internal=true&scope_names=cillum exercitation&search=cillum exercitation&orderby=cillum exercitation",
													"host": [
														"{{aqua_url_v1}}"
													],
													"path": [
														"applications"
													],
													"query": [
														{
															"key": "internal",
															"value": "true"
														},
														{
															"key": "scope_names",
															"value": "cillum exercitation"
														},
														{
															"key": "search",
															"value": "cillum exercitation"
														},
														{
															"key": "orderby",
															"value": "cillum exercitation"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Aqua service",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v1}}/applications/:appid",
											"host": [
												"{{aqua_url_v1}}"
											],
											"path": [
												"applications",
												":appid"
											],
											"variable": [
												{
													"key": "appid",
													"value": "cillum exercitation",
													"description": "(Required) The ID of the requested service"
												}
											]
										},
										"description": "Return information about an Aqua service"
									},
									"response": [
										{
											"name": "Aqua service data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v1}}/applications/:appid",
													"host": [
														"{{aqua_url_v1}}"
													],
													"path": [
														"applications",
														":appid"
													],
													"variable": [
														{
															"key": "appid",
															"value": "cillum exercitation",
															"description": "(Required) The ID of the requested service"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"result\": {\n    \"name\": \"deserunt sint\",\n    \"description\": \"fugiat sed dolor labore\",\n    \"author\": \"nulla veniam\",\n    \"lastupdate\": 62249980,\n    \"version\": \"commodo veniam sit\",\n    \"enforce\": false,\n    \"internal\": false,\n    \"permission\": \"occaecat consequat quis\",\n    \"application_scopes\": [\n      \"Ut eu\",\n      \"ea qui ullamco veniam\"\n    ],\n    \"containers\": [\n      {\n        \"container_id\": \"laboris pariatur magna sunt\",\n        \"container_name\": \"veniam aliquip\",\n        \"host_id\": \"sed consectetur d\",\n        \"host_name\": \"amet laborum labore\"\n      },\n      {\n        \"container_id\": \"minim adipisicing id aliquip\",\n        \"container_name\": \"mollit\",\n        \"host_id\": \"voluptate anim\",\n        \"host_name\": \"consectetur\"\n      }\n    ],\n    \"containers_count\": -31726766,\n    \"count\": 9520470,\n    \"evaluated\": false,\n    \"policies\": [\n      \"cupidatat dolore\",\n      \"veniam\"\n    ],\n    \"monitoring\": true,\n    \"membership_rules\": {},\n    \"not_evaluated_count\": -59568311,\n    \"unregistered_count\": 78228400,\n    \"is_registered\": true,\n    \"vulnerability_risk\": -87031713\n  }\n}"
										},
										{
											"name": "Failed to get information about the Aqua service",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v1}}/applications/:appid",
													"host": [
														"{{aqua_url_v1}}"
													],
													"path": [
														"applications",
														":appid"
													],
													"variable": [
														{
															"key": "appid",
															"value": "cillum exercitation",
															"description": "(Required) The ID of the requested service"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Firewall Policies",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/firewall_policies?page_size=100&page=1",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"firewall_policies"
									],
									"query": [
										{
											"key": "page_size",
											"value": "100",
											"description": "The maximum number of images to be listed"
										},
										{
											"key": "page",
											"value": "1",
											"description": "List images from the provided page of results"
										},
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Set ordering of returned results. May be repeated to order by multiple attributes. Allowed attributes are 'name', 'type', 'author'. Prefix any attribute with '-' to reverse the order.",
											"disabled": true
										},
										{
											"key": "search",
											"value": "cillum exercitation",
											"description": "Search string to display only those that match.",
											"disabled": true
										}
									]
								},
								"description": "Get list of defined Firewall Policies"
							},
							"response": [
								{
									"name": "List of all network policies",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/firewall_policies?page_size=-96481460&page=-96481460&order_by=cillum exercitation&search=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"firewall_policies"
											],
											"query": [
												{
													"key": "page_size",
													"value": "-96481460"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "search",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 47461523,\n  \"page\": 53273594,\n  \"pagesize\": -95577338,\n  \"result\": [\n    {\n      \"author\": \"dolor esse\",\n      \"block_icmp_ping\": false,\n      \"block_metadata_service\": true,\n      \"description\": \"commodo Lorem Excepteur in\",\n      \"inbound_networks\": [\n        {\n          \"allow\": true,\n          \"port_range\": \"deserunt minim qui consequat\",\n          \"resource\": \"ea sunt mollit\",\n          \"resource_type\": \"deserunt ad officia esse\"\n        },\n        {\n          \"allow\": true,\n          \"port_range\": \"dolor mollit est\",\n          \"resource\": \"esse anim dolore sint\",\n          \"resource_type\": \"la\"\n        }\n      ],\n      \"lastupdate\": -44498311,\n      \"name\": \"n\",\n      \"outbound_networks\": [\n        {\n          \"allow\": false,\n          \"port_range\": \"reprehenderit deserunt\",\n          \"resource\": \"dolor ea eu\",\n          \"resource_type\": \"ad velit\"\n        },\n        {\n          \"allow\": false,\n          \"port_range\": \"sun\",\n          \"resource\": \"est Duis ut velit\",\n          \"resource_type\": \"d\"\n        }\n      ],\n      \"type\": \"occaecat Exc\",\n      \"version\": \"ipsum\"\n    },\n    {\n      \"author\": \"officia pariatur enim ex proident\",\n      \"block_icmp_ping\": true,\n      \"block_metadata_service\": true,\n      \"description\": \"Ut ut\",\n      \"inbound_networks\": [\n        {\n          \"allow\": true,\n          \"port_range\": \"quis sed\",\n          \"resource\": \"sit in\",\n          \"resource_type\": \"amet deserunt eiusmod minim\"\n        },\n        {\n          \"allow\": true,\n          \"port_range\": \"nisi sed\",\n          \"resource\": \"qui ipsum anim aliqua\",\n          \"resource_type\": \"non i\"\n        }\n      ],\n      \"lastupdate\": 29496775,\n      \"name\": \"ut deserunt aliqua\",\n      \"outbound_networks\": [\n        {\n          \"allow\": true,\n          \"port_range\": \"mollit aute non\",\n          \"resource\": \"nostrud\",\n          \"resource_type\": \"tempor Ut sunt anim dolore\"\n        },\n        {\n          \"allow\": false,\n          \"port_range\": \"labore sint\",\n          \"resource\": \"do adipisicing in ea\",\n          \"resource_type\": \"cillum irure adipisicing id\"\n        }\n      ],\n      \"type\": \"commodo cil\",\n      \"version\": \"qui velit\"\n    }\n  ]\n}"
								},
								{
									"name": "Could not get information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/firewall_policies?page_size=-96481460&page=-96481460&order_by=cillum exercitation&search=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"firewall_policies"
											],
											"query": [
												{
													"key": "page_size",
													"value": "-96481460"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "search",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Create Firewall Policy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"author\": \"commodo nulla sint aliqui\",\n  \"block_icmp_ping\": true,\n  \"block_metadata_service\": true,\n  \"description\": \"et adipisicing\",\n  \"inbound_networks\": [\n    {\n      \"allow\": true,\n      \"port_range\": \"aliqua dolore sit deserunt\",\n      \"resource\": \"Ut commodo\",\n      \"resource_type\": \"eiusmod non ad id\"\n    },\n    {\n      \"allow\": false,\n      \"port_range\": \"magna enim\",\n      \"resource\": \"elit est\",\n      \"resource_type\": \"consequat non ad labore\"\n    }\n  ],\n  \"lastupdate\": 56993346,\n  \"name\": \"ut elit\",\n  \"outbound_networks\": [\n    {\n      \"allow\": true,\n      \"port_range\": \"ad amet\",\n      \"resource\": \"aute ullamco\",\n      \"resource_type\": \"sit deserunt\"\n    },\n    {\n      \"allow\": false,\n      \"port_range\": \"sed elit enim aliquip\",\n      \"resource\": \"pariatur in magna laboris aliquip\",\n      \"resource_type\": \"Lorem irure adipisicing ea\"\n    }\n  ],\n  \"type\": \"nulla ad sed in\",\n  \"version\": \"Lorem quis\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/firewall_policies",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"firewall_policies"
									]
								},
								"description": "Create a new Firewall Policy based on details specified"
							},
							"response": [
								{
									"name": "Details of Runtime Policy",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/firewall_policies",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"firewall_policies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"author\": \"commodo nulla sint aliqui\",\n  \"block_icmp_ping\": true,\n  \"block_metadata_service\": true,\n  \"description\": \"et adipisicing\",\n  \"inbound_networks\": [\n    {\n      \"allow\": true,\n      \"port_range\": \"aliqua dolore sit deserunt\",\n      \"resource\": \"Ut commodo\",\n      \"resource_type\": \"eiusmod non ad id\"\n    },\n    {\n      \"allow\": false,\n      \"port_range\": \"magna enim\",\n      \"resource\": \"elit est\",\n      \"resource_type\": \"consequat non ad labore\"\n    }\n  ],\n  \"lastupdate\": 56993346,\n  \"name\": \"ut elit\",\n  \"outbound_networks\": [\n    {\n      \"allow\": true,\n      \"port_range\": \"ad amet\",\n      \"resource\": \"aute ullamco\",\n      \"resource_type\": \"sit deserunt\"\n    },\n    {\n      \"allow\": false,\n      \"port_range\": \"sed elit enim aliquip\",\n      \"resource\": \"pariatur in magna laboris aliquip\",\n      \"resource_type\": \"Lorem irure adipisicing ea\"\n    }\n  ],\n  \"type\": \"nulla ad sed in\",\n  \"version\": \"Lorem quis\"\n}"
								},
								{
									"name": "Input error - correct before resubmitting",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/firewall_policies",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"firewall_policies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "Services",
					"item": [
						{
							"name": "Get all CF policies",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{admin-user}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{admin-password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v1}}/networkpolicies/default",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"networkpolicies",
										"default"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add CF policy",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{admin-user}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{admin-password}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"example-cf-policy\",\r\n  \"description\": \"Description of example-cf-policy\",\r\n  \"version\": \"1.0\",\r\n  \"outbound_networks\": [\r\n    {\r\n      \"port_range\": \"22\",\r\n      \"resource\": \"0.0.0.0/0\",\r\n      \"allow\": false,\r\n      \"resource_type\": \"anywhere\"\r\n    },\r\n    {\r\n      \"port_range\": \"443\",\r\n      \"resource\": \"test\",\r\n      \"allow\": true,\r\n      \"resource_type\": \"application\"\r\n    },\r\n    {\r\n      \"port_range\": \"443\",\r\n      \"resource\": \"190.1.2.3/12\",\r\n      \"allow\": true,\r\n      \"resource_type\": \"custom\"\r\n    },\r\n    {\r\n      \"port_range\": \"80\",\r\n      \"resource\": \"190.1.2.3/12\",\r\n      \"allow\": false,\r\n      \"resource_type\": \"custom\"\r\n    }\r\n  ],\r\n  \"inbound_networks\": [\r\n    {\r\n      \"port_range\": \"443\",\r\n      \"resource\": \"test\",\r\n      \"allow\": true,\r\n      \"resource_type\": \"application\"\r\n    },\r\n    {\r\n      \"port_range\": \"80\",\r\n      \"resource\": \"10.9.8.6/12\",\r\n      \"allow\": false,\r\n      \"resource_type\": \"custom\"\r\n    },\r\n    {\r\n      \"port_range\": \"80\",\r\n      \"resource\": \"0.0.0.0/0\",\r\n      \"allow\": true,\r\n      \"resource_type\": \"anywhere\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{aqua_url_v1}}/networkpolicies",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"networkpolicies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify CF policy",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"example-cf-policy\",\r\n  \"description\": \"New description of example-cf-policy\",\r\n  \"version\": \"1.0\",\r\n  \"outbound_networks\": [\r\n    {\r\n      \"port_range\": \"24\",\r\n      \"resource\": \"0.0.0.0/0\",\r\n      \"allow\": false,\r\n      \"resource_type\": \"anywhere\"\r\n    },\r\n    {\r\n      \"port_range\": \"443\",\r\n      \"resource\": \"test\",\r\n      \"allow\": true,\r\n      \"resource_type\": \"application\"\r\n    },\r\n    {\r\n      \"port_range\": \"443\",\r\n      \"resource\": \"190.1.2.3/12\",\r\n      \"allow\": true,\r\n      \"resource_type\": \"custom\"\r\n    },\r\n    {\r\n      \"port_range\": \"80\",\r\n      \"resource\": \"190.1.2.3/12\",\r\n      \"allow\": false,\r\n      \"resource_type\": \"custom\"\r\n    }\r\n  ],\r\n  \"inbound_networks\": [\r\n    {\r\n      \"port_range\": \"443\",\r\n      \"resource\": \"test\",\r\n      \"allow\": true,\r\n      \"resource_type\": \"application\"\r\n    },\r\n    {\r\n      \"port_range\": \"80\",\r\n      \"resource\": \"10.9.8.6/12\",\r\n      \"allow\": false,\r\n      \"resource_type\": \"custom\"\r\n    },\r\n    {\r\n      \"port_range\": \"80\",\r\n      \"resource\": \"0.0.0.0/0\",\r\n      \"allow\": true,\r\n      \"resource_type\": \"anywhere\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{aqua_url_v1}}/networkpolicies/example-cf-policy",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"networkpolicies",
										"example-cf-policy"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove CF policy",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{aqua_url_v1}}/networkpolicies/TWO Example Container Firewall Policy",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"networkpolicies",
										"TWO Example Container Firewall Policy"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get specific CF policy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v1}}/networkpolicies",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"networkpolicies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Service",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"example-service\",\r\n  \"description\": \"Description of example-service\",\r\n  \"policies\": [\r\n    \"example-cf-policy\",\r\n    \"default\"\r\n  ],\r\n  \"containers\": []\r\n}"
								},
								"url": {
									"raw": "{{aqua_url_v1}}/applications",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Services",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v1}}/applications",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"applications"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "Containers",
					"item": [
						{
							"name": "List containers",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/containers?container_type=Duis&page=-96481460&pagesize=-96481460",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"containers"
									],
									"query": [
										{
											"key": "container_type",
											"value": "Duis",
											"description": "Container type"
										},
										{
											"key": "page",
											"value": "-96481460",
											"description": "Page number of the current list"
										},
										{
											"key": "pagesize",
											"value": "-96481460",
											"description": "Number of items on each page"
										}
									]
								},
								"description": "Get list of containers with associated security information"
							},
							"response": [
								{
									"name": "List all containers",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/containers?container_type=Duis&page=-96481460&pagesize=-96481460",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"containers"
											],
											"query": [
												{
													"key": "container_type",
													"value": "Duis"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "pagesize",
													"value": "-96481460"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"aqua_service\": \"labore cupidatat\",\n  \"cluster_name\": \"consequat est eu amet dolor\",\n  \"compliant\": false,\n  \"container_type\": \"aliquip cillum id sed\",\n  \"create_time\": 69665683,\n  \"critical\": 87744894,\n  \"high\": -99877739,\n  \"med\": -97100333,\n  \"low\": -40137627,\n  \"negligible\": 72697301,\n  \"id\": \"sint esse aliquip Duis\",\n  \"host_name\": \"irure\",\n  \"origin_image_name\": \"deserunt veniam ut\"\n}"
								},
								{
									"name": "Container does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/containers?container_type=Duis&page=-96481460&pagesize=-96481460",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"containers"
											],
											"query": [
												{
													"key": "container_type",
													"value": "Duis"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "pagesize",
													"value": "-96481460"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get summary of container risks",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/containers/:container_id/:host_id/risks",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"containers",
										":container_id",
										":host_id",
										"risks"
									],
									"variable": [
										{
											"key": "container_id",
											"value": "cillum exercitation",
											"description": "(Required) Container ID"
										},
										{
											"key": "host_id",
											"value": "cillum exercitation",
											"description": "(Required) Host ID of the container"
										}
									]
								},
								"description": "Get a summary of all risks related to a given container"
							},
							"response": [
								{
									"name": "List all containers summary",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/containers/:container_id/:host_id/risks",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"containers",
												":container_id",
												":host_id",
												"risks"
											],
											"variable": [
												{
													"key": "container_id",
													"value": "cillum exercitation",
													"description": "(Required) Container ID"
												},
												{
													"key": "host_id",
													"value": "cillum exercitation",
													"description": "(Required) Host ID of the container"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"labore occaecat officia\",\n  \"id\": \"in id mollit\",\n  \"host_id\": \"tempor au\",\n  \"risk_severity\": \"in non\",\n  \"image\": {\n    \"name\": \"ipsum quis\",\n    \"registered\": true,\n    \"created_at\": -29256582,\n    \"size\": -83976777,\n    \"vulnerabilities\": {\n      \"critical\": -42963279,\n      \"high\": -3537795,\n      \"medium\": -55114908,\n      \"low\": 81418290,\n      \"negligible\": 45840081,\n      \"total\": -39614164\n    }\n  },\n  \"image_risks\": [\n    {\n      \"title\": \"exercitation velit voluptate\",\n      \"severity\": \"ea ipsum enim elit\",\n      \"type\": \"non deserunt cupidatat ullamco esse\",\n      \"failed\": true,\n      \"result\": -59436358\n    },\n    {\n      \"title\": \"dolor\",\n      \"severity\": \"minim aute incididunt\",\n      \"type\": \"proident Lorem incididunt pariatur\",\n      \"failed\": true,\n      \"result\": 6698661\n    }\n  ],\n  \"runtime_risks\": [\n    {\n      \"title\": \"sunt aliqua deserunt commodo ad\",\n      \"severity\": \"pariatur dolor ut ea\",\n      \"type\": \"incididunt Ut nostrud dolore sed\",\n      \"failed\": true,\n      \"result\": 19278409\n    },\n    {\n      \"title\": \"eu magna\",\n      \"severity\": \"magna eu do proident incididunt\",\n      \"type\": \"in anim\",\n      \"failed\": false,\n      \"result\": 24381370\n    }\n  ],\n  \"kubernetes_assurance_risks\": [\n    {\n      \"policy_name\": \"ex do Duis\",\n      \"script_name\": \"ad proident commodo eiusmod dolore\",\n      \"failed\": true,\n      \"severity\": \"quis sint incididunt amet\",\n      \"remediation_suggestions\": [\n        {\n          \"title\": \"nostrud Lorem exercitati\",\n          \"description\": \"Lorem\"\n        },\n        {\n          \"title\": \"ex nulla\",\n          \"description\": \"ut et\"\n        }\n      ]\n    },\n    {\n      \"policy_name\": \"in nostrud qui\",\n      \"script_name\": \"velit commodo nostrud fugiat\",\n      \"failed\": true,\n      \"severity\": \"nostrud laboris ut eiusmod dolore\",\n      \"remediation_suggestions\": [\n        {\n          \"title\": \"cupidatat commodo consectetur\",\n          \"description\": \"culpa\"\n        },\n        {\n          \"title\": \"ad\",\n          \"description\": \"minim nostrud non\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Container does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/containers/:container_id/:host_id/risks",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"containers",
												":container_id",
												":host_id",
												"risks"
											],
											"variable": [
												{
													"key": "container_id",
													"value": "cillum exercitation",
													"description": "(Required) Container ID"
												},
												{
													"key": "host_id",
													"value": "cillum exercitation",
													"description": "(Required) Host ID of the container"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Images",
					"item": [
						{
							"name": "{registry}",
							"item": [
								{
									"name": "Image Data",
									"item": [
										{
											"name": "Get registered image metadata",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/general",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														":registry",
														":repo",
														":tag",
														"general"
													],
													"variable": [
														{
															"key": "registry",
															"value": "cillum exercitation",
															"description": "(Required) Name of registry (must be URL encoded)"
														},
														{
															"key": "repo",
															"value": "cillum exercitation",
															"description": "(Required) Name of repository"
														},
														{
															"key": "tag",
															"value": "cillum exercitation",
															"description": "(Required) Image tag"
														}
													]
												},
												"description": "Get metadata of a registered image"
											},
											"response": [
												{
													"name": "Image metadata successfully loaded",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/general",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"general"
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Name of registry (must be URL encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Name of repository"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"registry\": \"cillum officia\",\n  \"repository\": \"adipisicing dolor aliquip\",\n  \"name\": \"pariatur dolor non aliquip ut\",\n  \"created\": \"consectetur ipsum sunt adipisicing\",\n  \"author\": \"amet officia laborum deserunt\",\n  \"scan_status\": \"irure adipisicing laboris\",\n  \"tag\": \"ut voluptate\",\n  \"digest\": \"dolor elit cupidatat in\",\n  \"parent\": {\n    \"value\": \"<Circular reference to #/components/schemas/RegistryImage detected>\"\n  },\n  \"size\": 94080995,\n  \"labels\": [\n    \"commodo do Excepteur dolor\",\n    \"dolore Excepteur nostrud eiusmod\"\n  ],\n  \"os\": \"eiusmod dolor\",\n  \"os_version\": \"nisi\",\n  \"scan_date\": \"amet\",\n  \"scan_error\": \"est dolore\",\n  \"vulns_found\": -55859304,\n  \"crit_vulns\": -23753476,\n  \"high_vulns\": -19886649,\n  \"med_vulns\": -95654456,\n  \"low_vulns\": 1644295,\n  \"neg_vulns\": 37799920,\n  \"sensitive_data\": -14714872,\n  \"malware\": 7733338,\n  \"disallowed\": false,\n  \"pending_disallowed\": false,\n  \"whitelisted\": false,\n  \"blacklisted\": true,\n  \"permission_lastupdate\": \"pariatur laboris\",\n  \"permission_comment\": \"ipsum enim mollit\",\n  \"permission_author\": \"exercitation dolore\",\n  \"partial_results\": true,\n  \"newer_image_exists\": true,\n  \"metadata\": {\n    \"docker_id\": \"in aliqua nisi sit Excepteur\",\n    \"parent\": \"tempor nostrud proident Lorem do\",\n    \"repo_digests\": [\n      \"veniam cillum magna\",\n      \"ea Ut\"\n    ],\n    \"comment\": \"velit consectetur irure mollit sit\",\n    \"created\": \"Ut consequat tempor magna\",\n    \"docker_version\": \"veniam labore voluptate elit aliqua\",\n    \"author\": \"Duis amet mollit est\",\n    \"architecture\": \"Ut labore id\",\n    \"os\": \"adipisicing enim in\",\n    \"os_version\": \"qui ipsum officia ad\",\n    \"size\": 27941961,\n    \"virtual_size\": 72126841,\n    \"default_user\": \"pariatur\",\n    \"env\": [\n      \"cillum aliqua ad au\",\n      \"cupidatat reprehenderit velit\"\n    ],\n    \"docker_labels\": [\n      \"sit\",\n      \"nostrud ad dolor est ut\"\n    ]\n  },\n  \"history\": [\n    {\n      \"id\": \"consequat ut ullamco\",\n      \"size\": -23449811,\n      \"comment\": \"ad eiusmod\",\n      \"created\": \"tempor\",\n      \"created_by\": \"aliquip est \"\n    },\n    {\n      \"id\": \"ullamco cillum anim\",\n      \"size\": -31662568,\n      \"comment\": \"proident dolor nisi sed\",\n      \"created\": \"culpa aute ipsum dolor\",\n      \"created_by\": \"anim aute ea eu magna\"\n    }\n  ],\n  \"assurance_results\": {\n    \"disallowed\": false,\n    \"checks_performed\": [\n      {\n        \"policy_name\": \"dolor do eu\",\n        \"assurance_type\": \"minim in\",\n        \"failed\": true,\n        \"blocking\": true,\n        \"control\": \"fugiat Excepteur esse reprehenderit\",\n        \"base_image_found_registry\": \"elit mollit quis ipsum\",\n        \"base_image_found_name\": \"nostrud mollit Excepteur\",\n        \"blacklisted_cves_found\": [\n          \"ut non in voluptate\",\n          \"sint nisi elit deserunt\"\n        ],\n        \"blacklisted_packages_found\": [\n          \"aute sit Ut aliquip\",\n          \"Lorem ut velit eu culpa\"\n        ],\n        \"missing_packages\": [\n          \"ullamco\",\n          \"Du\"\n        ],\n        \"max_severity_allowed\": \"reprehenderit ut elit\",\n        \"max_severity_found\": \"nostrud reprehenderit mollit officia\",\n        \"max_fixable_severity_found\": \"ipsum\",\n        \"max_score_allowed\": -14134109.680330157,\n        \"max_score_found\": 21220662.74886687,\n        \"max_fixable_score_found\": 40045939.85664263,\n        \"no_fix_excluded\": true,\n        \"root_user_found\": true,\n        \"sensitive_data_found\": 56913403,\n        \"malware_found\": -91625406,\n        \"custom_checks_failed\": {\n          \"script_name\": \"ad in\",\n          \"script_type\": \"conse\",\n          \"exit_code\": \"ex dolore eu velit\",\n          \"output\": \"id sit\"\n        },\n        \"blacklisted_licenses_found\": [\n          \"esse anim amet Excepteur dolore\",\n          \"nulla consectetur eiusmod aliqua ut\"\n        ],\n        \"whitelisted_missing_licenses_found\": [\n          \"irure est anim Ut\",\n          \"cillum commodo et\"\n        ],\n        \"forbidden_labels_found\": [\n          \"adipisicing ea\",\n          \"proident fugiat incididunt dolore\"\n        ],\n        \"missing_labels_found\": [\n          \"fugiat cillum\",\n          \"velit culpa occaecat\"\n        ],\n        \"blacklist_permissions_found\": [\n          \"id est \",\n          \"anim minim\"\n        ]\n      },\n      {\n        \"policy_name\": \"irure dolore mollit adipisicing consequat\",\n        \"assurance_type\": \"tempor occaecat\",\n        \"failed\": false,\n        \"blocking\": false,\n        \"control\": \"nisi cillum\",\n        \"base_image_found_registry\": \"non sint sed\",\n        \"base_image_found_name\": \"culpa consequat dolor id\",\n        \"blacklisted_cves_found\": [\n          \"deserunt\",\n          \"aute et magna\"\n        ],\n        \"blacklisted_packages_found\": [\n          \"est Duis minim\",\n          \"exercitation Ut\"\n        ],\n        \"missing_packages\": [\n          \"occaecat id\",\n          \"pariatur\"\n        ],\n        \"max_severity_allowed\": \"do adipisicing\",\n        \"max_severity_found\": \"sit voluptate sint aute\",\n        \"max_fixable_severity_found\": \"eu culpa sed\",\n        \"max_score_allowed\": -34980687.423013054,\n        \"max_score_found\": 34236740.47775096,\n        \"max_fixable_score_found\": -37058113.52859891,\n        \"no_fix_excluded\": true,\n        \"root_user_found\": false,\n        \"sensitive_data_found\": 6769884,\n        \"malware_found\": 91741674,\n        \"custom_checks_failed\": {\n          \"script_name\": \"ipsum consectetur\",\n          \"script_type\": \"sit aliqua magna mollit Ut\",\n          \"exit_code\": \"est dolore sunt veniam elit\",\n          \"output\": \"dolor eu\"\n        },\n        \"blacklisted_licenses_found\": [\n          \"sint anim\",\n          \"reprehenderit eiusmod cillum veniam\"\n        ],\n        \"whitelisted_missing_licenses_found\": [\n          \"incididunt laboris\",\n          \"laboris deserunt in\"\n        ],\n        \"forbidden_labels_found\": [\n          \"enim qui aliqua\",\n          \"Ut sin\"\n        ],\n        \"missing_labels_found\": [\n          \"consectetur aute\",\n          \"sed pariatur occaecat reprehende\"\n        ],\n        \"blacklist_permissions_found\": [\n          \"reprehenderit ea\",\n          \"in id fugiat in aute\"\n        ]\n      }\n    ]\n  },\n  \"microenforcer_detected\": true,\n  \"build_pipeline\": \"sunt Duis aute voluptate\",\n  \"build_number\": \"ullamco eiusmod\",\n  \"build_url\": \"qui veniam\"\n}"
												},
												{
													"name": "Registry or image does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/general",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"general"
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Name of registry (must be URL encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Name of repository"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "List image vulnerabilities",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/vulnerabilities?show_negligible=true&hide_base_image=true&pagesize=-96481460&page=-96481460",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														":registry",
														":repo",
														":tag",
														"vulnerabilities"
													],
													"query": [
														{
															"key": "show_negligible",
															"value": "true",
															"description": "Show vulnerabilities of negligible severity"
														},
														{
															"key": "hide_base_image",
															"value": "true",
															"description": "Hide vulnerabilities originating in the base image"
														},
														{
															"key": "pagesize",
															"value": "-96481460",
															"description": "The maximum number of vulnerabilities to be listed"
														},
														{
															"key": "page",
															"value": "-96481460",
															"description": "List vulnerabilities from the specified page of results"
														},
														{
															"key": "severity",
															"value": "cillum exercitation",
															"description": "List only vulnerabilities of the specified severity",
															"disabled": true
														},
														{
															"key": "cpe",
															"value": "cillum exercitation",
															"description": "List only vulnerabilities in a specific resource",
															"disabled": true
														},
														{
															"key": "text_search",
															"value": "cillum exercitation",
															"description": "List only vulnerabilities whose name or resource matches the specified string",
															"disabled": true
														},
														{
															"key": "order_by",
															"value": "cillum exercitation",
															"description": "Set ordering of returned results. May be repeated to order by multiple attributes. Allowed attributes are 'vulnerability', 'publish_date', 'modification_date', 'vendor_severity', 'vendor_score', 'nvd_severity', 'nvd_score', 'resource', 'resource_type', 'registry', 'image', 'parent'. Prefix any attribute with '-' to reverse order.",
															"disabled": true
														},
														{
															"key": "path",
															"value": "cillum exercitation",
															"description": "List only vulnerabilities in a resource located in the specified path",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "registry",
															"value": "cillum exercitation",
															"description": "(Required) Registry name (must be URL-encoded)"
														},
														{
															"key": "repo",
															"value": "cillum exercitation",
															"description": "(Required) Repository name"
														},
														{
															"key": "tag",
															"value": "cillum exercitation",
															"description": "(Required) Image tag"
														}
													]
												},
												"description": "List vulnerabilities found in an image"
											},
											"response": [
												{
													"name": "Image vulnerabilities successfully listed",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/vulnerabilities?show_negligible=true&hide_base_image=true&pagesize=-96481460&page=-96481460&severity=cillum exercitation&cpe=cillum exercitation&text_search=cillum exercitation&order_by=cillum exercitation&path=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"vulnerabilities"
															],
															"query": [
																{
																	"key": "show_negligible",
																	"value": "true"
																},
																{
																	"key": "hide_base_image",
																	"value": "true"
																},
																{
																	"key": "pagesize",
																	"value": "-96481460"
																},
																{
																	"key": "page",
																	"value": "-96481460"
																},
																{
																	"key": "severity",
																	"value": "cillum exercitation"
																},
																{
																	"key": "cpe",
																	"value": "cillum exercitation"
																},
																{
																	"key": "text_search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "order_by",
																	"value": "cillum exercitation"
																},
																{
																	"key": "path",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL-encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": -84278595,\n  \"page\": -47903620,\n  \"pagesize\": 94383833,\n  \"result\": [\n    {\n      \"name\": \"occaecat\",\n      \"description\": \"mollit eu dolor Ut aliqua\",\n      \"publish_date\": \"commodo cillum\",\n      \"modification_date\": \"qui id quis in sint\",\n      \"aqua_severity\": \"esse\",\n      \"aqua_score\": -28942255.473006025,\n      \"aqua_vectors\": \"adipisicing mollit sint commodo\",\n      \"aqua_scoring_system\": \"occaecat\",\n      \"vendor_severity\": \"Excepteur amet nulla\",\n      \"vendor_cvss2_score\": 45738891.51212227,\n      \"vendor_cvss2_vectors\": \"\",\n      \"vendor_cvss3_score\": -12692552.24503167,\n      \"vendor_cvss3_vectors\": \"et culpa deserunt\",\n      \"vendor_statement\": \"deserunt cupidatat\",\n      \"vendor_url\": \"cillum ea\",\n      \"nvd_severity\": \"exercitation aliqua aute cupidatat Excepteur\",\n      \"nvd_cvss2_score\": 98575365.66373962,\n      \"nvd_cvss2_vectors\": \"culpa nulla proident\",\n      \"nvd_cvss3_score\": -49106239.17698795,\n      \"nvd_cvss3_vectors\": \"exercitation ullamc\",\n      \"nvd_url\": \"commodo irure aliqua est\",\n      \"fix_version\": \"sit qui\",\n      \"solution\": \"et pariatur in\",\n      \"classification\": \"officia nostrud\",\n      \"parent\": \"est eu id\",\n      \"qualys_ids\": [\n        \"exercitation eiusmod\",\n        \"veniam in\"\n      ],\n      \"resource\": {\n        \"type\": \"do deserunt\",\n        \"cpe\": \"ea laborum Except\",\n        \"format\": \"laboris quis\",\n        \"path\": \"in dolore in id ipsum\",\n        \"name\": \"dolor Ex\",\n        \"version\": \"reprehenderit esse tempor velit\",\n        \"arch\": \"amet in\",\n        \"licenses\": [\n          \"ullamco esse\",\n          \"dolor Excepteur incididunt\"\n        ],\n        \"hash\": \"nisi dolor tempor velit\"\n      },\n      \"registry\": \"irure laborum et esse\",\n      \"image_name\": \"qui laborum culpa Excepteur\",\n      \"image_repository_name\": \"Ut exercitation fugiat cupidatat\",\n      \"image_digest\": \"nulla enim labore ut Duis\",\n      \"referenced_vulnerabilities\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/ImageVulnerability detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/ImageVulnerability detected>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"incididunt proident cillum qui\",\n      \"description\": \"irure ut aliqua cillum qui\",\n      \"publish_date\": \"in sed te\",\n      \"modification_date\": \"mol\",\n      \"aqua_severity\": \"enim ad\",\n      \"aqua_score\": -44110134.821017735,\n      \"aqua_vectors\": \"ut sit laborum ea aliquip\",\n      \"aqua_scoring_system\": \"Duis ut\",\n      \"vendor_severity\": \"dolor ex qui velit eu\",\n      \"vendor_cvss2_score\": -53532067.857771,\n      \"vendor_cvss2_vectors\": \"proident mollit voluptate\",\n      \"vendor_cvss3_score\": -67389090.76222011,\n      \"vendor_cvss3_vectors\": \"velit incididunt sint ipsum\",\n      \"vendor_statement\": \"ex dolor minim Lorem qui\",\n      \"vendor_url\": \"irure sed est proident\",\n      \"nvd_severity\": \"adipisicing commodo\",\n      \"nvd_cvss2_score\": 49977851.64556867,\n      \"nvd_cvss2_vectors\": \"nostrud id in\",\n      \"nvd_cvss3_score\": -43943560.984431505,\n      \"nvd_cvss3_vectors\": \"Excepteur sed est commodo\",\n      \"nvd_url\": \"aliqua velit\",\n      \"fix_version\": \"irure a\",\n      \"solution\": \"sint do consequat velit\",\n      \"classification\": \"incididunt est\",\n      \"parent\": \"id et\",\n      \"qualys_ids\": [\n        \"velit qui eiusmod ex\",\n        \"culpa\"\n      ],\n      \"resource\": {\n        \"type\": \"mollit officia incididunt cillum\",\n        \"cpe\": \"ipsum pariatur minim magna reprehenderit\",\n        \"format\": \"labori\",\n        \"path\": \"labore sed anim pariatur laborum\",\n        \"name\": \"aliqua non\",\n        \"version\": \"aliqua ipsum qui\",\n        \"arch\": \"ea nisi quis mollit\",\n        \"licenses\": [\n          \"laborum ad\",\n          \"sit sint\"\n        ],\n        \"hash\": \"Exc\"\n      },\n      \"registry\": \"e\",\n      \"image_name\": \"non ullamco amet\",\n      \"image_repository_name\": \"occaecat anim\",\n      \"image_digest\": \"non Lorem culpa\",\n      \"referenced_vulnerabilities\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/ImageVulnerability detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/ImageVulnerability detected>\"\n        }\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Invalid or missing input",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/vulnerabilities?show_negligible=true&hide_base_image=true&pagesize=-96481460&page=-96481460&severity=cillum exercitation&cpe=cillum exercitation&text_search=cillum exercitation&order_by=cillum exercitation&path=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"vulnerabilities"
															],
															"query": [
																{
																	"key": "show_negligible",
																	"value": "true"
																},
																{
																	"key": "hide_base_image",
																	"value": "true"
																},
																{
																	"key": "pagesize",
																	"value": "-96481460"
																},
																{
																	"key": "page",
																	"value": "-96481460"
																},
																{
																	"key": "severity",
																	"value": "cillum exercitation"
																},
																{
																	"key": "cpe",
																	"value": "cillum exercitation"
																},
																{
																	"key": "text_search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "order_by",
																	"value": "cillum exercitation"
																},
																{
																	"key": "path",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL-encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Registry or image does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/vulnerabilities?show_negligible=true&hide_base_image=true&pagesize=-96481460&page=-96481460&severity=cillum exercitation&cpe=cillum exercitation&text_search=cillum exercitation&order_by=cillum exercitation&path=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"vulnerabilities"
															],
															"query": [
																{
																	"key": "show_negligible",
																	"value": "true"
																},
																{
																	"key": "hide_base_image",
																	"value": "true"
																},
																{
																	"key": "pagesize",
																	"value": "-96481460"
																},
																{
																	"key": "page",
																	"value": "-96481460"
																},
																{
																	"key": "severity",
																	"value": "cillum exercitation"
																},
																{
																	"key": "cpe",
																	"value": "cillum exercitation"
																},
																{
																	"key": "text_search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "order_by",
																	"value": "cillum exercitation"
																},
																{
																	"key": "path",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL-encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "List image sensitive data",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/sensitive",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														":registry",
														":repo",
														":tag",
														"sensitive"
													],
													"variable": [
														{
															"key": "registry",
															"value": "cillum exercitation",
															"description": "(Required) Registry name (must be URL encoded)"
														},
														{
															"key": "repo",
															"value": "cillum exercitation",
															"description": "(Required) Repository name"
														},
														{
															"key": "tag",
															"value": "cillum exercitation",
															"description": "(Required) Image tag"
														}
													]
												},
												"description": "List all sensitive data detected in an image"
											},
											"response": [
												{
													"name": "Image sensitive data successfully listed",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/sensitive",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"sensitive"
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": 66464560,\n  \"page\": 7919030,\n  \"pagesize\": -65505465,\n  \"result\": [\n    {\n      \"type\": \"Ut officia\",\n      \"path\": \"enim do commodo\",\n      \"hash\": \"qui velit\",\n      \"filename\": \"consectetur Lorem fugiat enim\",\n      \"acknowledged\": false,\n      \"acknowledge_date\": \"ea voluptate\",\n      \"acknowledge_scope\": \"est commodo\",\n      \"acknowledge_expiration_days\": -38029945,\n      \"acknowledge_expiration_configured_at\": \"officia pariatur ea esse ullamco\",\n      \"acknowledge_expiration_configured_by\": \"ullamco in\"\n    },\n    {\n      \"type\": \"irure enim commodo ea\",\n      \"path\": \"enim occaecat eu esse\",\n      \"hash\": \"dolor occaecat cillum dolore tempor\",\n      \"filename\": \"officia cupidatat \",\n      \"acknowledged\": false,\n      \"acknowledge_date\": \"ad dolore ipsum\",\n      \"acknowledge_scope\": \"nostrud est anim labore\",\n      \"acknowledge_expiration_days\": -59676922,\n      \"acknowledge_expiration_configured_at\": \"laboris\",\n      \"acknowledge_expiration_configured_by\": \"eu\"\n    }\n  ]\n}"
												},
												{
													"name": "Invalid or missing input",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/sensitive",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"sensitive"
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Registry or image does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/sensitive",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"sensitive"
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "List image malware data",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/malware",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														":registry",
														":repo",
														":tag",
														"malware"
													],
													"variable": [
														{
															"key": "registry",
															"value": "cillum exercitation",
															"description": "(Required) Registry name (must be URL-encoded)"
														},
														{
															"key": "repo",
															"value": "cillum exercitation",
															"description": "(Required) Repository name"
														},
														{
															"key": "tag",
															"value": "cillum exercitation",
															"description": "(Required) Image tag"
														}
													]
												},
												"description": "List all malware detected in an image"
											},
											"response": [
												{
													"name": "Image malware data successfully listed",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/malware",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"malware"
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL-encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": 55778310,\n  \"page\": -14529302,\n  \"pagesize\": -13161528,\n  \"result\": [\n    {\n      \"malware\": \"cupidatat elit dolore velit sed\",\n      \"hash\": \"culpa aute\",\n      \"path\": \"veniam nisi quis\",\n      \"paths\": [\n        \"dolor do labo\",\n        \"\"\n      ],\n      \"acknowledged\": true,\n      \"acknowledge_date\": \"eu adipisicing mollit\",\n      \"acknowledge_scope\": \"ad sit\",\n      \"acknowledge_expiration_days\": -14981272,\n      \"acknowledge_expiration_configured_at\": \"ani\",\n      \"acknowledge_expiration_configured_by\": \"adipisicing aliqua\"\n    },\n    {\n      \"malware\": \"ex Lorem et nisi in\",\n      \"hash\": \"anim\",\n      \"path\": \"in Lorem ut consectetur\",\n      \"paths\": [\n        \"dolor pariatur fugiat\",\n        \"consequat in\"\n      ],\n      \"acknowledged\": false,\n      \"acknowledge_date\": \"proident fugiat\",\n      \"acknowledge_scope\": \"non\",\n      \"acknowledge_expiration_days\": 58084121,\n      \"acknowledge_expiration_configured_at\": \"esse ad consequat\",\n      \"acknowledge_expiration_configured_by\": \"Duis occaecat\"\n    }\n  ]\n}"
												},
												{
													"name": "Invalid or missing input",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/malware",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"malware"
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL-encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Registry or image does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/malware",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"malware"
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL-encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "List image layers",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/history_layers?show_negligible=true&hide_base_image=true&hide_nonvulnerable=true&skip_count=true&pagesize=-96481460&page=-96481460",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														":registry",
														":repo",
														":tag",
														"history_layers"
													],
													"query": [
														{
															"key": "show_negligible",
															"value": "true",
															"description": "Show layers with vulnerabilities of negligible severity"
														},
														{
															"key": "hide_base_image",
															"value": "true",
															"description": "Hide layers originating in the base image"
														},
														{
															"key": "hide_nonvulnerable",
															"value": "true",
															"description": "Hide layers without vulnerabilities"
														},
														{
															"key": "skip_count",
															"value": "true",
															"description": "Do not calculate the number of layers"
														},
														{
															"key": "pagesize",
															"value": "-96481460",
															"description": "The maximum number of layers to be listed"
														},
														{
															"key": "page",
															"value": "-96481460",
															"description": "List layers from the specified page of results"
														},
														{
															"key": "severity",
															"value": "cillum exercitation",
															"description": "List only layers with vulnerabilities of the specified severity",
															"disabled": true
														},
														{
															"key": "text_search",
															"value": "cillum exercitation",
															"description": "List only layers whose creation command matches the specified string",
															"disabled": true
														},
														{
															"key": "order_by",
															"value": "cillum exercitation",
															"description": "Set ordering of returned results. May be repeated to order by multiple attributes. Allowed attributes are 'created', 'position' and 'size'. Prefix any attribute with '-' to reverse order.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "registry",
															"value": "cillum exercitation",
															"description": "(Required) Registry name (must be URL-encoded)"
														},
														{
															"key": "repo",
															"value": "cillum exercitation",
															"description": "(Required) Repository name"
														},
														{
															"key": "tag",
															"value": "cillum exercitation",
															"description": "(Required) Image tag"
														}
													]
												},
												"description": "List layers of an image"
											},
											"response": [
												{
													"name": "Image layers successfully listed",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/history_layers?show_negligible=true&hide_base_image=true&hide_nonvulnerable=true&skip_count=true&pagesize=-96481460&page=-96481460&severity=cillum exercitation&text_search=cillum exercitation&order_by=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"history_layers"
															],
															"query": [
																{
																	"key": "show_negligible",
																	"value": "true"
																},
																{
																	"key": "hide_base_image",
																	"value": "true"
																},
																{
																	"key": "hide_nonvulnerable",
																	"value": "true"
																},
																{
																	"key": "skip_count",
																	"value": "true"
																},
																{
																	"key": "pagesize",
																	"value": "-96481460"
																},
																{
																	"key": "page",
																	"value": "-96481460"
																},
																{
																	"key": "severity",
																	"value": "cillum exercitation"
																},
																{
																	"key": "text_search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "order_by",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL-encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": -25452228,\n  \"page\": -83234015,\n  \"pagesize\": -25187354,\n  \"result\": [\n    {\n      \"id\": \"sint tempor sed\",\n      \"size\": -69284711,\n      \"comment\": \"esse\",\n      \"created\": \"aliqua ea labore Ut\",\n      \"created_by\": \"reprehenderit cillum Ut\",\n      \"position\": 27383205,\n      \"vulns_found\": -61893526,\n      \"crit_vulns\": -84420259,\n      \"high_vulns\": -80183311,\n      \"med_vulns\": -30553606,\n      \"low_vulns\": 66789957,\n      \"neg_vulns\": -25370824,\n      \"sensitive_data\": 9996420,\n      \"is_base_layer\": true\n    },\n    {\n      \"id\": \"cupidatat nulla magna\",\n      \"size\": -56970599,\n      \"comment\": \"laboris ex co\",\n      \"created\": \"consectetur adipisicing\",\n      \"created_by\": \"ut\",\n      \"position\": -83141577,\n      \"vulns_found\": -12439967,\n      \"crit_vulns\": 93114972,\n      \"high_vulns\": 2794808,\n      \"med_vulns\": -86837713,\n      \"low_vulns\": -84875700,\n      \"neg_vulns\": -51840061,\n      \"sensitive_data\": -44088670,\n      \"is_base_layer\": true\n    }\n  ]\n}"
												},
												{
													"name": "Image layers view is not supported",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/history_layers?show_negligible=true&hide_base_image=true&hide_nonvulnerable=true&skip_count=true&pagesize=-96481460&page=-96481460&severity=cillum exercitation&text_search=cillum exercitation&order_by=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"history_layers"
															],
															"query": [
																{
																	"key": "show_negligible",
																	"value": "true"
																},
																{
																	"key": "hide_base_image",
																	"value": "true"
																},
																{
																	"key": "hide_nonvulnerable",
																	"value": "true"
																},
																{
																	"key": "skip_count",
																	"value": "true"
																},
																{
																	"key": "pagesize",
																	"value": "-96481460"
																},
																{
																	"key": "page",
																	"value": "-96481460"
																},
																{
																	"key": "severity",
																	"value": "cillum exercitation"
																},
																{
																	"key": "text_search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "order_by",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL-encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid or missing input",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/history_layers?show_negligible=true&hide_base_image=true&hide_nonvulnerable=true&skip_count=true&pagesize=-96481460&page=-96481460&severity=cillum exercitation&text_search=cillum exercitation&order_by=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"history_layers"
															],
															"query": [
																{
																	"key": "show_negligible",
																	"value": "true"
																},
																{
																	"key": "hide_base_image",
																	"value": "true"
																},
																{
																	"key": "hide_nonvulnerable",
																	"value": "true"
																},
																{
																	"key": "skip_count",
																	"value": "true"
																},
																{
																	"key": "pagesize",
																	"value": "-96481460"
																},
																{
																	"key": "page",
																	"value": "-96481460"
																},
																{
																	"key": "severity",
																	"value": "cillum exercitation"
																},
																{
																	"key": "text_search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "order_by",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL-encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Registry or image does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/images/:registry/:repo/:tag/history_layers?show_negligible=true&hide_base_image=true&hide_nonvulnerable=true&skip_count=true&pagesize=-96481460&page=-96481460&severity=cillum exercitation&text_search=cillum exercitation&order_by=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"images",
																":registry",
																":repo",
																":tag",
																"history_layers"
															],
															"query": [
																{
																	"key": "show_negligible",
																	"value": "true"
																},
																{
																	"key": "hide_base_image",
																	"value": "true"
																},
																{
																	"key": "hide_nonvulnerable",
																	"value": "true"
																},
																{
																	"key": "skip_count",
																	"value": "true"
																},
																{
																	"key": "pagesize",
																	"value": "-96481460"
																},
																{
																	"key": "page",
																	"value": "-96481460"
																},
																{
																	"key": "severity",
																	"value": "cillum exercitation"
																},
																{
																	"key": "text_search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "order_by",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "registry",
																	"value": "cillum exercitation",
																	"description": "(Required) Registry name (must be URL-encoded)"
																},
																{
																	"key": "repo",
																	"value": "cillum exercitation",
																	"description": "(Required) Repository name"
																},
																{
																	"key": "tag",
																	"value": "cillum exercitation",
																	"description": "(Required) Image tag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										}
									]
								},
								{
									"name": "List images with digest ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/images/details/:digest",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images",
												"details",
												":digest"
											],
											"variable": [
												{
													"key": "digest",
													"value": "cillum exercitation",
													"description": "(Required) Image digest used for retrieving a list of image identifiers"
												}
											]
										},
										"description": "List all image identifiers with the specified digest ID"
									},
									"response": [
										{
											"name": "Image(s) successfully listed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/images/details/:digest",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"details",
														":digest"
													],
													"variable": [
														{
															"key": "digest",
															"value": "cillum exercitation",
															"description": "(Required) Image digest used for retrieving a list of image identifiers"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"laboris deserunt cillum\",\n  \"digest\": \"id nulla\",\n  \"registry\": \"adipisicing magna\",\n  \"repository\": \"eu in\"\n}"
										},
										{
											"name": "Invalid or missing input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/images/details/:digest",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"details",
														":digest"
													],
													"variable": [
														{
															"key": "digest",
															"value": "cillum exercitation",
															"description": "(Required) Image digest used for retrieving a list of image identifiers"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Rescan images with specified digest ID",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/images/details/:digest/rescan",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images",
												"details",
												":digest",
												"rescan"
											],
											"variable": [
												{
													"key": "digest",
													"value": "cillum exercitation",
													"description": "(Required) Rescan images with specified digest ID"
												}
											]
										},
										"description": "Rescan all images with the specified digest ID"
									},
									"response": [
										{
											"name": "Image(s) successfully added to scan queue",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/images/details/:digest/rescan",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"details",
														":digest",
														"rescan"
													],
													"variable": [
														{
															"key": "digest",
															"value": "cillum exercitation",
															"description": "(Required) Rescan images with specified digest ID"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add images which are filtered to the scan queue",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filter\": {\n    \"registry\": \"Excepteur sit nulla veniam\",\n    \"repository_name\": \"sed anim cillum voluptate i\",\n    \"repository_strict\": false,\n    \"image_name\": \"non quis null\",\n    \"vulnerabilities\": false,\n    \"running_containers\": false,\n    \"disallowed_images\": false,\n    \"trusted_base_images\": true,\n    \"whitelisted_images\": true,\n    \"failed_scans\": false,\n    \"time\": \"sunt anim\",\n    \"orderby\": \"cillum dolore\",\n    \"scope\": \"Ut\"\n  },\n  \"excluded_images\": [\n    {\n      \"registry\": \"sit Excepteur incididunt in qui\",\n      \"repository_id\": 9832389,\n      \"name\": \"qui\",\n      \"digest\": \"commodo anim sit laboris sint\",\n      \"is_local\": \"aliqua anim sit fugiat\",\n      \"aquasource_scanned\": \"esse qui ullamco\"\n    },\n    {\n      \"registry\": \"dolore dolor\",\n      \"repository_id\": -96646869,\n      \"name\": \"nulla magna\",\n      \"digest\": \"sed\",\n      \"is_local\": \"irure consectetur\",\n      \"aquasource_scanned\": \"in sunt consequat velit\"\n    }\n  ],\n  \"full_rescan\": true,\n  \"select_all_pages\": false,\n  \"total_num_pages\": 69842351\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/images/rescan/all",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images",
												"rescan",
												"all"
											]
										},
										"description": "images have been enqueued for scanning"
									},
									"response": [
										{
											"name": "The request to delete images has been accepted",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filter\": {\n    \"registry\": \"fugiat dolor exercitation qui sint\",\n    \"repository_name\": \"deserunt mollit\",\n    \"repository_strict\": true,\n    \"image_name\": \"Ut Lorem in nisi\",\n    \"vulnerabilities\": false,\n    \"running_containers\": false,\n    \"disallowed_images\": true,\n    \"trusted_base_images\": true,\n    \"whitelisted_images\": false,\n    \"failed_scans\": false,\n    \"time\": \"Ut dolor\",\n    \"orderby\": \"Duis ad labore aliqua enim\",\n    \"scope\": \"consequat velit consectetur\"\n  },\n  \"excluded_images\": [\n    {\n      \"registry\": \"nostrud quis\",\n      \"repository_id\": -16910074,\n      \"name\": \"incididunt \",\n      \"digest\": \"ex nisi\",\n      \"is_local\": \"Lorem ullamco in ut\",\n      \"aquasource_scanned\": \"fugiat tempo\"\n    },\n    {\n      \"registry\": \"dolor laboris deserunt aute\",\n      \"repository_id\": -52328014,\n      \"name\": \"incididunt labore sunt\",\n      \"digest\": \"exerci\",\n      \"is_local\": \"reprehenderit\",\n      \"aquasource_scanned\": \"consectetur do laboris proident\"\n    }\n  ],\n  \"full_rescan\": false,\n  \"select_all_pages\": false,\n  \"total_num_pages\": -66695198\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/rescan/all",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"rescan",
														"all"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filter\": {\n    \"registry\": \"fugiat dolor exercitation qui sint\",\n    \"repository_name\": \"deserunt mollit\",\n    \"repository_strict\": true,\n    \"image_name\": \"Ut Lorem in nisi\",\n    \"vulnerabilities\": false,\n    \"running_containers\": false,\n    \"disallowed_images\": true,\n    \"trusted_base_images\": true,\n    \"whitelisted_images\": false,\n    \"failed_scans\": false,\n    \"time\": \"Ut dolor\",\n    \"orderby\": \"Duis ad labore aliqua enim\",\n    \"scope\": \"consequat velit consectetur\"\n  },\n  \"excluded_images\": [\n    {\n      \"registry\": \"nostrud quis\",\n      \"repository_id\": -16910074,\n      \"name\": \"incididunt \",\n      \"digest\": \"ex nisi\",\n      \"is_local\": \"Lorem ullamco in ut\",\n      \"aquasource_scanned\": \"fugiat tempo\"\n    },\n    {\n      \"registry\": \"dolor laboris deserunt aute\",\n      \"repository_id\": -52328014,\n      \"name\": \"incididunt labore sunt\",\n      \"digest\": \"exerci\",\n      \"is_local\": \"reprehenderit\",\n      \"aquasource_scanned\": \"consectetur do laboris proident\"\n    }\n  ],\n  \"full_rescan\": false,\n  \"select_all_pages\": false,\n  \"total_num_pages\": -66695198\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/rescan/all",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"rescan",
														"all"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Rescan or Full Rescan is already in progress",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filter\": {\n    \"registry\": \"fugiat dolor exercitation qui sint\",\n    \"repository_name\": \"deserunt mollit\",\n    \"repository_strict\": true,\n    \"image_name\": \"Ut Lorem in nisi\",\n    \"vulnerabilities\": false,\n    \"running_containers\": false,\n    \"disallowed_images\": true,\n    \"trusted_base_images\": true,\n    \"whitelisted_images\": false,\n    \"failed_scans\": false,\n    \"time\": \"Ut dolor\",\n    \"orderby\": \"Duis ad labore aliqua enim\",\n    \"scope\": \"consequat velit consectetur\"\n  },\n  \"excluded_images\": [\n    {\n      \"registry\": \"nostrud quis\",\n      \"repository_id\": -16910074,\n      \"name\": \"incididunt \",\n      \"digest\": \"ex nisi\",\n      \"is_local\": \"Lorem ullamco in ut\",\n      \"aquasource_scanned\": \"fugiat tempo\"\n    },\n    {\n      \"registry\": \"dolor laboris deserunt aute\",\n      \"repository_id\": -52328014,\n      \"name\": \"incididunt labore sunt\",\n      \"digest\": \"exerci\",\n      \"is_local\": \"reprehenderit\",\n      \"aquasource_scanned\": \"consectetur do laboris proident\"\n    }\n  ],\n  \"full_rescan\": false,\n  \"select_all_pages\": false,\n  \"total_num_pages\": -66695198\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/rescan/all",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"rescan",
														"all"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Failed to enqueue images for rescanning",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filter\": {\n    \"registry\": \"fugiat dolor exercitation qui sint\",\n    \"repository_name\": \"deserunt mollit\",\n    \"repository_strict\": true,\n    \"image_name\": \"Ut Lorem in nisi\",\n    \"vulnerabilities\": false,\n    \"running_containers\": false,\n    \"disallowed_images\": true,\n    \"trusted_base_images\": true,\n    \"whitelisted_images\": false,\n    \"failed_scans\": false,\n    \"time\": \"Ut dolor\",\n    \"orderby\": \"Duis ad labore aliqua enim\",\n    \"scope\": \"consequat velit consectetur\"\n  },\n  \"excluded_images\": [\n    {\n      \"registry\": \"nostrud quis\",\n      \"repository_id\": -16910074,\n      \"name\": \"incididunt \",\n      \"digest\": \"ex nisi\",\n      \"is_local\": \"Lorem ullamco in ut\",\n      \"aquasource_scanned\": \"fugiat tempo\"\n    },\n    {\n      \"registry\": \"dolor laboris deserunt aute\",\n      \"repository_id\": -52328014,\n      \"name\": \"incididunt labore sunt\",\n      \"digest\": \"exerci\",\n      \"is_local\": \"reprehenderit\",\n      \"aquasource_scanned\": \"consectetur do laboris proident\"\n    }\n  ],\n  \"full_rescan\": false,\n  \"select_all_pages\": false,\n  \"total_num_pages\": -66695198\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/rescan/all",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"rescan",
														"all"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Delete an image",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/images/:registry/:image",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images",
												":registry",
												":image"
											],
											"variable": [
												{
													"key": "registry",
													"value": "cillum exercitation",
													"description": "(Required) registry name"
												},
												{
													"key": "image",
													"value": "cillum exercitation",
													"description": "(Required) image name"
												}
											]
										},
										"description": "Delete a specific image, according to the image name"
									},
									"response": [
										{
											"name": "The image has been deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/images/:registry/:image",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														":registry",
														":image"
													],
													"variable": [
														{
															"key": "registry",
															"value": "cillum exercitation",
															"description": "(Required) registry name"
														},
														{
															"key": "image",
															"value": "cillum exercitation",
															"description": "(Required) image name"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/images/:registry/:image",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														":registry",
														":image"
													],
													"variable": [
														{
															"key": "registry",
															"value": "cillum exercitation",
															"description": "(Required) registry name"
														},
														{
															"key": "image",
															"value": "cillum exercitation",
															"description": "(Required) image name"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "delete",
							"item": [
								{
									"name": "Clean up ad-hoc scans",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"max_repo_size\": 66750312,\n  \"order_by\": \"tempor non\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/images/cleanup",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images",
												"cleanup"
											]
										},
										"description": "Clean up ad-hoc scans"
									},
									"response": [
										{
											"name": "Cleanup was successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"max_repo_size\": 66750312,\n  \"order_by\": \"tempor non\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/cleanup",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"cleanup"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input or Invalid max repo size",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"max_repo_size\": 66750312,\n  \"order_by\": \"tempor non\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/cleanup",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"cleanup"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Too many requests of ad-hoc cleanup. Currently running ad-hoc cleanup.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"max_repo_size\": 66750312,\n  \"order_by\": \"tempor non\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/cleanup",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"cleanup"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"max_repo_size\": 66750312,\n  \"order_by\": \"tempor non\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/cleanup",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"cleanup"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Delete images in bulk",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"select_all\": false,\n  \"select_all_repo\": false,\n  \"is_cf_application\": true,\n  \"include_repos\": [\n    {\n      \"name\": \"ea labore ut\",\n      \"registry\": \"dolore voluptate est\"\n    },\n    {\n      \"name\": \"ut proident Ut incididunt\",\n      \"registry\": \"dolor in Lorem in\"\n    }\n  ],\n  \"include_images\": [\n    {\n      \"registry\": \"incididunt velit\",\n      \"repository_id\": 15393792,\n      \"name\": \"mollit nisi eu\",\n      \"digest\": \"irure Excepteur amet\",\n      \"is_local\": \"occaecat\",\n      \"aquasource_scanned\": \"enim reprehenderit pariatur\"\n    },\n    {\n      \"registry\": \"amet tempor est eu\",\n      \"repository_id\": 71008106,\n      \"name\": \"nostrud ex Lorem\",\n      \"digest\": \"Lorem amet dolor\",\n      \"is_local\": \"officia proident sint occaecat\",\n      \"aquasource_scanned\": \"nulla\"\n    }\n  ],\n  \"exclude_images\": [\n    {\n      \"registry\": \"consectetur sit cupidatat lab\",\n      \"repository_id\": 871736,\n      \"name\": \"fugiat\",\n      \"digest\": \"aliquip dolor\",\n      \"is_local\": \"Lorem minim sunt\",\n      \"aquasource_scanned\": \"est elit qui\"\n    },\n    {\n      \"registry\": \"eu fugiat\",\n      \"repository_id\": 72381171,\n      \"name\": \"voluptate cupidatat\",\n      \"digest\": \"magna Ut irure\",\n      \"is_local\": \"sed elit iru\",\n      \"aquasource_scanned\": \"aute anim officia veniam\"\n    }\n  ],\n  \"full_rescan\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/images/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images",
												"delete"
											]
										},
										"description": "Delete images in bulk"
									},
									"response": [
										{
											"name": "Images have been deleted in bulk",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"select_all\": false,\n  \"select_all_repo\": false,\n  \"is_cf_application\": true,\n  \"include_repos\": [\n    {\n      \"name\": \"ea labore ut\",\n      \"registry\": \"dolore voluptate est\"\n    },\n    {\n      \"name\": \"ut proident Ut incididunt\",\n      \"registry\": \"dolor in Lorem in\"\n    }\n  ],\n  \"include_images\": [\n    {\n      \"registry\": \"incididunt velit\",\n      \"repository_id\": 15393792,\n      \"name\": \"mollit nisi eu\",\n      \"digest\": \"irure Excepteur amet\",\n      \"is_local\": \"occaecat\",\n      \"aquasource_scanned\": \"enim reprehenderit pariatur\"\n    },\n    {\n      \"registry\": \"amet tempor est eu\",\n      \"repository_id\": 71008106,\n      \"name\": \"nostrud ex Lorem\",\n      \"digest\": \"Lorem amet dolor\",\n      \"is_local\": \"officia proident sint occaecat\",\n      \"aquasource_scanned\": \"nulla\"\n    }\n  ],\n  \"exclude_images\": [\n    {\n      \"registry\": \"consectetur sit cupidatat lab\",\n      \"repository_id\": 871736,\n      \"name\": \"fugiat\",\n      \"digest\": \"aliquip dolor\",\n      \"is_local\": \"Lorem minim sunt\",\n      \"aquasource_scanned\": \"est elit qui\"\n    },\n    {\n      \"registry\": \"eu fugiat\",\n      \"repository_id\": 72381171,\n      \"name\": \"voluptate cupidatat\",\n      \"digest\": \"magna Ut irure\",\n      \"is_local\": \"sed elit iru\",\n      \"aquasource_scanned\": \"aute anim officia veniam\"\n    }\n  ],\n  \"full_rescan\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/delete",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"delete"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"select_all\": false,\n  \"select_all_repo\": false,\n  \"is_cf_application\": true,\n  \"include_repos\": [\n    {\n      \"name\": \"ea labore ut\",\n      \"registry\": \"dolore voluptate est\"\n    },\n    {\n      \"name\": \"ut proident Ut incididunt\",\n      \"registry\": \"dolor in Lorem in\"\n    }\n  ],\n  \"include_images\": [\n    {\n      \"registry\": \"incididunt velit\",\n      \"repository_id\": 15393792,\n      \"name\": \"mollit nisi eu\",\n      \"digest\": \"irure Excepteur amet\",\n      \"is_local\": \"occaecat\",\n      \"aquasource_scanned\": \"enim reprehenderit pariatur\"\n    },\n    {\n      \"registry\": \"amet tempor est eu\",\n      \"repository_id\": 71008106,\n      \"name\": \"nostrud ex Lorem\",\n      \"digest\": \"Lorem amet dolor\",\n      \"is_local\": \"officia proident sint occaecat\",\n      \"aquasource_scanned\": \"nulla\"\n    }\n  ],\n  \"exclude_images\": [\n    {\n      \"registry\": \"consectetur sit cupidatat lab\",\n      \"repository_id\": 871736,\n      \"name\": \"fugiat\",\n      \"digest\": \"aliquip dolor\",\n      \"is_local\": \"Lorem minim sunt\",\n      \"aquasource_scanned\": \"est elit qui\"\n    },\n    {\n      \"registry\": \"eu fugiat\",\n      \"repository_id\": 72381171,\n      \"name\": \"voluptate cupidatat\",\n      \"digest\": \"magna Ut irure\",\n      \"is_local\": \"sed elit iru\",\n      \"aquasource_scanned\": \"aute anim officia veniam\"\n    }\n  ],\n  \"full_rescan\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/delete",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"delete"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Delete images which are filtered",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"filter\": {\n    \"registry\": \"tempor velit\",\n    \"repository_name\": \"in fugiat\",\n    \"repository_strict\": false,\n    \"image_name\": \"commodo qui\",\n    \"vulnerabilities\": true,\n    \"running_containers\": true,\n    \"disallowed_images\": false,\n    \"trusted_base_images\": true,\n    \"whitelisted_images\": true,\n    \"failed_scans\": true,\n    \"time\": \"velit ea in quis tempor\",\n    \"orderby\": \"ipsum eu id\",\n    \"scope\": \"velit\"\n  },\n  \"excluded_images\": [\n    {\n      \"registry\": \"sint\",\n      \"repository_id\": -38808431,\n      \"name\": \"ea\",\n      \"digest\": \"ullamco esse aliquip\",\n      \"is_local\": \"ut qui nisi deserunt\",\n      \"aquasource_scanned\": \"do cillum eu Duis enim\"\n    },\n    {\n      \"registry\": \"voluptate pariatu\",\n      \"repository_id\": 72164221,\n      \"name\": \"sit consectetur voluptate id nulla\",\n      \"digest\": \"sit ut labo\",\n      \"is_local\": \"Duis amet elit\",\n      \"aquasource_scanned\": \"cillum ad esse eu\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/images/delete/all",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images",
												"delete",
												"all"
											]
										},
										"description": "Delete filtered images"
									},
									"response": [
										{
											"name": "The request to delete images has been accepted",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filter\": {\n    \"registry\": \"elit aliquip Duis nostrud\",\n    \"repository_name\": \"culpa deserunt magna\",\n    \"repository_strict\": false,\n    \"image_name\": \"sunt cillum in ut\",\n    \"vulnerabilities\": true,\n    \"running_containers\": false,\n    \"disallowed_images\": false,\n    \"trusted_base_images\": true,\n    \"whitelisted_images\": true,\n    \"failed_scans\": true,\n    \"time\": \"exercitation non\",\n    \"orderby\": \"Duis do eu\",\n    \"scope\": \"reprehenderit eu aliquip fugiat cupidatat\"\n  },\n  \"excluded_images\": [\n    {\n      \"registry\": \"consectetur in ea p\",\n      \"repository_id\": 34192634,\n      \"name\": \"ad dolore aliquip in enim\",\n      \"digest\": \"culpa cillu\",\n      \"is_local\": \"aute\",\n      \"aquasource_scanned\": \"ad\"\n    },\n    {\n      \"registry\": \"in est Excepteur\",\n      \"repository_id\": 13783010,\n      \"name\": \"eu\",\n      \"digest\": \"laboris non officia deserunt\",\n      \"is_local\": \"Excepteur proident\",\n      \"aquasource_scanned\": \"laboris Excepteur exercitation\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/delete/all",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"delete",
														"all"
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filter\": {\n    \"registry\": \"elit aliquip Duis nostrud\",\n    \"repository_name\": \"culpa deserunt magna\",\n    \"repository_strict\": false,\n    \"image_name\": \"sunt cillum in ut\",\n    \"vulnerabilities\": true,\n    \"running_containers\": false,\n    \"disallowed_images\": false,\n    \"trusted_base_images\": true,\n    \"whitelisted_images\": true,\n    \"failed_scans\": true,\n    \"time\": \"exercitation non\",\n    \"orderby\": \"Duis do eu\",\n    \"scope\": \"reprehenderit eu aliquip fugiat cupidatat\"\n  },\n  \"excluded_images\": [\n    {\n      \"registry\": \"consectetur in ea p\",\n      \"repository_id\": 34192634,\n      \"name\": \"ad dolore aliquip in enim\",\n      \"digest\": \"culpa cillu\",\n      \"is_local\": \"aute\",\n      \"aquasource_scanned\": \"ad\"\n    },\n    {\n      \"registry\": \"in est Excepteur\",\n      \"repository_id\": 13783010,\n      \"name\": \"eu\",\n      \"digest\": \"laboris non officia deserunt\",\n      \"is_local\": \"Excepteur proident\",\n      \"aquasource_scanned\": \"laboris Excepteur exercitation\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/delete/all",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"delete",
														"all"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"filter\": {\n    \"registry\": \"elit aliquip Duis nostrud\",\n    \"repository_name\": \"culpa deserunt magna\",\n    \"repository_strict\": false,\n    \"image_name\": \"sunt cillum in ut\",\n    \"vulnerabilities\": true,\n    \"running_containers\": false,\n    \"disallowed_images\": false,\n    \"trusted_base_images\": true,\n    \"whitelisted_images\": true,\n    \"failed_scans\": true,\n    \"time\": \"exercitation non\",\n    \"orderby\": \"Duis do eu\",\n    \"scope\": \"reprehenderit eu aliquip fugiat cupidatat\"\n  },\n  \"excluded_images\": [\n    {\n      \"registry\": \"consectetur in ea p\",\n      \"repository_id\": 34192634,\n      \"name\": \"ad dolore aliquip in enim\",\n      \"digest\": \"culpa cillu\",\n      \"is_local\": \"aute\",\n      \"aquasource_scanned\": \"ad\"\n    },\n    {\n      \"registry\": \"in est Excepteur\",\n      \"repository_id\": 13783010,\n      \"name\": \"eu\",\n      \"digest\": \"laboris non officia deserunt\",\n      \"is_local\": \"Excepteur proident\",\n      \"aquasource_scanned\": \"laboris Excepteur exercitation\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/images/delete/all",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"images",
														"delete",
														"all"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "List images",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/images?page_size=100&page=1&enable_keyset_pagination=true&updated_in=-96481460",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"images"
									],
									"query": [
										{
											"key": "registry",
											"value": "cillum exercitation",
											"description": "List only images from a specific registry",
											"disabled": true
										},
										{
											"key": "repository",
											"value": "cillum exercitation",
											"description": "List only images from a specific repository",
											"disabled": true
										},
										{
											"key": "name",
											"value": "cillum exercitation",
											"description": "List only images whose name contains the specified text",
											"disabled": true
										},
										{
											"key": "only_vulnerable",
											"value": "true",
											"description": "List only images with vulnerabilities",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "100",
											"description": "The maximum number of images to be listed"
										},
										{
											"key": "page",
											"value": "1",
											"description": "List images from the specified page of results"
										},
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Set ordering of returned results. May be repeated to order by multiple attributes. Allowed attributes are 'vulnerabilities', 'name', 'registry', 'created', 'scan_date', 'build_number' and 'id'. Prefix any attribute with '-' to reverse the order.",
											"disabled": true
										},
										{
											"key": "next",
											"value": "cillum exercitation",
											"description": "List images from the specified next value",
											"disabled": true
										},
										{
											"key": "enable_keyset_pagination",
											"value": "true",
											"description": "Enable keyset pagination; disabled by default."
										},
										{
											"key": "updated_in",
											"value": "-96481460",
											"description": "List only images that have been changed in the last X hours"
										},
										{
											"key": "assurance_policy_name",
											"value": "cillum exercitation",
											"description": "List images failed due to the specified Image assurance policy",
											"disabled": true
										}
									]
								},
								"description": "List registered images"
							},
							"response": [
								{
									"name": "Images successfully listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/images?registry=cillum exercitation&repository=cillum exercitation&name=cillum exercitation&only_vulnerable=true&page_size=-96481460&page=-96481460&order_by=cillum exercitation&next=cillum exercitation&enable_keyset_pagination=true&updated_in=-96481460&assurance_policy_name=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images"
											],
											"query": [
												{
													"key": "registry",
													"value": "cillum exercitation"
												},
												{
													"key": "repository",
													"value": "cillum exercitation"
												},
												{
													"key": "name",
													"value": "cillum exercitation"
												},
												{
													"key": "only_vulnerable",
													"value": "true"
												},
												{
													"key": "page_size",
													"value": "-96481460"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "next",
													"value": "cillum exercitation"
												},
												{
													"key": "enable_keyset_pagination",
													"value": "true"
												},
												{
													"key": "updated_in",
													"value": "-96481460"
												},
												{
													"key": "assurance_policy_name",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Link",
											"value": "cillum exercitation",
											"description": "The next pagination value; available when the enable_keyset_pagination request parameter is enabled"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 13992102,\n  \"page\": -37908169,\n  \"pagesize\": -87483192,\n  \"result\": [\n    {\n      \"registry\": \"non consequat officia\",\n      \"repository\": \"aliqua\",\n      \"name\": \"ut velit nisi\",\n      \"created\": \"incididunt non Ut sed aliqua\",\n      \"author\": \"nisi fugiat\",\n      \"scan_status\": \"ullamco in labore ea Ut\",\n      \"tag\": \"do reprehenderit\",\n      \"digest\": \"nostrud ullamco\",\n      \"parent\": {\n        \"value\": \"<Circular reference to #/components/schemas/RegistryImage detected>\"\n      },\n      \"size\": -20750229,\n      \"labels\": [\n        \"culpa\",\n        \"sunt do nulla\"\n      ],\n      \"os\": \"exercitation do adipisicing eu\",\n      \"os_version\": \"sint nisi\",\n      \"scan_date\": \"dolore Ut exercitation est\",\n      \"scan_error\": \"occaecat\",\n      \"vulns_found\": -64562302,\n      \"crit_vulns\": 92014700,\n      \"high_vulns\": 5696503,\n      \"med_vulns\": 61615993,\n      \"low_vulns\": -86051034,\n      \"neg_vulns\": -65786040,\n      \"sensitive_data\": -14485071,\n      \"malware\": 47416183,\n      \"disallowed\": false,\n      \"pending_disallowed\": false,\n      \"whitelisted\": false,\n      \"blacklisted\": false,\n      \"permission_lastupdate\": \"p\",\n      \"permission_comment\": \"dolor in\",\n      \"permission_author\": \"ullamco anim nostrud\",\n      \"partial_results\": false,\n      \"newer_image_exists\": true,\n      \"metadata\": {\n        \"docker_id\": \"ani\",\n        \"parent\": \"proident in aliquip\",\n        \"repo_digests\": [\n          \"ullamco aliquip\",\n          \"pariatur nulla\"\n        ],\n        \"comment\": \"nulla fugiat enim\",\n        \"created\": \"esse occaecat aliquip labore\",\n        \"docker_version\": \"velit incididunt\",\n        \"author\": \"dolore ipsum\",\n        \"architecture\": \"reprehenderit\",\n        \"os\": \"dolore tempor\",\n        \"os_version\": \"magna\",\n        \"size\": 14992189,\n        \"virtual_size\": 42324341,\n        \"default_user\": \"Duis \",\n        \"env\": [\n          \"quis labore elit\",\n          \"minim culpa enim aliquip\"\n        ],\n        \"docker_labels\": [\n          \"fugiat tempor incididunt\",\n          \"mollit qui dolore\"\n        ]\n      },\n      \"history\": [\n        {\n          \"id\": \"Excepteur\",\n          \"size\": 87104215,\n          \"comment\": \"ad consequat Lorem quis\",\n          \"created\": \"ipsum\",\n          \"created_by\": \"Excepteur non cupidatat nulla\"\n        },\n        {\n          \"id\": \"sit voluptate veniam eiusmod\",\n          \"size\": -84644167,\n          \"comment\": \"et tempor sint\",\n          \"created\": \"veniam in pariatur consectetur\",\n          \"created_by\": \"ea minim consequat mollit te\"\n        }\n      ],\n      \"assurance_results\": {\n        \"disallowed\": false,\n        \"checks_performed\": [\n          {\n            \"policy_name\": \"dolore dolor aliqua\",\n            \"assurance_type\": \"dolore nulla dolor ea Duis\",\n            \"failed\": false,\n            \"blocking\": true,\n            \"control\": \"commodo eiusmod\",\n            \"base_image_found_registry\": \"tempor et in\",\n            \"base_image_found_name\": \"proident irure\",\n            \"blacklisted_cves_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"blacklisted_packages_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"missing_packages\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"max_severity_allowed\": \"Duis ad non\",\n            \"max_severity_found\": \"tempor Lorem\",\n            \"max_fixable_severity_found\": \"exercitation quis aliquip qui\",\n            \"max_score_allowed\": -14462591.327217609,\n            \"max_score_found\": 61507069.67741558,\n            \"max_fixable_score_found\": -70004750.08376141,\n            \"no_fix_excluded\": true,\n            \"root_user_found\": true,\n            \"sensitive_data_found\": 92678835,\n            \"malware_found\": 57339183,\n            \"custom_checks_failed\": {\n              \"script_name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"script_type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"exit_code\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"output\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"blacklisted_licenses_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"whitelisted_missing_licenses_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"forbidden_labels_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"missing_labels_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"blacklist_permissions_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"policy_name\": \"culpa\",\n            \"assurance_type\": \"magna veniam ad\",\n            \"failed\": false,\n            \"blocking\": false,\n            \"control\": \"quis amet fugiat dolor\",\n            \"base_image_found_registry\": \"incididun\",\n            \"base_image_found_name\": \"elit cupidatat\",\n            \"blacklisted_cves_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"blacklisted_packages_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"missing_packages\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"max_severity_allowed\": \"dolor Ut in\",\n            \"max_severity_found\": \"nostrud quis aliqua Lorem\",\n            \"max_fixable_severity_found\": \"labore ut occaeca\",\n            \"max_score_allowed\": 93374627.91039988,\n            \"max_score_found\": -25667794.368433043,\n            \"max_fixable_score_found\": 31211501.99202773,\n            \"no_fix_excluded\": false,\n            \"root_user_found\": false,\n            \"sensitive_data_found\": -97959548,\n            \"malware_found\": 87370399,\n            \"custom_checks_failed\": {\n              \"script_name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"script_type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"exit_code\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"output\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"blacklisted_licenses_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"whitelisted_missing_licenses_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"forbidden_labels_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"missing_labels_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"blacklist_permissions_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"microenforcer_detected\": true,\n      \"build_pipeline\": \"sed nostrud\",\n      \"build_number\": \"fugiat\",\n      \"build_url\": \"laboris in adipisicing\"\n    },\n    {\n      \"registry\": \"quis occaecat proident in\",\n      \"repository\": \"nisi quis\",\n      \"name\": \"et\",\n      \"created\": \"aliqua id dolore ex\",\n      \"author\": \"occaecat\",\n      \"scan_status\": \"est aliqua id\",\n      \"tag\": \"amet in\",\n      \"digest\": \"dolor eiusmod\",\n      \"parent\": {\n        \"value\": \"<Circular reference to #/components/schemas/RegistryImage detected>\"\n      },\n      \"size\": 61285702,\n      \"labels\": [\n        \"dolor in\",\n        \"cillum et aute eu\"\n      ],\n      \"os\": \"dolor exercitation sed\",\n      \"os_version\": \"irure ea sed officia\",\n      \"scan_date\": \"enim amet Duis\",\n      \"scan_error\": \"nostrud s\",\n      \"vulns_found\": 30027206,\n      \"crit_vulns\": 83043496,\n      \"high_vulns\": -99218950,\n      \"med_vulns\": -36726341,\n      \"low_vulns\": -78355048,\n      \"neg_vulns\": 2443802,\n      \"sensitive_data\": 79253705,\n      \"malware\": -77859981,\n      \"disallowed\": false,\n      \"pending_disallowed\": true,\n      \"whitelisted\": false,\n      \"blacklisted\": false,\n      \"permission_lastupdate\": \"eu laboris ut mollit\",\n      \"permission_comment\": \"ut nisi consequat do\",\n      \"permission_author\": \"exercitation culpa\",\n      \"partial_results\": true,\n      \"newer_image_exists\": false,\n      \"metadata\": {\n        \"docker_id\": \"aliquip mollit\",\n        \"parent\": \"incididunt est deserunt\",\n        \"repo_digests\": [\n          \"fugiat mollit\",\n          \"magna in sint voluptate amet\"\n        ],\n        \"comment\": \"velit labore et esse\",\n        \"created\": \"ullamco do dolor\",\n        \"docker_version\": \"eu dolore veniam fugiat\",\n        \"author\": \"nisi incididunt Ut ad\",\n        \"architecture\": \"laboris velit esse deserunt tempor\",\n        \"os\": \"Duis qui in\",\n        \"os_version\": \"anim irure aliquip est\",\n        \"size\": 59122732,\n        \"virtual_size\": -20204581,\n        \"default_user\": \"veniam\",\n        \"env\": [\n          \"proident consectetur dolor aliqua\",\n          \"anim eu magna\"\n        ],\n        \"docker_labels\": [\n          \"officia nisi laborum consequat\",\n          \"sed Duis sint\"\n        ]\n      },\n      \"history\": [\n        {\n          \"id\": \"in et sit\",\n          \"size\": -36455679,\n          \"comment\": \"veniam ipsum nostrud sint\",\n          \"created\": \"incididunt ea commodo\",\n          \"created_by\": \"s\"\n        },\n        {\n          \"id\": \"nulla et in Excepteur amet\",\n          \"size\": -81860393,\n          \"comment\": \"sunt\",\n          \"created\": \"adipisicing deserunt incidid\",\n          \"created_by\": \"esse adipisicing enim aute\"\n        }\n      ],\n      \"assurance_results\": {\n        \"disallowed\": false,\n        \"checks_performed\": [\n          {\n            \"policy_name\": \"nulla el\",\n            \"assurance_type\": \"laboris ir\",\n            \"failed\": true,\n            \"blocking\": false,\n            \"control\": \"anim pariatur culpa adipisicing\",\n            \"base_image_found_registry\": \"p\",\n            \"base_image_found_name\": \"Excepteur in Lorem ullamco\",\n            \"blacklisted_cves_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"blacklisted_packages_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"missing_packages\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"max_severity_allowed\": \"in voluptate cillum dolore\",\n            \"max_severity_found\": \"consectetur esse reprehenderit ullamco\",\n            \"max_fixable_severity_found\": \"voluptate commodo ad amet cupidatat\",\n            \"max_score_allowed\": 60811776.81891897,\n            \"max_score_found\": -23214420.505874768,\n            \"max_fixable_score_found\": -22567450.803390667,\n            \"no_fix_excluded\": false,\n            \"root_user_found\": true,\n            \"sensitive_data_found\": 10924780,\n            \"malware_found\": -25510122,\n            \"custom_checks_failed\": {\n              \"script_name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"script_type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"exit_code\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"output\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"blacklisted_licenses_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"whitelisted_missing_licenses_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"forbidden_labels_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"missing_labels_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"blacklist_permissions_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"policy_name\": \"aliqua Duis\",\n            \"assurance_type\": \"amet aute magna sunt sit\",\n            \"failed\": true,\n            \"blocking\": true,\n            \"control\": \"ea culpa\",\n            \"base_image_found_registry\": \"dolore\",\n            \"base_image_found_name\": \"occaecat ullamco\",\n            \"blacklisted_cves_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"blacklisted_packages_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"missing_packages\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"max_severity_allowed\": \"adipisicing\",\n            \"max_severity_found\": \"aute laboris\",\n            \"max_fixable_severity_found\": \"dolor amet laboris occa\",\n            \"max_score_allowed\": -67301534.46469972,\n            \"max_score_found\": 63937634.84411466,\n            \"max_fixable_score_found\": -25048757.03576088,\n            \"no_fix_excluded\": false,\n            \"root_user_found\": false,\n            \"sensitive_data_found\": -53957756,\n            \"malware_found\": -89936137,\n            \"custom_checks_failed\": {\n              \"script_name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"script_type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"exit_code\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"output\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            \"blacklisted_licenses_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"whitelisted_missing_licenses_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"forbidden_labels_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"missing_labels_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"blacklist_permissions_found\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ]\n      },\n      \"microenforcer_detected\": false,\n      \"build_pipeline\": \"ullamco reprehenderit nostrud\",\n      \"build_number\": \"adipisicing ut v\",\n      \"build_url\": \"esse in\"\n    }\n  ]\n}"
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/images?registry=cillum exercitation&repository=cillum exercitation&name=cillum exercitation&only_vulnerable=true&page_size=-96481460&page=-96481460&order_by=cillum exercitation&next=cillum exercitation&enable_keyset_pagination=true&updated_in=-96481460&assurance_policy_name=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images"
											],
											"query": [
												{
													"key": "registry",
													"value": "cillum exercitation"
												},
												{
													"key": "repository",
													"value": "cillum exercitation"
												},
												{
													"key": "name",
													"value": "cillum exercitation"
												},
												{
													"key": "only_vulnerable",
													"value": "true"
												},
												{
													"key": "page_size",
													"value": "-96481460"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "next",
													"value": "cillum exercitation"
												},
												{
													"key": "enable_keyset_pagination",
													"value": "true"
												},
												{
													"key": "updated_in",
													"value": "-96481460"
												},
												{
													"key": "assurance_policy_name",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Register image",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"registry\": \"minim\",\n  \"image\": \"sed minim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/images",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"images"
									]
								},
								"description": "Register and scan an image from a registry"
							},
							"response": [
								{
									"name": "Images successfully registered",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"registry\": \"minim\",\n  \"image\": \"sed minim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/images",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"registry\": \"minim\",\n  \"image\": \"sed minim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/images",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "List images based on name",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/images/names?page=-96481460&page_size=-96481460",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"images",
										"names"
									],
									"query": [
										{
											"key": "page",
											"value": "-96481460",
											"description": "Page number (defaults to the first page)"
										},
										{
											"key": "page_size",
											"value": "-96481460",
											"description": "Page size (number of results; defaults to 50)"
										},
										{
											"key": "name",
											"value": "cillum exercitation",
											"description": "Filter by name",
											"disabled": true
										}
									]
								},
								"description": "List images based on name"
							},
							"response": [
								{
									"name": "images listed successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/images/names?page=-96481460&page_size=-96481460&name=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images",
												"names"
											],
											"query": [
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "page_size",
													"value": "-96481460"
												},
												{
													"key": "name",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"registry\": \"sit reprehenderit ipsum velit\",\n    \"repository_id\": -94457705,\n    \"name\": \"labore in qui\",\n    \"digest\": \"incididunt ullamco\",\n    \"is_local\": \"magna sit eiusmod sunt deserunt\",\n    \"aquasource_scanned\": \"ut aliqua fugiat cupidatat\"\n  },\n  {\n    \"registry\": \"sit in\",\n    \"repository_id\": -81231927,\n    \"name\": \"commodo aliqua Lorem\",\n    \"digest\": \"amet qui est incididunt\",\n    \"is_local\": \"sit exercitation do nostrud aliqua\",\n    \"aquasource_scanned\": \"ullamco sint consectetu\"\n  }\n]"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/images/names?page=-96481460&page_size=-96481460&name=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"images",
												"names"
											],
											"query": [
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "page_size",
													"value": "-96481460"
												},
												{
													"key": "name",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "Image Repositories",
					"item": [
						{
							"name": "{registryid}/{repository name}",
							"item": [
								{
									"name": "Get specific repository",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/repositories/:registryid/:repository_name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"repositories",
												":registryid",
												":repository_name"
											],
											"variable": [
												{
													"key": "registryid",
													"value": "cillum exercitation",
													"description": "(Required) Registry name"
												},
												{
													"key": "repository_name",
													"value": "cillum exercitation",
													"description": "(Required) Repository name"
												}
											]
										},
										"description": "Get a specific repository from a registry, according to the repository name"
									},
									"response": [
										{
											"name": "Details of the repository",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/repositories/:registryid/:repository_name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"repositories",
														":registryid",
														":repository_name"
													],
													"variable": [
														{
															"key": "registryid",
															"value": "cillum exercitation",
															"description": "(Required) Registry name"
														},
														{
															"key": "repository_name",
															"value": "cillum exercitation",
															"description": "(Required) Repository name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"mollit officia eiusmod velit\",\n  \"registry\": \"velit eu proident\",\n  \"author\": \"aute consequat Lorem aliquip c\",\n  \"runtime_profile_id\": 49465887,\n  \"runtime_profile_name\": \"do enim consequat nostrud\",\n  \"dynamic_profiling\": false,\n  \"num_images\": -76979826,\n  \"num_disallowed\": -38078455,\n  \"num_failed\": 50120506,\n  \"first_scan_failed\": true,\n  \"crit_vulns\": 18063100,\n  \"high_vulns\": -72160246,\n  \"med_vulns\": 34572460,\n  \"low_vulns\": -58586723,\n  \"neg_vulns\": -18894426,\n  \"sensitive_data\": 54951650,\n  \"malware\": -64343629,\n  \"dta\": [\n    {\n      \"severity\": \"qui Duis in voluptate\",\n      \"Count\": -23097157\n    },\n    {\n      \"severity\": \"consectetur do ipsum reprehenderit moll\",\n      \"Count\": 26826615\n    }\n  ],\n  \"trusted_base_count\": -65062731,\n  \"whitelisted_images_count\": -20248586,\n  \"is_default_policy\": true,\n  \"profiler_session_id\": 89844270,\n  \"profiler_session_dynamic\": false,\n  \"permission\": \"qui amet\"\n}"
										},
										{
											"name": "Either the registry or the repository does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/repositories/:registryid/:repository_name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"repositories",
														":registryid",
														":repository_name"
													],
													"variable": [
														{
															"key": "registryid",
															"value": "cillum exercitation",
															"description": "(Required) Registry name"
														},
														{
															"key": "repository_name",
															"value": "cillum exercitation",
															"description": "(Required) Repository name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Failed loading registry; failed transforming the repository name; registry casting failed; or failed loading the repository",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/repositories/:registryid/:repository_name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"repositories",
														":registryid",
														":repository_name"
													],
													"variable": [
														{
															"key": "registryid",
															"value": "cillum exercitation",
															"description": "(Required) Registry name"
														},
														{
															"key": "repository_name",
															"value": "cillum exercitation",
															"description": "(Required) Repository name"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Delete specific repository",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/repositories/:registryid/:repository_name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"repositories",
												":registryid",
												":repository_name"
											],
											"variable": [
												{
													"key": "registryid",
													"value": "cillum exercitation",
													"description": "(Required) Registry name"
												},
												{
													"key": "repository_name",
													"value": "cillum exercitation",
													"description": "(Required) Name of the repository to be deleted"
												}
											]
										},
										"description": "Delete a specific repository from a registry, according to the repository name"
									},
									"response": [
										{
											"name": "Repository deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/repositories/:registryid/:repository_name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"repositories",
														":registryid",
														":repository_name"
													],
													"variable": [
														{
															"key": "registryid",
															"value": "cillum exercitation",
															"description": "(Required) Registry name"
														},
														{
															"key": "repository_name",
															"value": "cillum exercitation",
															"description": "(Required) Name of the repository to be deleted"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Either the registry or the repository does not exist",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/repositories/:registryid/:repository_name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"repositories",
														":registryid",
														":repository_name"
													],
													"variable": [
														{
															"key": "registryid",
															"value": "cillum exercitation",
															"description": "(Required) Registry name"
														},
														{
															"key": "repository_name",
															"value": "cillum exercitation",
															"description": "(Required) Name of the repository to be deleted"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Failed loading registry; failed transforming the repository name; registry casting failed; or failed loading the repository",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/repositories/:registryid/:repository_name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"repositories",
														":registryid",
														":repository_name"
													],
													"variable": [
														{
															"key": "registryid",
															"value": "cillum exercitation",
															"description": "(Required) Registry name"
														},
														{
															"key": "repository_name",
															"value": "cillum exercitation",
															"description": "(Required) Name of the repository to be deleted"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get list of all repositories",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/repositories?page=1&pagesize=50&vulnerabilities=true&running_containers=true&disallowed_images=true&trusted_base_images=true&whitelisted_images=true&failed_scans=true",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "page number to start at"
										},
										{
											"key": "pagesize",
											"value": "50",
											"description": "number of results to display on each page"
										},
										{
											"key": "vulnerabilities",
											"value": "true",
											"description": "Repositories with vulnerabiliies"
										},
										{
											"key": "running_containers",
											"value": "true",
											"description": "Repositories with running containers"
										},
										{
											"key": "disallowed_images",
											"value": "true",
											"description": "Repositories with non-compliant images"
										},
										{
											"key": "trusted_base_images",
											"value": "true",
											"description": "Repositories with trusted base images"
										},
										{
											"key": "whitelisted_images",
											"value": "true",
											"description": "Repositories with allowed images"
										},
										{
											"key": "failed_scans",
											"value": "true",
											"description": "Repositories with failed scans"
										},
										{
											"key": "time",
											"value": "cillum exercitation",
											"description": "Sort repositories by time",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Sort repositories by counts of vulnerabilities with critical, high, medium, and low severity",
											"disabled": true
										},
										{
											"key": "filter",
											"value": "cillum exercitation",
											"description": "Image name",
											"disabled": true
										},
										{
											"key": "filter_id",
											"value": "cillum exercitation",
											"description": "Image ID",
											"disabled": true
										},
										{
											"key": "registry",
											"value": "cillum exercitation",
											"description": "Registry name",
											"disabled": true
										},
										{
											"key": "scope",
											"value": "cillum exercitation",
											"description": "Scope name",
											"disabled": true
										}
									]
								},
								"description": "Get a list of all repositories in the system"
							},
							"response": [
								{
									"name": "Repositories have been listed successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/repositories?page=1&pagesize=50&vulnerabilities=true&running_containers=true&disallowed_images=true&trusted_base_images=true&whitelisted_images=true&failed_scans=true&time=cillum exercitation&order_by=cillum exercitation&filter=cillum exercitation&filter_id=cillum exercitation&registry=cillum exercitation&scope=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"repositories"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "50"
												},
												{
													"key": "vulnerabilities",
													"value": "true"
												},
												{
													"key": "running_containers",
													"value": "true"
												},
												{
													"key": "disallowed_images",
													"value": "true"
												},
												{
													"key": "trusted_base_images",
													"value": "true"
												},
												{
													"key": "whitelisted_images",
													"value": "true"
												},
												{
													"key": "failed_scans",
													"value": "true"
												},
												{
													"key": "time",
													"value": "cillum exercitation"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "filter",
													"value": "cillum exercitation"
												},
												{
													"key": "filter_id",
													"value": "cillum exercitation"
												},
												{
													"key": "registry",
													"value": "cillum exercitation"
												},
												{
													"key": "scope",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"cupidatat reprehenderit consequat\",\n    \"registry\": \"eiusmod aliqua ex\",\n    \"author\": \"amet pariatur dolor\",\n    \"runtime_profile_id\": 13985346,\n    \"runtime_profile_name\": \"in in\",\n    \"dynamic_profiling\": false,\n    \"num_images\": -40615446,\n    \"num_disallowed\": -92675959,\n    \"num_failed\": -62501084,\n    \"first_scan_failed\": false,\n    \"crit_vulns\": -59811635,\n    \"high_vulns\": -46774846,\n    \"med_vulns\": 99677792,\n    \"low_vulns\": 92916869,\n    \"neg_vulns\": -51489263,\n    \"sensitive_data\": -10692184,\n    \"malware\": 67825073,\n    \"dta\": [\n      {\n        \"severity\": \"dolor\",\n        \"Count\": -84643922\n      },\n      {\n        \"severity\": \"nostrud esse do\",\n        \"Count\": 61451067\n      }\n    ],\n    \"trusted_base_count\": 45739948,\n    \"whitelisted_images_count\": 84758461,\n    \"is_default_policy\": false,\n    \"profiler_session_id\": 1919443,\n    \"profiler_session_dynamic\": false,\n    \"permission\": \"fugiat in\"\n  },\n  {\n    \"name\": \"ipsum consequat mollit\",\n    \"registry\": \"fugiat officia\",\n    \"author\": \"veniam do aute\",\n    \"runtime_profile_id\": 29578690,\n    \"runtime_profile_name\": \"laborum ea tempor esse veniam\",\n    \"dynamic_profiling\": false,\n    \"num_images\": -79169792,\n    \"num_disallowed\": 85868578,\n    \"num_failed\": -99845701,\n    \"first_scan_failed\": true,\n    \"crit_vulns\": -92364187,\n    \"high_vulns\": 32570860,\n    \"med_vulns\": 31510790,\n    \"low_vulns\": 83962555,\n    \"neg_vulns\": -96719321,\n    \"sensitive_data\": -37547624,\n    \"malware\": 56244244,\n    \"dta\": [\n      {\n        \"severity\": \"e\",\n        \"Count\": 82714806\n      },\n      {\n        \"severity\": \"ullamco ipsum est in pariatur\",\n        \"Count\": -40456414\n      }\n    ],\n    \"trusted_base_count\": 49856525,\n    \"whitelisted_images_count\": 93120752,\n    \"is_default_policy\": false,\n    \"profiler_session_id\": 16044128,\n    \"profiler_session_dynamic\": false,\n    \"permission\": \"ad elit cupidatat\"\n  }\n]"
								},
								{
									"name": "Internal error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/repositories?page=1&pagesize=50&vulnerabilities=true&running_containers=true&disallowed_images=true&trusted_base_images=true&whitelisted_images=true&failed_scans=true&time=cillum exercitation&order_by=cillum exercitation&filter=cillum exercitation&filter_id=cillum exercitation&registry=cillum exercitation&scope=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"repositories"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pagesize",
													"value": "50"
												},
												{
													"key": "vulnerabilities",
													"value": "true"
												},
												{
													"key": "running_containers",
													"value": "true"
												},
												{
													"key": "disallowed_images",
													"value": "true"
												},
												{
													"key": "trusted_base_images",
													"value": "true"
												},
												{
													"key": "whitelisted_images",
													"value": "true"
												},
												{
													"key": "failed_scans",
													"value": "true"
												},
												{
													"key": "time",
													"value": "cillum exercitation"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "filter",
													"value": "cillum exercitation"
												},
												{
													"key": "filter_id",
													"value": "cillum exercitation"
												},
												{
													"key": "registry",
													"value": "cillum exercitation"
												},
												{
													"key": "scope",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "Kubernetes Clusters",
					"item": [
						{
							"name": "{name}",
							"item": [
								{
									"name": "Get cluster",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/clusters/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Cluster name"
												}
											]
										},
										"description": "Get specific cluster information"
									},
									"response": [
										{
											"name": "Cluster information fetched succesfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/clusters/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"clusters",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Cluster name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cluster\": {\n    \"name\": \"deserunt consectetur et sed aliqua\",\n    \"status\": \"amet mollit in reprehenderit\",\n    \"last_update\": 48365292,\n    \"resources\": {\n      \"total_nodes\": -72502935,\n      \"scanned_nodes\": 98995189,\n      \"risky_nodes\": -78667362,\n      \"total_pods\": 52320295,\n      \"scanned_pods\": -97243576,\n      \"risky_pods\": 8981244,\n      \"protected_pods\": -84726364,\n      \"risk_events\": 40339259\n    },\n    \"risks\": {\n      \"grade\": \"officia in eu in\",\n      \"critical\": 74065615,\n      \"high\": -56229408,\n      \"medium\": 32068674,\n      \"low\": -1491360,\n      \"negligible\": -29140019\n    },\n    \"description\": \"Excepteur non dolore proident\",\n    \"namespace\": \"sit consectetur aliquip veniam Ut\",\n    \"security_group\": \"amet\",\n    \"gateway_address\": \"ut\",\n    \"runtime_policy_enabled\": true,\n    \"assurance_policy_enabled\": true,\n    \"registry\": \"quis amet\",\n    \"micro_enforcer_image_name\": \"veniam\",\n    \"kube_enforcer_image_name\": \"minim aliquip\",\n    \"kube_bench_image_name\": \"nulla\",\n    \"micro_enforcer_secrets_name\": \"ex irure esse dolore\",\n    \"micro_enforcer_certs_secrets_name\": \"dolore sit dolore\",\n    \"token\": \"commodo ipsum laborum in est\",\n    \"self_hosted_aqua_images\": false,\n    \"enforce_mode\": true,\n    \"config_commands\": [\n      \"quis cupidatat\",\n      \"velit voluptate\"\n    ],\n    \"deploy_commands\": [\n      \"incididunt tempor non\",\n      \"qui non enim dolore ex\"\n    ]\n  }\n}"
										},
										{
											"name": "Cluster name does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/clusters/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"clusters",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Cluster name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Could not get cluster from database",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/clusters/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"clusters",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Cluster name"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Update cluster",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"ea\",\n  \"namespace\": \"veniam eiusmod in\",\n  \"security_group\": \"exercitation minim cillum\",\n  \"gateway_address\": \"fugiat veniam\",\n  \"runtime_policy_enabled\": false,\n  \"assurance_policy_enabled\": true,\n  \"registry\": \"nostrud quis\",\n  \"micro_enforcer_image_name\": \"dolor dolore sit\",\n  \"kube_enforcer_image_name\": \"aliquip velit incididunt magna\",\n  \"kube_bench_image_name\": \"eiusmo\",\n  \"micro_enforcer_secrets_name\": \"aliquip officia in\",\n  \"micro_enforcer_certs_secrets_name\": \"officia ut anim est\",\n  \"token\": \"dolore\",\n  \"self_hosted_aqua_images\": true,\n  \"enforce_mode\": false,\n  \"config_commands\": [\n    \"sed in ea exercitation\",\n    \"consectetur magna\"\n  ],\n  \"deploy_commands\": [\n    \"quis eu\",\n    \"sed veniam consequat\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/clusters/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Updated cluster name"
												}
											]
										},
										"description": "Update a specific cluster"
									},
									"response": [
										{
											"name": "Cluster updated succesfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"ea\",\n  \"namespace\": \"veniam eiusmod in\",\n  \"security_group\": \"exercitation minim cillum\",\n  \"gateway_address\": \"fugiat veniam\",\n  \"runtime_policy_enabled\": false,\n  \"assurance_policy_enabled\": true,\n  \"registry\": \"nostrud quis\",\n  \"micro_enforcer_image_name\": \"dolor dolore sit\",\n  \"kube_enforcer_image_name\": \"aliquip velit incididunt magna\",\n  \"kube_bench_image_name\": \"eiusmo\",\n  \"micro_enforcer_secrets_name\": \"aliquip officia in\",\n  \"micro_enforcer_certs_secrets_name\": \"officia ut anim est\",\n  \"token\": \"dolore\",\n  \"self_hosted_aqua_images\": true,\n  \"enforce_mode\": false,\n  \"config_commands\": [\n    \"sed in ea exercitation\",\n    \"consectetur magna\"\n  ],\n  \"deploy_commands\": [\n    \"quis eu\",\n    \"sed veniam consequat\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/clusters/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"clusters",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Updated cluster name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cluster\": {\n    \"name\": \"deserunt consectetur et sed aliqua\",\n    \"status\": \"amet mollit in reprehenderit\",\n    \"last_update\": 48365292,\n    \"resources\": {\n      \"total_nodes\": -72502935,\n      \"scanned_nodes\": 98995189,\n      \"risky_nodes\": -78667362,\n      \"total_pods\": 52320295,\n      \"scanned_pods\": -97243576,\n      \"risky_pods\": 8981244,\n      \"protected_pods\": -84726364,\n      \"risk_events\": 40339259\n    },\n    \"risks\": {\n      \"grade\": \"officia in eu in\",\n      \"critical\": 74065615,\n      \"high\": -56229408,\n      \"medium\": 32068674,\n      \"low\": -1491360,\n      \"negligible\": -29140019\n    },\n    \"description\": \"Excepteur non dolore proident\",\n    \"namespace\": \"sit consectetur aliquip veniam Ut\",\n    \"security_group\": \"amet\",\n    \"gateway_address\": \"ut\",\n    \"runtime_policy_enabled\": true,\n    \"assurance_policy_enabled\": true,\n    \"registry\": \"quis amet\",\n    \"micro_enforcer_image_name\": \"veniam\",\n    \"kube_enforcer_image_name\": \"minim aliquip\",\n    \"kube_bench_image_name\": \"nulla\",\n    \"micro_enforcer_secrets_name\": \"ex irure esse dolore\",\n    \"micro_enforcer_certs_secrets_name\": \"dolore sit dolore\",\n    \"token\": \"commodo ipsum laborum in est\",\n    \"self_hosted_aqua_images\": false,\n    \"enforce_mode\": true,\n    \"config_commands\": [\n      \"quis cupidatat\",\n      \"velit voluptate\"\n    ],\n    \"deploy_commands\": [\n      \"incididunt tempor non\",\n      \"qui non enim dolore ex\"\n    ]\n  }\n}"
										},
										{
											"name": "Bad request body or failed validation. Please double check your request body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"ea\",\n  \"namespace\": \"veniam eiusmod in\",\n  \"security_group\": \"exercitation minim cillum\",\n  \"gateway_address\": \"fugiat veniam\",\n  \"runtime_policy_enabled\": false,\n  \"assurance_policy_enabled\": true,\n  \"registry\": \"nostrud quis\",\n  \"micro_enforcer_image_name\": \"dolor dolore sit\",\n  \"kube_enforcer_image_name\": \"aliquip velit incididunt magna\",\n  \"kube_bench_image_name\": \"eiusmo\",\n  \"micro_enforcer_secrets_name\": \"aliquip officia in\",\n  \"micro_enforcer_certs_secrets_name\": \"officia ut anim est\",\n  \"token\": \"dolore\",\n  \"self_hosted_aqua_images\": true,\n  \"enforce_mode\": false,\n  \"config_commands\": [\n    \"sed in ea exercitation\",\n    \"consectetur magna\"\n  ],\n  \"deploy_commands\": [\n    \"quis eu\",\n    \"sed veniam consequat\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/clusters/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"clusters",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Updated cluster name"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Could not update cluster",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"ea\",\n  \"namespace\": \"veniam eiusmod in\",\n  \"security_group\": \"exercitation minim cillum\",\n  \"gateway_address\": \"fugiat veniam\",\n  \"runtime_policy_enabled\": false,\n  \"assurance_policy_enabled\": true,\n  \"registry\": \"nostrud quis\",\n  \"micro_enforcer_image_name\": \"dolor dolore sit\",\n  \"kube_enforcer_image_name\": \"aliquip velit incididunt magna\",\n  \"kube_bench_image_name\": \"eiusmo\",\n  \"micro_enforcer_secrets_name\": \"aliquip officia in\",\n  \"micro_enforcer_certs_secrets_name\": \"officia ut anim est\",\n  \"token\": \"dolore\",\n  \"self_hosted_aqua_images\": true,\n  \"enforce_mode\": false,\n  \"config_commands\": [\n    \"sed in ea exercitation\",\n    \"consectetur magna\"\n  ],\n  \"deploy_commands\": [\n    \"quis eu\",\n    \"sed veniam consequat\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/clusters/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"clusters",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Updated cluster name"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Delete cluster",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/clusters/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Cluster to delete"
												}
											]
										},
										"description": "Delete a specific cluster"
									},
									"response": [
										{
											"name": "Cluster deleted succesfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/clusters/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"clusters",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Cluster to delete"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cluster name does not exist",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/clusters/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"clusters",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Cluster to delete"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Could not delete cluster",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/clusters/:name",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"clusters",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "cillum exercitation",
															"description": "(Required) Cluster to delete"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "List clusters",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/infrastructure/clusters?page=1&pagesize=100",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"infrastructure",
										"clusters"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number - server default will be the first page"
										},
										{
											"key": "pagesize",
											"value": "100",
											"description": "Page size - results per page. Server default is 50 results per page"
										},
										{
											"key": "name",
											"value": "cillum exercitation",
											"description": "Filter by name",
											"disabled": true
										}
									]
								},
								"description": "List of all clusters"
							},
							"response": [
								{
									"name": "List of all clusters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											},
											{
												"key": "order_by",
												"value": "cillum exercitation",
												"description": "Sorted property - select any cluster property to sort by. Allowed value are name, lastupdate, status."
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/clusters?page=-96481460&pagesize=-96481460&name=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "pagesize",
													"value": "-96481460"
												},
												{
													"key": "name",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": -8481800,\n  \"page\": 47753992,\n  \"pagesize\": 95295230,\n  \"result\": [\n    {\n      \"name\": \"pariatur cupidatat in\",\n      \"status\": \"do ex ea\",\n      \"last_update\": -21373548,\n      \"resources\": {\n        \"total_nodes\": -43412415,\n        \"scanned_nodes\": -44533541,\n        \"risky_nodes\": -98517893,\n        \"total_pods\": 67229989,\n        \"scanned_pods\": 13624870,\n        \"risky_pods\": 55841981,\n        \"protected_pods\": 34561904,\n        \"risk_events\": 94222999\n      },\n      \"risks\": {\n        \"grade\": \"voluptate\",\n        \"critical\": -4707826,\n        \"high\": -7781378,\n        \"medium\": -16267699,\n        \"low\": 7123713,\n        \"negligible\": -82187302\n      }\n    },\n    {\n      \"name\": \"sit eu est in\",\n      \"status\": \"proident\",\n      \"last_update\": -68757982,\n      \"resources\": {\n        \"total_nodes\": 65096217,\n        \"scanned_nodes\": 5108498,\n        \"risky_nodes\": -85297903,\n        \"total_pods\": -25873397,\n        \"scanned_pods\": 40214894,\n        \"risky_pods\": 80398131,\n        \"protected_pods\": 30667794,\n        \"risk_events\": -15178270\n      },\n      \"risks\": {\n        \"grade\": \"sint nisi\",\n        \"critical\": 92224354,\n        \"high\": 59625368,\n        \"medium\": 2445455,\n        \"low\": -52234913,\n        \"negligible\": 64363156\n      }\n    }\n  ]\n}"
								},
								{
									"name": "Could not get clusters from database",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											},
											{
												"key": "order_by",
												"value": "cillum exercitation",
												"description": "Sorted property - select any cluster property to sort by. Allowed value are name, lastupdate, status."
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/clusters?page=-96481460&pagesize=-96481460&name=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters"
											],
											"query": [
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "pagesize",
													"value": "-96481460"
												},
												{
													"key": "name",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Create cluster",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"velit minim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/infrastructure/clusters",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"infrastructure",
										"clusters"
									]
								},
								"description": "Create a new cluster connection"
							},
							"response": [
								{
									"name": "Cluster record created succesfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"velit minim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/clusters",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"cluster\": {\n    \"name\": \"fugiat\",\n    \"status\": \"ex repreh\",\n    \"last_update\": 23875477,\n    \"resources\": {\n      \"total_nodes\": -60658564,\n      \"scanned_nodes\": -84237996,\n      \"risky_nodes\": 1975135,\n      \"total_pods\": -23960319,\n      \"scanned_pods\": -88757701,\n      \"risky_pods\": 24296198,\n      \"protected_pods\": -23124271,\n      \"risk_events\": -67592482\n    },\n    \"risks\": {\n      \"grade\": \"aliqua\",\n      \"critical\": -97809553,\n      \"high\": 76690421,\n      \"medium\": -91243280,\n      \"low\": -95096904,\n      \"negligible\": -48653886\n    },\n    \"description\": \"laborum enim aute Excepteur\",\n    \"namespace\": \"amet nulla proident elit\",\n    \"security_group\": \"in officia\",\n    \"gateway_address\": \"eu ut consequat dolor\",\n    \"runtime_policy_enabled\": true,\n    \"assurance_policy_enabled\": true,\n    \"registry\": \"Lorem officia nisi do\",\n    \"micro_enforcer_image_name\": \"commodo et\",\n    \"kube_enforcer_image_name\": \"labore\",\n    \"kube_bench_image_name\": \"in in\",\n    \"micro_enforcer_secrets_name\": \"adip\",\n    \"micro_enforcer_certs_secrets_name\": \"in eu\",\n    \"token\": \"commodo eu Excepteur\",\n    \"self_hosted_aqua_images\": false,\n    \"enforce_mode\": true,\n    \"config_commands\": [\n      \"Duis voluptate\",\n      \"irure\"\n    ],\n    \"deploy_commands\": [\n      \"qui ea\",\n      \"aliquip\"\n    ]\n  }\n}"
								},
								{
									"name": "Bad request body or failed validation. Please double check your request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"velit minim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/clusters",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								},
								{
									"name": "Could create cluster record",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"velit minim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/clusters",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Get cluster configuration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/infrastructure/clusters/config/:name",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"infrastructure",
										"clusters",
										"config",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "cillum exercitation",
											"description": "(Required) Cluster name"
										}
									]
								},
								"description": "Get a specific cluster connection configuration"
							},
							"response": [
								{
									"name": "Cluster configuration file fetched (kube-enforcer-config.zip)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/clusters/config/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters",
												"config",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Cluster name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cluster name does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/clusters/config/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters",
												"config",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Cluster name"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								},
								{
									"name": "Could not get clusters config information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/clusters/config/:name",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters",
												"config",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "cillum exercitation",
													"description": "(Required) Cluster name"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Delete clusters",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"irure deserunt\",\n  \"consectetur do est\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/infrastructure/clusters/delete",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"infrastructure",
										"clusters",
										"delete"
									]
								},
								"description": "Bulk delete clusters"
							},
							"response": [
								{
									"name": "All clusters provided were deleted successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/clusters/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/clusters/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								},
								{
									"name": "Failed to delete one or more of the provided clusters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"qui sint adipisicing nostrud dolore\",\n  \"dolor ut\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/clusters/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"clusters",
												"delete"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "Serverless",
					"item": [
						{
							"name": "projects",
							"item": [
								{
									"name": "{project}",
									"item": [
										{
											"name": "Get serverless application",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects/:project",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects",
														":project"
													],
													"variable": [
														{
															"key": "project",
															"value": "cillum exercitation",
															"description": "(Required) Project name"
														}
													]
												},
												"description": "Get a serverless application by name"
											},
											"response": [
												{
													"name": "Serverless application listed successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}"
												},
												{
													"name": "Input error - correct before resubmitting",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Internal error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "Update serverless application",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects/:project",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects",
														":project"
													],
													"variable": [
														{
															"key": "project",
															"value": "cillum exercitation",
															"description": "(Required) Project name"
														}
													]
												},
												"description": "Update a serverless application"
											},
											"response": [
												{
													"name": "Serverless application updated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Input error - correct before resubmitting",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Internal error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "Delete serverless application",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects/:project",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects",
														":project"
													],
													"variable": [
														{
															"key": "project",
															"value": "cillum exercitation",
															"description": "(Required) Project name"
														}
													]
												},
												"description": "Delete a serverless application"
											},
											"response": [
												{
													"name": "Serverless application deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Input error - correct before resubmitting",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Internal error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "Scan new serverless functions",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"functions\": [\n    {\n      \"function_id\": \"Excepteur\",\n      \"name\": \"veniam in fugiat\",\n      \"project\": \"deserunt cupidatat ea non enim\",\n      \"description\": \"sed dolore\",\n      \"digest\": \"officia\",\n      \"crit_vulns\": -75915925.20742644,\n      \"high_vulns\": 20161210.870862737,\n      \"low_vulns\": 9120030.408837378,\n      \"neg_vulns\": -94125348.49980041,\n      \"sensitive\": 17970109.57773933,\n      \"vulns_found\": -61729141.178209,\n      \"malware\": -41335207.137407705,\n      \"version\": \"cupidatat sed\",\n      \"handler\": \"sed est ut\",\n      \"last_scan\": \"1987-06-04T21:27:39.854Z\",\n      \"scan_status\": \"culpa ex ut\",\n      \"tags\": [\n        \"in ad magna deserunt\",\n        \"ullamco des\"\n      ],\n      \"environments\": [\n        \"ipsum eiusmod proident anim\",\n        \"fugiat elit mollit\"\n      ],\n      \"invocations\": 50694263.95463878,\n      \"durationsAverage\": -96602122.27185366,\n      \"triggers\": [\n        \"et commodo minim conseq\",\n        \"aliquip ullamco ea culp\"\n      ],\n      \"sensitive_environments\": [\n        \"est Duis velit nisi tempor\",\n        \"nostrud\"\n      ],\n      \"scan_warnings\": [\n        \"inci\",\n        \"esse proident velit eu\"\n      ],\n      \"last_modified\": \"1976-11-04T09:31:17.879Z\",\n      \"scan_error\": \"enim exercitation sed commodo\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"do ullamco veniam incididunt aute\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"veniam\",\n          \"control\": \"est nulla de\",\n          \"failed\": false\n        },\n        {\n          \"policy_name\": \"volupt\",\n          \"control\": \"nisi laboris incididunt\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"cupidatat aliquip ut\",\n      \"assurance_failed\": false,\n      \"assurance_failure\": \"Lorem cupidatat\",\n      \"block_failed\": true,\n      \"block_failure\": \"deseru\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"\",\n      \"layers_arn\": [\n        \"consequat\",\n        \"aute dolore\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": -21497626.90459682,\n      \"permission\": \"id in\",\n      \"runtime_version\": \"aliqua in id laborum amet\",\n      \"runtime_language\": \"tempor offici\",\n      \"layers\": [\n        {\n          \"arn\": \"deserunt veniam esse\",\n          \"name\": \"laborum do velit\",\n          \"created_date\": \"ut dolor ipsum\",\n          \"version_arn\": \"culpa\",\n          \"version\": -40128532.52686894\n        },\n        {\n          \"arn\": \"laborum in\",\n          \"name\": \"esse ut\",\n          \"created_date\": \"enim ex\",\n          \"version_arn\": \"Ut in sunt\",\n          \"version\": -66721848.90481269\n        }\n      ],\n      \"role_id\": \"est\",\n      \"role_resources\": [\n        {\n          \"name\": \"ut mollit\",\n          \"actions\": [\n            \"mollit dolor magna\",\n            \"deserunt sint\"\n          ],\n          \"last_usage\": -29972609.266931146,\n          \"severity\": 38839920.57850909,\n          \"issue\": \"qui\"\n        },\n        {\n          \"name\": \"cupidatat quis Ut adipisici\",\n          \"actions\": [\n            \"pariatur adipisicing ut\",\n            \"laborum occaecat irure proident\"\n          ],\n          \"last_usage\": -39806968.6506513,\n          \"severity\": -31328050.383408442,\n          \"issue\": \"ipsum occaecat magna\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": -87752469.00661102,\n      \"role_error\": \"proident nulla dolore exerc\",\n      \"num_permissive\": -86403382.27227575,\n      \"num_unused\": -17333039.630481914,\n      \"num_known\": 56965279.30669227\n    },\n    {\n      \"function_id\": \"nostrud fugiat consequat\",\n      \"name\": \"dolore aliquip \",\n      \"project\": \"pariatur culpa\",\n      \"description\": \"consequat aliquip ipsum ea\",\n      \"digest\": \"do\",\n      \"crit_vulns\": -89433928.21191777,\n      \"high_vulns\": -86940535.7882301,\n      \"low_vulns\": 65396408.24570912,\n      \"neg_vulns\": -77807010.89735027,\n      \"sensitive\": -12670711.281142518,\n      \"vulns_found\": -47182685.08354462,\n      \"malware\": -74347956.83536214,\n      \"version\": \"nisi Lorem aute magna\",\n      \"handler\": \"fugiat\",\n      \"last_scan\": \"1967-11-09T01:39:12.964Z\",\n      \"scan_status\": \"magna \",\n      \"tags\": [\n        \"Lorem in ut sed esse\",\n        \"ea\"\n      ],\n      \"environments\": [\n        \"voluptate velit\",\n        \"sint ullamco voluptate e\"\n      ],\n      \"invocations\": 4723571.816635758,\n      \"durationsAverage\": 32945354.27897407,\n      \"triggers\": [\n        \"incididunt consequat Ut id dolor\",\n        \"veniam\"\n      ],\n      \"sensitive_environments\": [\n        \"elit sunt adipisicing eu\",\n        \"sit fugiat irure\"\n      ],\n      \"scan_warnings\": [\n        \"nisi\",\n        \"nostrud quis culpa\"\n      ],\n      \"last_modified\": \"1977-05-27T04:59:54.026Z\",\n      \"scan_error\": \"culpa sit amet nisi\",\n      \"permissive\": true,\n      \"blocked\": false,\n      \"blocked_by\": \"nulla fugiat Duis aliqua\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"ea laboris\",\n          \"control\": \"laboris elit\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"elit esse\",\n          \"control\": \"minim in mollit exercitation\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"nostrud ut magna\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"laborum anim pariatur quis veniam\",\n      \"block_failed\": false,\n      \"block_failure\": \"ut\",\n      \"unblock_failed\": false,\n      \"unblock_failure\": \"laborum comm\",\n      \"layers_arn\": [\n        \"cupidatat\",\n        \"ex Ut\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": -3946689.114517316,\n      \"permission\": \"officia dolor\",\n      \"runtime_version\": \"ut qui esse et\",\n      \"runtime_language\": \"elit id aliqua reprehenderit\",\n      \"layers\": [\n        {\n          \"arn\": \"Ut amet commodo esse\",\n          \"name\": \"Excepteur ut\",\n          \"created_date\": \"exercitation amet voluptate\",\n          \"version_arn\": \"dolor aliqua laborum deserunt\",\n          \"version\": -5789924.361088514\n        },\n        {\n          \"arn\": \"ex in ipsum\",\n          \"name\": \"velit adipisicing\",\n          \"created_date\": \"enim dolor ex laborum\",\n          \"version_arn\": \"Lorem id dolore velit\",\n          \"version\": -70594331.98910074\n        }\n      ],\n      \"role_id\": \"non minim\",\n      \"role_resources\": [\n        {\n          \"name\": \"est sunt Ut nulla reprehenderit\",\n          \"actions\": [\n            \"Ut anim\",\n            \"ex officia Lorem labore id\"\n          ],\n          \"last_usage\": 99879469.1041792,\n          \"severity\": 17005246.290057093,\n          \"issue\": \"enim\"\n        },\n        {\n          \"name\": \"esse\",\n          \"actions\": [\n            \"sunt ad\",\n            \"proident amet adipisicing\"\n          ],\n          \"last_usage\": 24566669.338580206,\n          \"severity\": 39758833.98209658,\n          \"issue\": \"ipsum fugiat esse aliqua\"\n        }\n      ],\n      \"role_managed\": false,\n      \"role_common\": 39476906.21676734,\n      \"role_error\": \"laboris id anim magna labore\",\n      \"num_permissive\": -4828356.348795325,\n      \"num_unused\": 11576262.755393118,\n      \"num_known\": -15294364.610838324\n    }\n  ],\n  \"scan_all\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects/:project/functions",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects",
														":project",
														"functions"
													],
													"variable": [
														{
															"key": "project",
															"value": "cillum exercitation",
															"description": "(Required) Project name"
														}
													]
												},
												"description": "Scan serverless functions from a serverless application"
											},
											"response": [
												{
													"name": "Serverless functions were successfully sent for scanning",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"functions\": [\n    {\n      \"function_id\": \"eu sint fugiat velit\",\n      \"name\": \"aliqua\",\n      \"project\": \"est irure minim\",\n      \"description\": \"occaecat\",\n      \"digest\": \"eu exercitation officia irure adipisicing\",\n      \"crit_vulns\": -88453743.41892773,\n      \"high_vulns\": -28243462.05896093,\n      \"low_vulns\": -30059314.72876902,\n      \"neg_vulns\": 78363020.74863026,\n      \"sensitive\": 4129235.888048351,\n      \"vulns_found\": -57657440.3336346,\n      \"malware\": -18691588.447153017,\n      \"version\": \"ex consequat irure laboris proident\",\n      \"handler\": \"Lorem\",\n      \"last_scan\": \"1996-06-30T17:41:48.341Z\",\n      \"scan_status\": \"et ad laboris\",\n      \"tags\": [\n        \"eu ipsum reprehenderit\",\n        \"esse in laboris voluptate id\"\n      ],\n      \"environments\": [\n        \"ea Lorem occaecat aliquip\",\n        \"sint dolor ut\"\n      ],\n      \"invocations\": -61509788.17278539,\n      \"durationsAverage\": 94079021.02912673,\n      \"triggers\": [\n        \"magna sed\",\n        \"amet sed aliquip aute\"\n      ],\n      \"sensitive_environments\": [\n        \"ut Ut\",\n        \"sit officia cupidatat\"\n      ],\n      \"scan_warnings\": [\n        \"est dolor officia cillum\",\n        \"aliqua adipisicing sint amet voluptate\"\n      ],\n      \"last_modified\": \"1960-07-13T21:16:43.080Z\",\n      \"scan_error\": \"ullamco consequat\",\n      \"permissive\": true,\n      \"blocked\": false,\n      \"blocked_by\": \"tempor aliquip nostrud et\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"anim\",\n          \"control\": \"dolore dolore incididunt\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"ea id\",\n          \"control\": \"anim Excepteur sed occa\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"pariatur elit\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"in\",\n      \"block_failed\": true,\n      \"block_failure\": \"anim do fugiat\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"cillum nostrud\",\n      \"layers_arn\": [\n        \"occaecat laborum veniam dolore\",\n        \"amet eu Duis esse\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": -74992824.95361967,\n      \"permission\": \"nisi do aliqua\",\n      \"runtime_version\": \"quis Excepteur consequat dolor eiusmod\",\n      \"runtime_language\": \"incididunt aliquip consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"anim et quis elit commodo\",\n          \"name\": \"do nostrud\",\n          \"created_date\": \"ullamco non dolore consequat magna\",\n          \"version_arn\": \"commodo eu\",\n          \"version\": 45963244.82935575\n        },\n        {\n          \"arn\": \"ipsum aute qui\",\n          \"name\": \"in voluptate laborum\",\n          \"created_date\": \"veniam laboris nostr\",\n          \"version_arn\": \"Ut\",\n          \"version\": 25212132.5305319\n        }\n      ],\n      \"role_id\": \"irure commodo eu pariatur cillum\",\n      \"role_resources\": [\n        {\n          \"name\": \"voluptate nostrud Duis\",\n          \"actions\": [\n            \"veniam ipsu\",\n            \"nostrud esse velit minim\"\n          ],\n          \"last_usage\": -66698713.04240322,\n          \"severity\": 51345193.21367636,\n          \"issue\": \"Duis qui\"\n        },\n        {\n          \"name\": \"anim ut elit\",\n          \"actions\": [\n            \"non in\",\n            \"labore non cupidatat deserunt\"\n          ],\n          \"last_usage\": -46907806.978048995,\n          \"severity\": 20130600.36707844,\n          \"issue\": \"in tempor proident Duis\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 28025573.851786405,\n      \"role_error\": \"adipisicing do elit\",\n      \"num_permissive\": -48379699.55197474,\n      \"num_unused\": -82891017.70056368,\n      \"num_known\": 25378434.536059484\n    },\n    {\n      \"function_id\": \"Duis adipisicing\",\n      \"name\": \"dolore aliquip laboris sed\",\n      \"project\": \"incididunt culpa sunt dolor anim\",\n      \"description\": \"\",\n      \"digest\": \"adipisicing dolore ut aute quis\",\n      \"crit_vulns\": 30093504.196930975,\n      \"high_vulns\": -92475279.13410583,\n      \"low_vulns\": -75986830.23516859,\n      \"neg_vulns\": -22646087.68958789,\n      \"sensitive\": 71411946.22355735,\n      \"vulns_found\": 27645946.798490778,\n      \"malware\": 36413252.71973336,\n      \"version\": \"qui sint\",\n      \"handler\": \"Ut in magna dolor\",\n      \"last_scan\": \"1964-11-03T18:20:26.099Z\",\n      \"scan_status\": \"in cupidata\",\n      \"tags\": [\n        \"adipisicing tempor nulla\",\n        \"enim amet consectetur\"\n      ],\n      \"environments\": [\n        \"aliquip laborum\",\n        \"u\"\n      ],\n      \"invocations\": 23491134.066160545,\n      \"durationsAverage\": -54440834.06237002,\n      \"triggers\": [\n        \"enim est\",\n        \"voluptate velit\"\n      ],\n      \"sensitive_environments\": [\n        \"sit et\",\n        \"cillum qui\"\n      ],\n      \"scan_warnings\": [\n        \"exercitation incididunt ex consectetur non\",\n        \"quis\"\n      ],\n      \"last_modified\": \"2001-10-02T11:02:15.203Z\",\n      \"scan_error\": \"officia dolor occaecat\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"in in in voluptate\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"commodo\",\n          \"control\": \"non proident\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"nulla officia eiusmod exercitation ex\",\n          \"control\": \"ut dolore cupidatat eiusmod\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"mollit\",\n      \"assurance_failed\": false,\n      \"assurance_failure\": \"eiusmod\",\n      \"block_failed\": true,\n      \"block_failure\": \"veniam consectetur\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"pariatur elit\",\n      \"layers_arn\": [\n        \"laborum velit veniam\",\n        \"ad ut\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": 64048364.93563527,\n      \"permission\": \"Excepteur mollit\",\n      \"runtime_version\": \"adipisicing labo\",\n      \"runtime_language\": \"nisi sunt consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"reprehenderit esse Lorem veniam sunt\",\n          \"name\": \"et velit in incididunt\",\n          \"created_date\": \"occaecat est\",\n          \"version_arn\": \"cillum sint\",\n          \"version\": -70005010.0108499\n        },\n        {\n          \"arn\": \"eu occaecat\",\n          \"name\": \"magna Excepteur cupidatat qui\",\n          \"created_date\": \"culpa magna Ut\",\n          \"version_arn\": \"enim ipsum\",\n          \"version\": -28263121.359053895\n        }\n      ],\n      \"role_id\": \"nisi proident tempor sed\",\n      \"role_resources\": [\n        {\n          \"name\": \"dolor consequat dolor magna\",\n          \"actions\": [\n            \"fugiat anim ut ullamco\",\n            \"aliquip anim in\"\n          ],\n          \"last_usage\": 58143643.95272395,\n          \"severity\": 86350401.32964137,\n          \"issue\": \"ut dolor\"\n        },\n        {\n          \"name\": \"sed culpa\",\n          \"actions\": [\n            \"quis velit\",\n            \"id aliquip est nisi\"\n          ],\n          \"last_usage\": -20835091.343184814,\n          \"severity\": 85749490.616137,\n          \"issue\": \"voluptate qui irure ipsum\"\n        }\n      ],\n      \"role_managed\": false,\n      \"role_common\": -98608919.63352132,\n      \"role_error\": \"minim enim f\",\n      \"num_permissive\": -94290771.32966155,\n      \"num_unused\": 60511659.64677483,\n      \"num_known\": -90316182.63084371\n    }\n  ],\n  \"scan_all\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project/functions",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project",
																"functions"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Input error - correct before resubmitting",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"functions\": [\n    {\n      \"function_id\": \"eu sint fugiat velit\",\n      \"name\": \"aliqua\",\n      \"project\": \"est irure minim\",\n      \"description\": \"occaecat\",\n      \"digest\": \"eu exercitation officia irure adipisicing\",\n      \"crit_vulns\": -88453743.41892773,\n      \"high_vulns\": -28243462.05896093,\n      \"low_vulns\": -30059314.72876902,\n      \"neg_vulns\": 78363020.74863026,\n      \"sensitive\": 4129235.888048351,\n      \"vulns_found\": -57657440.3336346,\n      \"malware\": -18691588.447153017,\n      \"version\": \"ex consequat irure laboris proident\",\n      \"handler\": \"Lorem\",\n      \"last_scan\": \"1996-06-30T17:41:48.341Z\",\n      \"scan_status\": \"et ad laboris\",\n      \"tags\": [\n        \"eu ipsum reprehenderit\",\n        \"esse in laboris voluptate id\"\n      ],\n      \"environments\": [\n        \"ea Lorem occaecat aliquip\",\n        \"sint dolor ut\"\n      ],\n      \"invocations\": -61509788.17278539,\n      \"durationsAverage\": 94079021.02912673,\n      \"triggers\": [\n        \"magna sed\",\n        \"amet sed aliquip aute\"\n      ],\n      \"sensitive_environments\": [\n        \"ut Ut\",\n        \"sit officia cupidatat\"\n      ],\n      \"scan_warnings\": [\n        \"est dolor officia cillum\",\n        \"aliqua adipisicing sint amet voluptate\"\n      ],\n      \"last_modified\": \"1960-07-13T21:16:43.080Z\",\n      \"scan_error\": \"ullamco consequat\",\n      \"permissive\": true,\n      \"blocked\": false,\n      \"blocked_by\": \"tempor aliquip nostrud et\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"anim\",\n          \"control\": \"dolore dolore incididunt\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"ea id\",\n          \"control\": \"anim Excepteur sed occa\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"pariatur elit\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"in\",\n      \"block_failed\": true,\n      \"block_failure\": \"anim do fugiat\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"cillum nostrud\",\n      \"layers_arn\": [\n        \"occaecat laborum veniam dolore\",\n        \"amet eu Duis esse\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": -74992824.95361967,\n      \"permission\": \"nisi do aliqua\",\n      \"runtime_version\": \"quis Excepteur consequat dolor eiusmod\",\n      \"runtime_language\": \"incididunt aliquip consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"anim et quis elit commodo\",\n          \"name\": \"do nostrud\",\n          \"created_date\": \"ullamco non dolore consequat magna\",\n          \"version_arn\": \"commodo eu\",\n          \"version\": 45963244.82935575\n        },\n        {\n          \"arn\": \"ipsum aute qui\",\n          \"name\": \"in voluptate laborum\",\n          \"created_date\": \"veniam laboris nostr\",\n          \"version_arn\": \"Ut\",\n          \"version\": 25212132.5305319\n        }\n      ],\n      \"role_id\": \"irure commodo eu pariatur cillum\",\n      \"role_resources\": [\n        {\n          \"name\": \"voluptate nostrud Duis\",\n          \"actions\": [\n            \"veniam ipsu\",\n            \"nostrud esse velit minim\"\n          ],\n          \"last_usage\": -66698713.04240322,\n          \"severity\": 51345193.21367636,\n          \"issue\": \"Duis qui\"\n        },\n        {\n          \"name\": \"anim ut elit\",\n          \"actions\": [\n            \"non in\",\n            \"labore non cupidatat deserunt\"\n          ],\n          \"last_usage\": -46907806.978048995,\n          \"severity\": 20130600.36707844,\n          \"issue\": \"in tempor proident Duis\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 28025573.851786405,\n      \"role_error\": \"adipisicing do elit\",\n      \"num_permissive\": -48379699.55197474,\n      \"num_unused\": -82891017.70056368,\n      \"num_known\": 25378434.536059484\n    },\n    {\n      \"function_id\": \"Duis adipisicing\",\n      \"name\": \"dolore aliquip laboris sed\",\n      \"project\": \"incididunt culpa sunt dolor anim\",\n      \"description\": \"\",\n      \"digest\": \"adipisicing dolore ut aute quis\",\n      \"crit_vulns\": 30093504.196930975,\n      \"high_vulns\": -92475279.13410583,\n      \"low_vulns\": -75986830.23516859,\n      \"neg_vulns\": -22646087.68958789,\n      \"sensitive\": 71411946.22355735,\n      \"vulns_found\": 27645946.798490778,\n      \"malware\": 36413252.71973336,\n      \"version\": \"qui sint\",\n      \"handler\": \"Ut in magna dolor\",\n      \"last_scan\": \"1964-11-03T18:20:26.099Z\",\n      \"scan_status\": \"in cupidata\",\n      \"tags\": [\n        \"adipisicing tempor nulla\",\n        \"enim amet consectetur\"\n      ],\n      \"environments\": [\n        \"aliquip laborum\",\n        \"u\"\n      ],\n      \"invocations\": 23491134.066160545,\n      \"durationsAverage\": -54440834.06237002,\n      \"triggers\": [\n        \"enim est\",\n        \"voluptate velit\"\n      ],\n      \"sensitive_environments\": [\n        \"sit et\",\n        \"cillum qui\"\n      ],\n      \"scan_warnings\": [\n        \"exercitation incididunt ex consectetur non\",\n        \"quis\"\n      ],\n      \"last_modified\": \"2001-10-02T11:02:15.203Z\",\n      \"scan_error\": \"officia dolor occaecat\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"in in in voluptate\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"commodo\",\n          \"control\": \"non proident\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"nulla officia eiusmod exercitation ex\",\n          \"control\": \"ut dolore cupidatat eiusmod\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"mollit\",\n      \"assurance_failed\": false,\n      \"assurance_failure\": \"eiusmod\",\n      \"block_failed\": true,\n      \"block_failure\": \"veniam consectetur\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"pariatur elit\",\n      \"layers_arn\": [\n        \"laborum velit veniam\",\n        \"ad ut\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": 64048364.93563527,\n      \"permission\": \"Excepteur mollit\",\n      \"runtime_version\": \"adipisicing labo\",\n      \"runtime_language\": \"nisi sunt consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"reprehenderit esse Lorem veniam sunt\",\n          \"name\": \"et velit in incididunt\",\n          \"created_date\": \"occaecat est\",\n          \"version_arn\": \"cillum sint\",\n          \"version\": -70005010.0108499\n        },\n        {\n          \"arn\": \"eu occaecat\",\n          \"name\": \"magna Excepteur cupidatat qui\",\n          \"created_date\": \"culpa magna Ut\",\n          \"version_arn\": \"enim ipsum\",\n          \"version\": -28263121.359053895\n        }\n      ],\n      \"role_id\": \"nisi proident tempor sed\",\n      \"role_resources\": [\n        {\n          \"name\": \"dolor consequat dolor magna\",\n          \"actions\": [\n            \"fugiat anim ut ullamco\",\n            \"aliquip anim in\"\n          ],\n          \"last_usage\": 58143643.95272395,\n          \"severity\": 86350401.32964137,\n          \"issue\": \"ut dolor\"\n        },\n        {\n          \"name\": \"sed culpa\",\n          \"actions\": [\n            \"quis velit\",\n            \"id aliquip est nisi\"\n          ],\n          \"last_usage\": -20835091.343184814,\n          \"severity\": 85749490.616137,\n          \"issue\": \"voluptate qui irure ipsum\"\n        }\n      ],\n      \"role_managed\": false,\n      \"role_common\": -98608919.63352132,\n      \"role_error\": \"minim enim f\",\n      \"num_permissive\": -94290771.32966155,\n      \"num_unused\": 60511659.64677483,\n      \"num_known\": -90316182.63084371\n    }\n  ],\n  \"scan_all\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project/functions",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project",
																"functions"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Internal error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"functions\": [\n    {\n      \"function_id\": \"eu sint fugiat velit\",\n      \"name\": \"aliqua\",\n      \"project\": \"est irure minim\",\n      \"description\": \"occaecat\",\n      \"digest\": \"eu exercitation officia irure adipisicing\",\n      \"crit_vulns\": -88453743.41892773,\n      \"high_vulns\": -28243462.05896093,\n      \"low_vulns\": -30059314.72876902,\n      \"neg_vulns\": 78363020.74863026,\n      \"sensitive\": 4129235.888048351,\n      \"vulns_found\": -57657440.3336346,\n      \"malware\": -18691588.447153017,\n      \"version\": \"ex consequat irure laboris proident\",\n      \"handler\": \"Lorem\",\n      \"last_scan\": \"1996-06-30T17:41:48.341Z\",\n      \"scan_status\": \"et ad laboris\",\n      \"tags\": [\n        \"eu ipsum reprehenderit\",\n        \"esse in laboris voluptate id\"\n      ],\n      \"environments\": [\n        \"ea Lorem occaecat aliquip\",\n        \"sint dolor ut\"\n      ],\n      \"invocations\": -61509788.17278539,\n      \"durationsAverage\": 94079021.02912673,\n      \"triggers\": [\n        \"magna sed\",\n        \"amet sed aliquip aute\"\n      ],\n      \"sensitive_environments\": [\n        \"ut Ut\",\n        \"sit officia cupidatat\"\n      ],\n      \"scan_warnings\": [\n        \"est dolor officia cillum\",\n        \"aliqua adipisicing sint amet voluptate\"\n      ],\n      \"last_modified\": \"1960-07-13T21:16:43.080Z\",\n      \"scan_error\": \"ullamco consequat\",\n      \"permissive\": true,\n      \"blocked\": false,\n      \"blocked_by\": \"tempor aliquip nostrud et\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"anim\",\n          \"control\": \"dolore dolore incididunt\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"ea id\",\n          \"control\": \"anim Excepteur sed occa\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"pariatur elit\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"in\",\n      \"block_failed\": true,\n      \"block_failure\": \"anim do fugiat\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"cillum nostrud\",\n      \"layers_arn\": [\n        \"occaecat laborum veniam dolore\",\n        \"amet eu Duis esse\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": -74992824.95361967,\n      \"permission\": \"nisi do aliqua\",\n      \"runtime_version\": \"quis Excepteur consequat dolor eiusmod\",\n      \"runtime_language\": \"incididunt aliquip consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"anim et quis elit commodo\",\n          \"name\": \"do nostrud\",\n          \"created_date\": \"ullamco non dolore consequat magna\",\n          \"version_arn\": \"commodo eu\",\n          \"version\": 45963244.82935575\n        },\n        {\n          \"arn\": \"ipsum aute qui\",\n          \"name\": \"in voluptate laborum\",\n          \"created_date\": \"veniam laboris nostr\",\n          \"version_arn\": \"Ut\",\n          \"version\": 25212132.5305319\n        }\n      ],\n      \"role_id\": \"irure commodo eu pariatur cillum\",\n      \"role_resources\": [\n        {\n          \"name\": \"voluptate nostrud Duis\",\n          \"actions\": [\n            \"veniam ipsu\",\n            \"nostrud esse velit minim\"\n          ],\n          \"last_usage\": -66698713.04240322,\n          \"severity\": 51345193.21367636,\n          \"issue\": \"Duis qui\"\n        },\n        {\n          \"name\": \"anim ut elit\",\n          \"actions\": [\n            \"non in\",\n            \"labore non cupidatat deserunt\"\n          ],\n          \"last_usage\": -46907806.978048995,\n          \"severity\": 20130600.36707844,\n          \"issue\": \"in tempor proident Duis\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 28025573.851786405,\n      \"role_error\": \"adipisicing do elit\",\n      \"num_permissive\": -48379699.55197474,\n      \"num_unused\": -82891017.70056368,\n      \"num_known\": 25378434.536059484\n    },\n    {\n      \"function_id\": \"Duis adipisicing\",\n      \"name\": \"dolore aliquip laboris sed\",\n      \"project\": \"incididunt culpa sunt dolor anim\",\n      \"description\": \"\",\n      \"digest\": \"adipisicing dolore ut aute quis\",\n      \"crit_vulns\": 30093504.196930975,\n      \"high_vulns\": -92475279.13410583,\n      \"low_vulns\": -75986830.23516859,\n      \"neg_vulns\": -22646087.68958789,\n      \"sensitive\": 71411946.22355735,\n      \"vulns_found\": 27645946.798490778,\n      \"malware\": 36413252.71973336,\n      \"version\": \"qui sint\",\n      \"handler\": \"Ut in magna dolor\",\n      \"last_scan\": \"1964-11-03T18:20:26.099Z\",\n      \"scan_status\": \"in cupidata\",\n      \"tags\": [\n        \"adipisicing tempor nulla\",\n        \"enim amet consectetur\"\n      ],\n      \"environments\": [\n        \"aliquip laborum\",\n        \"u\"\n      ],\n      \"invocations\": 23491134.066160545,\n      \"durationsAverage\": -54440834.06237002,\n      \"triggers\": [\n        \"enim est\",\n        \"voluptate velit\"\n      ],\n      \"sensitive_environments\": [\n        \"sit et\",\n        \"cillum qui\"\n      ],\n      \"scan_warnings\": [\n        \"exercitation incididunt ex consectetur non\",\n        \"quis\"\n      ],\n      \"last_modified\": \"2001-10-02T11:02:15.203Z\",\n      \"scan_error\": \"officia dolor occaecat\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"in in in voluptate\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"commodo\",\n          \"control\": \"non proident\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"nulla officia eiusmod exercitation ex\",\n          \"control\": \"ut dolore cupidatat eiusmod\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"mollit\",\n      \"assurance_failed\": false,\n      \"assurance_failure\": \"eiusmod\",\n      \"block_failed\": true,\n      \"block_failure\": \"veniam consectetur\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"pariatur elit\",\n      \"layers_arn\": [\n        \"laborum velit veniam\",\n        \"ad ut\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": 64048364.93563527,\n      \"permission\": \"Excepteur mollit\",\n      \"runtime_version\": \"adipisicing labo\",\n      \"runtime_language\": \"nisi sunt consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"reprehenderit esse Lorem veniam sunt\",\n          \"name\": \"et velit in incididunt\",\n          \"created_date\": \"occaecat est\",\n          \"version_arn\": \"cillum sint\",\n          \"version\": -70005010.0108499\n        },\n        {\n          \"arn\": \"eu occaecat\",\n          \"name\": \"magna Excepteur cupidatat qui\",\n          \"created_date\": \"culpa magna Ut\",\n          \"version_arn\": \"enim ipsum\",\n          \"version\": -28263121.359053895\n        }\n      ],\n      \"role_id\": \"nisi proident tempor sed\",\n      \"role_resources\": [\n        {\n          \"name\": \"dolor consequat dolor magna\",\n          \"actions\": [\n            \"fugiat anim ut ullamco\",\n            \"aliquip anim in\"\n          ],\n          \"last_usage\": 58143643.95272395,\n          \"severity\": 86350401.32964137,\n          \"issue\": \"ut dolor\"\n        },\n        {\n          \"name\": \"sed culpa\",\n          \"actions\": [\n            \"quis velit\",\n            \"id aliquip est nisi\"\n          ],\n          \"last_usage\": -20835091.343184814,\n          \"severity\": 85749490.616137,\n          \"issue\": \"voluptate qui irure ipsum\"\n        }\n      ],\n      \"role_managed\": false,\n      \"role_common\": -98608919.63352132,\n      \"role_error\": \"minim enim f\",\n      \"num_permissive\": -94290771.32966155,\n      \"num_unused\": 60511659.64677483,\n      \"num_known\": -90316182.63084371\n    }\n  ],\n  \"scan_all\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project/functions",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project",
																"functions"
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "Search functions in serverless application",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects/:project/search_functions",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects",
														":project",
														"search_functions"
													],
													"query": [
														{
															"key": "search",
															"value": "cillum exercitation",
															"description": "List functions that match the search string",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "project",
															"value": "cillum exercitation",
															"description": "(Required) Project name"
														}
													]
												},
												"description": "Search for functions in a serverless application, filtered by a search string"
											},
											"response": [
												{
													"name": "Serverless functions were successfully found on the serverless application",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project/search_functions?search=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project",
																"search_functions"
															],
															"query": [
																{
																	"key": "search",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"name\": \"sit eiusmod sed veniam\",\n    \"description\": \"esse aliqua irure\",\n    \"version\": \"voluptate dolor qui\",\n    \"runtime\": {\n      \"runtime_version\": \"in incididunt Duis est in\",\n      \"runtime_language\": \"esse aliquip sed labore\"\n    },\n    \"location\": \"sunt in magna mollit\",\n    \"handler\": \"veniam aliqua aliquip consequat mollit\",\n    \"metadata\": {\n      \"tags\": [\n        \"irure ut consectetur \",\n        \"incididunt minim et sunt\"\n      ],\n      \"role\": {\n        \"role_id\": \"cupidatat est\",\n        \"role_resources\": [\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"actions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"last_usage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"severity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"issue\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"actions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"last_usage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"severity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"issue\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"role_managed\": true,\n        \"role_error\": \"labore sunt in\"\n      },\n      \"environments\": [\n        \"nisi in ex\",\n        \"veniam elit\"\n      ],\n      \"sensitive_environments\": [\n        \"occaecat\",\n        \"mollit incididunt \"\n      ],\n      \"layers\": [\n        {\n          \"arn\": \"in fugiat c\",\n          \"name\": \"laborum ea aliquip\",\n          \"created_date\": \"sed\",\n          \"version_arn\": \"anim\",\n          \"version\": 10991892.803474411\n        },\n        {\n          \"arn\": \"in veniam\",\n          \"name\": \"ipsum tempor sint incididunt\",\n          \"created_date\": \"anim sed\",\n          \"version_arn\": \"sunt proident\",\n          \"version\": 13717370.674336672\n        }\n      ],\n      \"triggers\": [\n        \"minim proident consequat cillum sed\",\n        \"id qui consequat Exce\"\n      ],\n      \"invocations\": 20506813.48481506,\n      \"durationsAverage\": 32227938.803838715\n    },\n    \"scan_warnings\": [\n      \"ipsum est exercitation pariatur\",\n      \"cupidatat enim laboris adipisicing\"\n    ],\n    \"last_modified\": \"1987-08-16T07:34:18.114Z\",\n    \"digest\": \"qui\",\n    \"concurrency\": {\n      \"unreserved\": true,\n      \"enabled\": 35530070.86837435,\n      \"reserve\": 37997775.54617041\n    },\n    \"permission\": \"n\",\n    \"project\": \"aute\"\n  },\n  {\n    \"name\": \"ea\",\n    \"description\": \"exercitation est nulla nisi\",\n    \"version\": \"veniam sint enim\",\n    \"runtime\": {\n      \"runtime_version\": \"ut irure\",\n      \"runtime_language\": \"aliquip esse in dolor\"\n    },\n    \"location\": \"labore tempor officia\",\n    \"handler\": \"fugiat aliqua proident in\",\n    \"metadata\": {\n      \"tags\": [\n        \"velit sunt sint nostrud\",\n        \"consectetur laboris esse et\"\n      ],\n      \"role\": {\n        \"role_id\": \"dolore \",\n        \"role_resources\": [\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"actions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"last_usage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"severity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"issue\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"actions\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"last_usage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"severity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"issue\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"role_managed\": true,\n        \"role_error\": \"qui sed in consectetur ea\"\n      },\n      \"environments\": [\n        \"eu cupidatat voluptate\",\n        \"ex ea ut esse sit\"\n      ],\n      \"sensitive_environments\": [\n        \"fugiat enim\",\n        \"elit adipisicing in\"\n      ],\n      \"layers\": [\n        {\n          \"arn\": \"est sunt\",\n          \"name\": \"in dolore nostrud deserunt\",\n          \"created_date\": \"commodo magna aliqua nulla\",\n          \"version_arn\": \"adipisicing ea\",\n          \"version\": 38156817.82599172\n        },\n        {\n          \"arn\": \"id consectetur\",\n          \"name\": \"ut incididunt consequat nisi\",\n          \"created_date\": \"labore aliquip\",\n          \"version_arn\": \"adipisicing ipsum\",\n          \"version\": 87698997.15743273\n        }\n      ],\n      \"triggers\": [\n        \"Lorem cupidatat laborum reprehenderit\",\n        \"aut\"\n      ],\n      \"invocations\": -82362414.05696213,\n      \"durationsAverage\": 47846448.41939089\n    },\n    \"scan_warnings\": [\n      \"tempor qui sunt\",\n      \"sunt \"\n    ],\n    \"last_modified\": \"2021-04-09T03:15:01.231Z\",\n    \"digest\": \"qui exercitation nulla magna\",\n    \"concurrency\": {\n      \"unreserved\": false,\n      \"enabled\": -22942898.013048425,\n      \"reserve\": -2271671.0172486603\n    },\n    \"permission\": \"esse ea\",\n    \"project\": \"voluptate dolor mollit incididunt cupidatat\"\n  }\n]"
												},
												{
													"name": "Input error - correct before resubmitting",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project/search_functions?search=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project",
																"search_functions"
															],
															"query": [
																{
																	"key": "search",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Internal error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/serverless/projects/:project/search_functions?search=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"serverless",
																"projects",
																":project",
																"search_functions"
															],
															"query": [
																{
																	"key": "search",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "project",
																	"value": "cillum exercitation",
																	"description": "(Required) Project name"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get serverless applications",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/serverless/projects",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"serverless",
												"projects"
											]
										},
										"description": "Get all serverless applications"
									},
									"response": [
										{
											"name": "Serverless applications listed successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"username\": \"aliqua consectetur deserunt\",\n    \"password\": \"anim magna\",\n    \"subscription_id\": \"eiusmod adipi\",\n    \"tenant_id\": \"nulla do amet cillum\",\n    \"cloud_project\": \"velit aliqua\",\n    \"external_id\": \"sunt ex\",\n    \"name\": \"quis ipsum\",\n    \"description\": \"dolor a\",\n    \"region\": \"elit ad non ex\",\n    \"compute_provider_type\": -84174335,\n    \"author\": \"tempor i\",\n    \"last_update\": -68509349,\n    \"pull_tag_patterns\": [\n      \"exercitation\",\n      \"do dolore consequat\"\n    ],\n    \"pull_tag_patterns_excluded\": [\n      \"Lorem ex\",\n      \"quis minim elit\"\n    ],\n    \"auto_pull\": true,\n    \"auto_pull_time\": \"commodo Lorem amet ex\",\n    \"sqs_url\": \"Excepteur anim esse aute\"\n  },\n  {\n    \"username\": \"qui Lorem ut esse\",\n    \"password\": \"nulla est sint\",\n    \"subscription_id\": \"amet\",\n    \"tenant_id\": \"eiusmod sit Lorem est elit\",\n    \"cloud_project\": \"reprehenderit dolor\",\n    \"external_id\": \"ipsum dolor Duis\",\n    \"name\": \"culpa eiusmod proident est\",\n    \"description\": \"non consequat elit ex\",\n    \"region\": \"aliqua veniam irure incididunt velit\",\n    \"compute_provider_type\": 68222131,\n    \"author\": \"eiusmod veniam minim enim\",\n    \"last_update\": 33982706,\n    \"pull_tag_patterns\": [\n      \"irure\",\n      \"in occaecat fugiat\"\n    ],\n    \"pull_tag_patterns_excluded\": [\n      \"ad id sunt\",\n      \"consequat voluptate pariatur\"\n    ],\n    \"auto_pull\": false,\n    \"auto_pull_time\": \"ipsum\",\n    \"sqs_url\": \"fu\"\n  }\n]"
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Create serverless application",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/serverless/projects",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"serverless",
												"projects"
											]
										},
										"description": "Create a serverless application"
									},
									"response": [
										{
											"name": "Serverless application created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Verify serverless application connection",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/serverless/projects/test_connection",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"serverless",
												"projects",
												"test_connection"
											]
										},
										"description": "Check serverless application connection and permission verification with cloud provider"
									},
									"response": [
										{
											"name": "Serverless application connection verified successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects/test_connection",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects",
														"test_connection"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects/test_connection",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects",
														"test_connection"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"ut non aute laborum labore\",\n  \"password\": \"ex ullamco minim laborum\",\n  \"subscription_id\": \"incididunt laboris non\",\n  \"tenant_id\": \"et mollit non exercitation quis\",\n  \"cloud_project\": \"velit occaeca\",\n  \"external_id\": \"enim non sed\",\n  \"name\": \"laborum cillum occaecat anim\",\n  \"description\": \"deserunt ex\",\n  \"region\": \"anim Ut\",\n  \"compute_provider_type\": -38860310,\n  \"author\": \"voluptate qui\",\n  \"last_update\": -13494129,\n  \"pull_tag_patterns\": [\n    \"labore culpa enim irure\",\n    \"enim minim tempor\"\n  ],\n  \"pull_tag_patterns_excluded\": [\n    \"con\",\n    \"elit laboris ea ad quis\"\n  ],\n  \"auto_pull\": true,\n  \"auto_pull_time\": \"comm\",\n  \"sqs_url\": \"velit eiusmod\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/projects/test_connection",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"projects",
														"test_connection"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "functions",
							"item": [
								{
									"name": "Get all serverless functions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/serverless/functions",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"serverless",
												"functions"
											],
											"query": [
												{
													"key": "order_by",
													"value": "cillum exercitation",
													"description": "Set ordering of results",
													"disabled": true
												},
												{
													"key": "search",
													"value": "cillum exercitation",
													"description": "List functions that match the search string",
													"disabled": true
												},
												{
													"key": "provider",
													"value": "cillum exercitation",
													"description": "List functions according to the specified provider",
													"disabled": true
												},
												{
													"key": "region",
													"value": "cillum exercitation",
													"description": "List functions according to the specified region",
													"disabled": true
												},
												{
													"key": "projectName",
													"value": "cillum exercitation",
													"description": "List functions according to the specified project",
													"disabled": true
												}
											]
										},
										"description": "Get all serverless functions"
									},
									"response": [
										{
											"name": "Serverless functions listed successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions?order_by=cillum exercitation&search=cillum exercitation&provider=cillum exercitation&region=cillum exercitation&projectName=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions"
													],
													"query": [
														{
															"key": "order_by",
															"value": "cillum exercitation"
														},
														{
															"key": "search",
															"value": "cillum exercitation"
														},
														{
															"key": "provider",
															"value": "cillum exercitation"
														},
														{
															"key": "region",
															"value": "cillum exercitation"
														},
														{
															"key": "projectName",
															"value": "cillum exercitation"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"function_id\": \"est dolor elit quis\",\n    \"name\": \"culpa nulla\",\n    \"project\": \"elit\",\n    \"description\": \"ea officia adipisicing\",\n    \"digest\": \"exercitation\",\n    \"crit_vulns\": 87951519.97847208,\n    \"high_vulns\": 67822995.34990561,\n    \"low_vulns\": -5528820.7444971055,\n    \"neg_vulns\": 55233152.04273209,\n    \"sensitive\": 80854954.1789001,\n    \"vulns_found\": -38830545.77736864,\n    \"malware\": -64888355.63194737,\n    \"version\": \"commodo\",\n    \"handler\": \"qui nisi Excepteur Ut ut\",\n    \"last_scan\": \"1981-08-08T09:38:54.919Z\",\n    \"scan_status\": \"voluptate ut velit cupidatat\",\n    \"tags\": [\n      \"aliquip ea\",\n      \"ex\"\n    ],\n    \"environments\": [\n      \"quis culpa reprehenderit\",\n      \"enim reprehenderit ullamco\"\n    ],\n    \"invocations\": -42975638.11179845,\n    \"durationsAverage\": 44723251.23669031,\n    \"triggers\": [\n      \"pariatur consequat elit\",\n      \"reprehenderit qui\"\n    ],\n    \"sensitive_environments\": [\n      \"minim Duis\",\n      \"reprehenderit sint aliqua pariatur culpa\"\n    ],\n    \"scan_warnings\": [\n      \"eiusmod cillum sint ut in\",\n      \"adipisicing amet cillum\"\n    ],\n    \"last_modified\": \"2000-12-20T00:48:22.280Z\",\n    \"scan_error\": \"ut eiusmod sed\",\n    \"permissive\": false,\n    \"blocked\": true,\n    \"blocked_by\": \"deserunt quis amet do\",\n    \"disallowed\": false,\n    \"have_assurance_policy\": [\n      {\n        \"policy_name\": \"tempor sit ea nisi eu\",\n        \"control\": \"id ex\",\n        \"failed\": false\n      },\n      {\n        \"policy_name\": \"aliqua deserunt\",\n        \"control\": \"aliquip cillum dolor nostrud\",\n        \"failed\": true\n      }\n    ],\n    \"assurance_results\": \"non\",\n    \"assurance_failed\": false,\n    \"assurance_failure\": \"occaecat do\",\n    \"block_failed\": true,\n    \"block_failure\": \"sint quis Duis\",\n    \"unblock_failed\": false,\n    \"unblock_failure\": \"dolore eiusmod sint\",\n    \"layers_arn\": [\n      \"cupidatat cillum quis sit\",\n      \"adipisicing do dolor non\"\n    ],\n    \"concurrency_enabled\": false,\n    \"concurrency_reserve\": 22119118.30212742,\n    \"permission\": \"reprehenderit dolor\",\n    \"runtime_version\": \"esse sit aliqua incididunt\",\n    \"runtime_language\": \"elit velit qui labore irure\",\n    \"layers\": [\n      {\n        \"arn\": \"consequat\",\n        \"name\": \"sunt exercitation Duis nulla\",\n        \"created_date\": \"ex ipsum do\",\n        \"version_arn\": \"ex ut mollit ut\",\n        \"version\": -36617689.43381629\n      },\n      {\n        \"arn\": \"exercitation\",\n        \"name\": \"irure reprehenderit proident occaecat\",\n        \"created_date\": \"sint\",\n        \"version_arn\": \"dolore tempor veniam ullamco\",\n        \"version\": 5063760.206174269\n      }\n    ],\n    \"role_id\": \"elit deserunt labore ipsum\",\n    \"role_resources\": [\n      {\n        \"name\": \"sed amet\",\n        \"actions\": [\n          \"aliquip laboris\",\n          \"eiusmod cupidatat Lorem officia aliqua\"\n        ],\n        \"last_usage\": -21794335.610365316,\n        \"severity\": 22894562.867312953,\n        \"issue\": \"in te\"\n      },\n      {\n        \"name\": \"ipsum fugiat\",\n        \"actions\": [\n          \"in n\",\n          \"cillum nulla irure\"\n        ],\n        \"last_usage\": 17311299.65110299,\n        \"severity\": 9276626.65122822,\n        \"issue\": \"magna consectetur nisi\"\n      }\n    ],\n    \"role_managed\": false,\n    \"role_common\": 71898713.82203639,\n    \"role_error\": \"consequat velit\",\n    \"num_permissive\": -45713094.09122346,\n    \"num_unused\": -45944827.66690935,\n    \"num_known\": 89474416.06432247\n  },\n  {\n    \"function_id\": \"elit non ad culpa\",\n    \"name\": \"exercitation velit\",\n    \"project\": \"et velit dolor fugiat magna\",\n    \"description\": \"fugiat nostrud est\",\n    \"digest\": \"consequat ea ut\",\n    \"crit_vulns\": 68796986.48026156,\n    \"high_vulns\": 42611518.29743031,\n    \"low_vulns\": 54611485.754472345,\n    \"neg_vulns\": 56252045.21745336,\n    \"sensitive\": -71437078.8008449,\n    \"vulns_found\": -83673387.10086818,\n    \"malware\": 15494750.33926399,\n    \"version\": \"enim tempor aliquip\",\n    \"handler\": \"ex et\",\n    \"last_scan\": \"1992-03-13T09:00:32.871Z\",\n    \"scan_status\": \"Lorem qui\",\n    \"tags\": [\n      \"ipsum aliqua\",\n      \"Ut elit\"\n    ],\n    \"environments\": [\n      \"ea non irure\",\n      \"sint qui\"\n    ],\n    \"invocations\": 24657544.73134774,\n    \"durationsAverage\": -73955222.69673723,\n    \"triggers\": [\n      \"reprehenderit eiusmod\",\n      \"et exerc\"\n    ],\n    \"sensitive_environments\": [\n      \"in ipsum culpa\",\n      \"magna in qui fugiat esse\"\n    ],\n    \"scan_warnings\": [\n      \"Excepteur incididunt irure\",\n      \"s\"\n    ],\n    \"last_modified\": \"2000-10-14T07:13:34.330Z\",\n    \"scan_error\": \"dolore\",\n    \"permissive\": false,\n    \"blocked\": false,\n    \"blocked_by\": \"dolore nulla ullamco aliquip\",\n    \"disallowed\": true,\n    \"have_assurance_policy\": [\n      {\n        \"policy_name\": \"voluptate commodo v\",\n        \"control\": \"cillum occaecat in\",\n        \"failed\": true\n      },\n      {\n        \"policy_name\": \"mollit laboris non\",\n        \"control\": \"fugiat enim\",\n        \"failed\": true\n      }\n    ],\n    \"assurance_results\": \"dolore conse\",\n    \"assurance_failed\": false,\n    \"assurance_failure\": \"et Lorem\",\n    \"block_failed\": false,\n    \"block_failure\": \"ut in Ut\",\n    \"unblock_failed\": false,\n    \"unblock_failure\": \"Ut deserunt et in\",\n    \"layers_arn\": [\n      \"cupidatat commodo eiusmod qui Ut\",\n      \"ea sed aliqua tempor\"\n    ],\n    \"concurrency_enabled\": true,\n    \"concurrency_reserve\": 90556628.73708278,\n    \"permission\": \"nostrud dolor ut\",\n    \"runtime_version\": \"ex anim\",\n    \"runtime_language\": \"amet proident\",\n    \"layers\": [\n      {\n        \"arn\": \"ea commodo id\",\n        \"name\": \"Duis\",\n        \"created_date\": \"dolor quis\",\n        \"version_arn\": \"et sunt sed Lorem\",\n        \"version\": -17154154.546207726\n      },\n      {\n        \"arn\": \"dolore dolor fugiat magna\",\n        \"name\": \"commodo\",\n        \"created_date\": \"labore deserunt fugiat\",\n        \"version_arn\": \"exercitation adipisicing\",\n        \"version\": 89628617.31546506\n      }\n    ],\n    \"role_id\": \"dolore in fugiat\",\n    \"role_resources\": [\n      {\n        \"name\": \"ad laboris do\",\n        \"actions\": [\n          \"aliquip Ut sit deserunt\",\n          \"qui in\"\n        ],\n        \"last_usage\": 18725879.69182895,\n        \"severity\": 86322519.17932138,\n        \"issue\": \"ut magna\"\n      },\n      {\n        \"name\": \"laborum deserun\",\n        \"actions\": [\n          \"do exercitation occaecat minim\",\n          \"sint fug\"\n        ],\n        \"last_usage\": 33260483.565492153,\n        \"severity\": 81457307.18213806,\n        \"issue\": \"adipisicing irure id\"\n      }\n    ],\n    \"role_managed\": true,\n    \"role_common\": -17766992.60559593,\n    \"role_error\": \"adipisicing laboris mag\",\n    \"num_permissive\": 27675791.784753695,\n    \"num_unused\": -79634839.84593682,\n    \"num_known\": -51909959.24462367\n  }\n]"
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions?order_by=cillum exercitation&search=cillum exercitation&provider=cillum exercitation&region=cillum exercitation&projectName=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions"
													],
													"query": [
														{
															"key": "order_by",
															"value": "cillum exercitation"
														},
														{
															"key": "search",
															"value": "cillum exercitation"
														},
														{
															"key": "provider",
															"value": "cillum exercitation"
														},
														{
															"key": "region",
															"value": "cillum exercitation"
														},
														{
															"key": "projectName",
															"value": "cillum exercitation"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions?order_by=cillum exercitation&search=cillum exercitation&provider=cillum exercitation&region=cillum exercitation&projectName=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions"
													],
													"query": [
														{
															"key": "order_by",
															"value": "cillum exercitation"
														},
														{
															"key": "search",
															"value": "cillum exercitation"
														},
														{
															"key": "provider",
															"value": "cillum exercitation"
														},
														{
															"key": "region",
															"value": "cillum exercitation"
														},
														{
															"key": "projectName",
															"value": "cillum exercitation"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Re-scan serverless functions",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"functions\": [\n    {\n      \"function_id\": \"eu sint fugiat velit\",\n      \"name\": \"aliqua\",\n      \"project\": \"est irure minim\",\n      \"description\": \"occaecat\",\n      \"digest\": \"eu exercitation officia irure adipisicing\",\n      \"crit_vulns\": -88453743.41892773,\n      \"high_vulns\": -28243462.05896093,\n      \"low_vulns\": -30059314.72876902,\n      \"neg_vulns\": 78363020.74863026,\n      \"sensitive\": 4129235.888048351,\n      \"vulns_found\": -57657440.3336346,\n      \"malware\": -18691588.447153017,\n      \"version\": \"ex consequat irure laboris proident\",\n      \"handler\": \"Lorem\",\n      \"last_scan\": \"1996-06-30T17:41:48.341Z\",\n      \"scan_status\": \"et ad laboris\",\n      \"tags\": [\n        \"eu ipsum reprehenderit\",\n        \"esse in laboris voluptate id\"\n      ],\n      \"environments\": [\n        \"ea Lorem occaecat aliquip\",\n        \"sint dolor ut\"\n      ],\n      \"invocations\": -61509788.17278539,\n      \"durationsAverage\": 94079021.02912673,\n      \"triggers\": [\n        \"magna sed\",\n        \"amet sed aliquip aute\"\n      ],\n      \"sensitive_environments\": [\n        \"ut Ut\",\n        \"sit officia cupidatat\"\n      ],\n      \"scan_warnings\": [\n        \"est dolor officia cillum\",\n        \"aliqua adipisicing sint amet voluptate\"\n      ],\n      \"last_modified\": \"1960-07-13T21:16:43.080Z\",\n      \"scan_error\": \"ullamco consequat\",\n      \"permissive\": true,\n      \"blocked\": false,\n      \"blocked_by\": \"tempor aliquip nostrud et\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"anim\",\n          \"control\": \"dolore dolore incididunt\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"ea id\",\n          \"control\": \"anim Excepteur sed occa\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"pariatur elit\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"in\",\n      \"block_failed\": true,\n      \"block_failure\": \"anim do fugiat\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"cillum nostrud\",\n      \"layers_arn\": [\n        \"occaecat laborum veniam dolore\",\n        \"amet eu Duis esse\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": -74992824.95361967,\n      \"permission\": \"nisi do aliqua\",\n      \"runtime_version\": \"quis Excepteur consequat dolor eiusmod\",\n      \"runtime_language\": \"incididunt aliquip consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"anim et quis elit commodo\",\n          \"name\": \"do nostrud\",\n          \"created_date\": \"ullamco non dolore consequat magna\",\n          \"version_arn\": \"commodo eu\",\n          \"version\": 45963244.82935575\n        },\n        {\n          \"arn\": \"ipsum aute qui\",\n          \"name\": \"in voluptate laborum\",\n          \"created_date\": \"veniam laboris nostr\",\n          \"version_arn\": \"Ut\",\n          \"version\": 25212132.5305319\n        }\n      ],\n      \"role_id\": \"irure commodo eu pariatur cillum\",\n      \"role_resources\": [\n        {\n          \"name\": \"voluptate nostrud Duis\",\n          \"actions\": [\n            \"veniam ipsu\",\n            \"nostrud esse velit minim\"\n          ],\n          \"last_usage\": -66698713.04240322,\n          \"severity\": 51345193.21367636,\n          \"issue\": \"Duis qui\"\n        },\n        {\n          \"name\": \"anim ut elit\",\n          \"actions\": [\n            \"non in\",\n            \"labore non cupidatat deserunt\"\n          ],\n          \"last_usage\": -46907806.978048995,\n          \"severity\": 20130600.36707844,\n          \"issue\": \"in tempor proident Duis\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 28025573.851786405,\n      \"role_error\": \"adipisicing do elit\",\n      \"num_permissive\": -48379699.55197474,\n      \"num_unused\": -82891017.70056368,\n      \"num_known\": 25378434.536059484\n    },\n    {\n      \"function_id\": \"Duis adipisicing\",\n      \"name\": \"dolore aliquip laboris sed\",\n      \"project\": \"incididunt culpa sunt dolor anim\",\n      \"description\": \"\",\n      \"digest\": \"adipisicing dolore ut aute quis\",\n      \"crit_vulns\": 30093504.196930975,\n      \"high_vulns\": -92475279.13410583,\n      \"low_vulns\": -75986830.23516859,\n      \"neg_vulns\": -22646087.68958789,\n      \"sensitive\": 71411946.22355735,\n      \"vulns_found\": 27645946.798490778,\n      \"malware\": 36413252.71973336,\n      \"version\": \"qui sint\",\n      \"handler\": \"Ut in magna dolor\",\n      \"last_scan\": \"1964-11-03T18:20:26.099Z\",\n      \"scan_status\": \"in cupidata\",\n      \"tags\": [\n        \"adipisicing tempor nulla\",\n        \"enim amet consectetur\"\n      ],\n      \"environments\": [\n        \"aliquip laborum\",\n        \"u\"\n      ],\n      \"invocations\": 23491134.066160545,\n      \"durationsAverage\": -54440834.06237002,\n      \"triggers\": [\n        \"enim est\",\n        \"voluptate velit\"\n      ],\n      \"sensitive_environments\": [\n        \"sit et\",\n        \"cillum qui\"\n      ],\n      \"scan_warnings\": [\n        \"exercitation incididunt ex consectetur non\",\n        \"quis\"\n      ],\n      \"last_modified\": \"2001-10-02T11:02:15.203Z\",\n      \"scan_error\": \"officia dolor occaecat\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"in in in voluptate\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"commodo\",\n          \"control\": \"non proident\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"nulla officia eiusmod exercitation ex\",\n          \"control\": \"ut dolore cupidatat eiusmod\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"mollit\",\n      \"assurance_failed\": false,\n      \"assurance_failure\": \"eiusmod\",\n      \"block_failed\": true,\n      \"block_failure\": \"veniam consectetur\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"pariatur elit\",\n      \"layers_arn\": [\n        \"laborum velit veniam\",\n        \"ad ut\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": 64048364.93563527,\n      \"permission\": \"Excepteur mollit\",\n      \"runtime_version\": \"adipisicing labo\",\n      \"runtime_language\": \"nisi sunt consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"reprehenderit esse Lorem veniam sunt\",\n          \"name\": \"et velit in incididunt\",\n          \"created_date\": \"occaecat est\",\n          \"version_arn\": \"cillum sint\",\n          \"version\": -70005010.0108499\n        },\n        {\n          \"arn\": \"eu occaecat\",\n          \"name\": \"magna Excepteur cupidatat qui\",\n          \"created_date\": \"culpa magna Ut\",\n          \"version_arn\": \"enim ipsum\",\n          \"version\": -28263121.359053895\n        }\n      ],\n      \"role_id\": \"nisi proident tempor sed\",\n      \"role_resources\": [\n        {\n          \"name\": \"dolor consequat dolor magna\",\n          \"actions\": [\n            \"fugiat anim ut ullamco\",\n            \"aliquip anim in\"\n          ],\n          \"last_usage\": 58143643.95272395,\n          \"severity\": 86350401.32964137,\n          \"issue\": \"ut dolor\"\n        },\n        {\n          \"name\": \"sed culpa\",\n          \"actions\": [\n            \"quis velit\",\n            \"id aliquip est nisi\"\n          ],\n          \"last_usage\": -20835091.343184814,\n          \"severity\": 85749490.616137,\n          \"issue\": \"voluptate qui irure ipsum\"\n        }\n      ],\n      \"role_managed\": false,\n      \"role_common\": -98608919.63352132,\n      \"role_error\": \"minim enim f\",\n      \"num_permissive\": -94290771.32966155,\n      \"num_unused\": 60511659.64677483,\n      \"num_known\": -90316182.63084371\n    }\n  ],\n  \"scan_all\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/serverless/functions/rescan",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"serverless",
												"functions",
												"rescan"
											]
										},
										"description": "Re-scan serverless functions"
									},
									"response": [
										{
											"name": "Serverless functions were successfully sent for re-scanning",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"functions\": [\n    {\n      \"function_id\": \"eu sint fugiat velit\",\n      \"name\": \"aliqua\",\n      \"project\": \"est irure minim\",\n      \"description\": \"occaecat\",\n      \"digest\": \"eu exercitation officia irure adipisicing\",\n      \"crit_vulns\": -88453743.41892773,\n      \"high_vulns\": -28243462.05896093,\n      \"low_vulns\": -30059314.72876902,\n      \"neg_vulns\": 78363020.74863026,\n      \"sensitive\": 4129235.888048351,\n      \"vulns_found\": -57657440.3336346,\n      \"malware\": -18691588.447153017,\n      \"version\": \"ex consequat irure laboris proident\",\n      \"handler\": \"Lorem\",\n      \"last_scan\": \"1996-06-30T17:41:48.341Z\",\n      \"scan_status\": \"et ad laboris\",\n      \"tags\": [\n        \"eu ipsum reprehenderit\",\n        \"esse in laboris voluptate id\"\n      ],\n      \"environments\": [\n        \"ea Lorem occaecat aliquip\",\n        \"sint dolor ut\"\n      ],\n      \"invocations\": -61509788.17278539,\n      \"durationsAverage\": 94079021.02912673,\n      \"triggers\": [\n        \"magna sed\",\n        \"amet sed aliquip aute\"\n      ],\n      \"sensitive_environments\": [\n        \"ut Ut\",\n        \"sit officia cupidatat\"\n      ],\n      \"scan_warnings\": [\n        \"est dolor officia cillum\",\n        \"aliqua adipisicing sint amet voluptate\"\n      ],\n      \"last_modified\": \"1960-07-13T21:16:43.080Z\",\n      \"scan_error\": \"ullamco consequat\",\n      \"permissive\": true,\n      \"blocked\": false,\n      \"blocked_by\": \"tempor aliquip nostrud et\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"anim\",\n          \"control\": \"dolore dolore incididunt\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"ea id\",\n          \"control\": \"anim Excepteur sed occa\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"pariatur elit\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"in\",\n      \"block_failed\": true,\n      \"block_failure\": \"anim do fugiat\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"cillum nostrud\",\n      \"layers_arn\": [\n        \"occaecat laborum veniam dolore\",\n        \"amet eu Duis esse\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": -74992824.95361967,\n      \"permission\": \"nisi do aliqua\",\n      \"runtime_version\": \"quis Excepteur consequat dolor eiusmod\",\n      \"runtime_language\": \"incididunt aliquip consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"anim et quis elit commodo\",\n          \"name\": \"do nostrud\",\n          \"created_date\": \"ullamco non dolore consequat magna\",\n          \"version_arn\": \"commodo eu\",\n          \"version\": 45963244.82935575\n        },\n        {\n          \"arn\": \"ipsum aute qui\",\n          \"name\": \"in voluptate laborum\",\n          \"created_date\": \"veniam laboris nostr\",\n          \"version_arn\": \"Ut\",\n          \"version\": 25212132.5305319\n        }\n      ],\n      \"role_id\": \"irure commodo eu pariatur cillum\",\n      \"role_resources\": [\n        {\n          \"name\": \"voluptate nostrud Duis\",\n          \"actions\": [\n            \"veniam ipsu\",\n            \"nostrud esse velit minim\"\n          ],\n          \"last_usage\": -66698713.04240322,\n          \"severity\": 51345193.21367636,\n          \"issue\": \"Duis qui\"\n        },\n        {\n          \"name\": \"anim ut elit\",\n          \"actions\": [\n            \"non in\",\n            \"labore non cupidatat deserunt\"\n          ],\n          \"last_usage\": -46907806.978048995,\n          \"severity\": 20130600.36707844,\n          \"issue\": \"in tempor proident Duis\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 28025573.851786405,\n      \"role_error\": \"adipisicing do elit\",\n      \"num_permissive\": -48379699.55197474,\n      \"num_unused\": -82891017.70056368,\n      \"num_known\": 25378434.536059484\n    },\n    {\n      \"function_id\": \"Duis adipisicing\",\n      \"name\": \"dolore aliquip laboris sed\",\n      \"project\": \"incididunt culpa sunt dolor anim\",\n      \"description\": \"\",\n      \"digest\": \"adipisicing dolore ut aute quis\",\n      \"crit_vulns\": 30093504.196930975,\n      \"high_vulns\": -92475279.13410583,\n      \"low_vulns\": -75986830.23516859,\n      \"neg_vulns\": -22646087.68958789,\n      \"sensitive\": 71411946.22355735,\n      \"vulns_found\": 27645946.798490778,\n      \"malware\": 36413252.71973336,\n      \"version\": \"qui sint\",\n      \"handler\": \"Ut in magna dolor\",\n      \"last_scan\": \"1964-11-03T18:20:26.099Z\",\n      \"scan_status\": \"in cupidata\",\n      \"tags\": [\n        \"adipisicing tempor nulla\",\n        \"enim amet consectetur\"\n      ],\n      \"environments\": [\n        \"aliquip laborum\",\n        \"u\"\n      ],\n      \"invocations\": 23491134.066160545,\n      \"durationsAverage\": -54440834.06237002,\n      \"triggers\": [\n        \"enim est\",\n        \"voluptate velit\"\n      ],\n      \"sensitive_environments\": [\n        \"sit et\",\n        \"cillum qui\"\n      ],\n      \"scan_warnings\": [\n        \"exercitation incididunt ex consectetur non\",\n        \"quis\"\n      ],\n      \"last_modified\": \"2001-10-02T11:02:15.203Z\",\n      \"scan_error\": \"officia dolor occaecat\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"in in in voluptate\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"commodo\",\n          \"control\": \"non proident\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"nulla officia eiusmod exercitation ex\",\n          \"control\": \"ut dolore cupidatat eiusmod\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"mollit\",\n      \"assurance_failed\": false,\n      \"assurance_failure\": \"eiusmod\",\n      \"block_failed\": true,\n      \"block_failure\": \"veniam consectetur\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"pariatur elit\",\n      \"layers_arn\": [\n        \"laborum velit veniam\",\n        \"ad ut\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": 64048364.93563527,\n      \"permission\": \"Excepteur mollit\",\n      \"runtime_version\": \"adipisicing labo\",\n      \"runtime_language\": \"nisi sunt consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"reprehenderit esse Lorem veniam sunt\",\n          \"name\": \"et velit in incididunt\",\n          \"created_date\": \"occaecat est\",\n          \"version_arn\": \"cillum sint\",\n          \"version\": -70005010.0108499\n        },\n        {\n          \"arn\": \"eu occaecat\",\n          \"name\": \"magna Excepteur cupidatat qui\",\n          \"created_date\": \"culpa magna Ut\",\n          \"version_arn\": \"enim ipsum\",\n          \"version\": -28263121.359053895\n        }\n      ],\n      \"role_id\": \"nisi proident tempor sed\",\n      \"role_resources\": [\n        {\n          \"name\": \"dolor consequat dolor magna\",\n          \"actions\": [\n            \"fugiat anim ut ullamco\",\n            \"aliquip anim in\"\n          ],\n          \"last_usage\": 58143643.95272395,\n          \"severity\": 86350401.32964137,\n          \"issue\": \"ut dolor\"\n        },\n        {\n          \"name\": \"sed culpa\",\n          \"actions\": [\n            \"quis velit\",\n            \"id aliquip est nisi\"\n          ],\n          \"last_usage\": -20835091.343184814,\n          \"severity\": 85749490.616137,\n          \"issue\": \"voluptate qui irure ipsum\"\n        }\n      ],\n      \"role_managed\": false,\n      \"role_common\": -98608919.63352132,\n      \"role_error\": \"minim enim f\",\n      \"num_permissive\": -94290771.32966155,\n      \"num_unused\": 60511659.64677483,\n      \"num_known\": -90316182.63084371\n    }\n  ],\n  \"scan_all\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions/rescan",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions",
														"rescan"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"functions\": [\n    {\n      \"function_id\": \"eu sint fugiat velit\",\n      \"name\": \"aliqua\",\n      \"project\": \"est irure minim\",\n      \"description\": \"occaecat\",\n      \"digest\": \"eu exercitation officia irure adipisicing\",\n      \"crit_vulns\": -88453743.41892773,\n      \"high_vulns\": -28243462.05896093,\n      \"low_vulns\": -30059314.72876902,\n      \"neg_vulns\": 78363020.74863026,\n      \"sensitive\": 4129235.888048351,\n      \"vulns_found\": -57657440.3336346,\n      \"malware\": -18691588.447153017,\n      \"version\": \"ex consequat irure laboris proident\",\n      \"handler\": \"Lorem\",\n      \"last_scan\": \"1996-06-30T17:41:48.341Z\",\n      \"scan_status\": \"et ad laboris\",\n      \"tags\": [\n        \"eu ipsum reprehenderit\",\n        \"esse in laboris voluptate id\"\n      ],\n      \"environments\": [\n        \"ea Lorem occaecat aliquip\",\n        \"sint dolor ut\"\n      ],\n      \"invocations\": -61509788.17278539,\n      \"durationsAverage\": 94079021.02912673,\n      \"triggers\": [\n        \"magna sed\",\n        \"amet sed aliquip aute\"\n      ],\n      \"sensitive_environments\": [\n        \"ut Ut\",\n        \"sit officia cupidatat\"\n      ],\n      \"scan_warnings\": [\n        \"est dolor officia cillum\",\n        \"aliqua adipisicing sint amet voluptate\"\n      ],\n      \"last_modified\": \"1960-07-13T21:16:43.080Z\",\n      \"scan_error\": \"ullamco consequat\",\n      \"permissive\": true,\n      \"blocked\": false,\n      \"blocked_by\": \"tempor aliquip nostrud et\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"anim\",\n          \"control\": \"dolore dolore incididunt\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"ea id\",\n          \"control\": \"anim Excepteur sed occa\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"pariatur elit\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"in\",\n      \"block_failed\": true,\n      \"block_failure\": \"anim do fugiat\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"cillum nostrud\",\n      \"layers_arn\": [\n        \"occaecat laborum veniam dolore\",\n        \"amet eu Duis esse\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": -74992824.95361967,\n      \"permission\": \"nisi do aliqua\",\n      \"runtime_version\": \"quis Excepteur consequat dolor eiusmod\",\n      \"runtime_language\": \"incididunt aliquip consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"anim et quis elit commodo\",\n          \"name\": \"do nostrud\",\n          \"created_date\": \"ullamco non dolore consequat magna\",\n          \"version_arn\": \"commodo eu\",\n          \"version\": 45963244.82935575\n        },\n        {\n          \"arn\": \"ipsum aute qui\",\n          \"name\": \"in voluptate laborum\",\n          \"created_date\": \"veniam laboris nostr\",\n          \"version_arn\": \"Ut\",\n          \"version\": 25212132.5305319\n        }\n      ],\n      \"role_id\": \"irure commodo eu pariatur cillum\",\n      \"role_resources\": [\n        {\n          \"name\": \"voluptate nostrud Duis\",\n          \"actions\": [\n            \"veniam ipsu\",\n            \"nostrud esse velit minim\"\n          ],\n          \"last_usage\": -66698713.04240322,\n          \"severity\": 51345193.21367636,\n          \"issue\": \"Duis qui\"\n        },\n        {\n          \"name\": \"anim ut elit\",\n          \"actions\": [\n            \"non in\",\n            \"labore non cupidatat deserunt\"\n          ],\n          \"last_usage\": -46907806.978048995,\n          \"severity\": 20130600.36707844,\n          \"issue\": \"in tempor proident Duis\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 28025573.851786405,\n      \"role_error\": \"adipisicing do elit\",\n      \"num_permissive\": -48379699.55197474,\n      \"num_unused\": -82891017.70056368,\n      \"num_known\": 25378434.536059484\n    },\n    {\n      \"function_id\": \"Duis adipisicing\",\n      \"name\": \"dolore aliquip laboris sed\",\n      \"project\": \"incididunt culpa sunt dolor anim\",\n      \"description\": \"\",\n      \"digest\": \"adipisicing dolore ut aute quis\",\n      \"crit_vulns\": 30093504.196930975,\n      \"high_vulns\": -92475279.13410583,\n      \"low_vulns\": -75986830.23516859,\n      \"neg_vulns\": -22646087.68958789,\n      \"sensitive\": 71411946.22355735,\n      \"vulns_found\": 27645946.798490778,\n      \"malware\": 36413252.71973336,\n      \"version\": \"qui sint\",\n      \"handler\": \"Ut in magna dolor\",\n      \"last_scan\": \"1964-11-03T18:20:26.099Z\",\n      \"scan_status\": \"in cupidata\",\n      \"tags\": [\n        \"adipisicing tempor nulla\",\n        \"enim amet consectetur\"\n      ],\n      \"environments\": [\n        \"aliquip laborum\",\n        \"u\"\n      ],\n      \"invocations\": 23491134.066160545,\n      \"durationsAverage\": -54440834.06237002,\n      \"triggers\": [\n        \"enim est\",\n        \"voluptate velit\"\n      ],\n      \"sensitive_environments\": [\n        \"sit et\",\n        \"cillum qui\"\n      ],\n      \"scan_warnings\": [\n        \"exercitation incididunt ex consectetur non\",\n        \"quis\"\n      ],\n      \"last_modified\": \"2001-10-02T11:02:15.203Z\",\n      \"scan_error\": \"officia dolor occaecat\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"in in in voluptate\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"commodo\",\n          \"control\": \"non proident\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"nulla officia eiusmod exercitation ex\",\n          \"control\": \"ut dolore cupidatat eiusmod\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"mollit\",\n      \"assurance_failed\": false,\n      \"assurance_failure\": \"eiusmod\",\n      \"block_failed\": true,\n      \"block_failure\": \"veniam consectetur\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"pariatur elit\",\n      \"layers_arn\": [\n        \"laborum velit veniam\",\n        \"ad ut\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": 64048364.93563527,\n      \"permission\": \"Excepteur mollit\",\n      \"runtime_version\": \"adipisicing labo\",\n      \"runtime_language\": \"nisi sunt consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"reprehenderit esse Lorem veniam sunt\",\n          \"name\": \"et velit in incididunt\",\n          \"created_date\": \"occaecat est\",\n          \"version_arn\": \"cillum sint\",\n          \"version\": -70005010.0108499\n        },\n        {\n          \"arn\": \"eu occaecat\",\n          \"name\": \"magna Excepteur cupidatat qui\",\n          \"created_date\": \"culpa magna Ut\",\n          \"version_arn\": \"enim ipsum\",\n          \"version\": -28263121.359053895\n        }\n      ],\n      \"role_id\": \"nisi proident tempor sed\",\n      \"role_resources\": [\n        {\n          \"name\": \"dolor consequat dolor magna\",\n          \"actions\": [\n            \"fugiat anim ut ullamco\",\n            \"aliquip anim in\"\n          ],\n          \"last_usage\": 58143643.95272395,\n          \"severity\": 86350401.32964137,\n          \"issue\": \"ut dolor\"\n        },\n        {\n          \"name\": \"sed culpa\",\n          \"actions\": [\n            \"quis velit\",\n            \"id aliquip est nisi\"\n          ],\n          \"last_usage\": -20835091.343184814,\n          \"severity\": 85749490.616137,\n          \"issue\": \"voluptate qui irure ipsum\"\n        }\n      ],\n      \"role_managed\": false,\n      \"role_common\": -98608919.63352132,\n      \"role_error\": \"minim enim f\",\n      \"num_permissive\": -94290771.32966155,\n      \"num_unused\": 60511659.64677483,\n      \"num_known\": -90316182.63084371\n    }\n  ],\n  \"scan_all\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions/rescan",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions",
														"rescan"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"functions\": [\n    {\n      \"function_id\": \"eu sint fugiat velit\",\n      \"name\": \"aliqua\",\n      \"project\": \"est irure minim\",\n      \"description\": \"occaecat\",\n      \"digest\": \"eu exercitation officia irure adipisicing\",\n      \"crit_vulns\": -88453743.41892773,\n      \"high_vulns\": -28243462.05896093,\n      \"low_vulns\": -30059314.72876902,\n      \"neg_vulns\": 78363020.74863026,\n      \"sensitive\": 4129235.888048351,\n      \"vulns_found\": -57657440.3336346,\n      \"malware\": -18691588.447153017,\n      \"version\": \"ex consequat irure laboris proident\",\n      \"handler\": \"Lorem\",\n      \"last_scan\": \"1996-06-30T17:41:48.341Z\",\n      \"scan_status\": \"et ad laboris\",\n      \"tags\": [\n        \"eu ipsum reprehenderit\",\n        \"esse in laboris voluptate id\"\n      ],\n      \"environments\": [\n        \"ea Lorem occaecat aliquip\",\n        \"sint dolor ut\"\n      ],\n      \"invocations\": -61509788.17278539,\n      \"durationsAverage\": 94079021.02912673,\n      \"triggers\": [\n        \"magna sed\",\n        \"amet sed aliquip aute\"\n      ],\n      \"sensitive_environments\": [\n        \"ut Ut\",\n        \"sit officia cupidatat\"\n      ],\n      \"scan_warnings\": [\n        \"est dolor officia cillum\",\n        \"aliqua adipisicing sint amet voluptate\"\n      ],\n      \"last_modified\": \"1960-07-13T21:16:43.080Z\",\n      \"scan_error\": \"ullamco consequat\",\n      \"permissive\": true,\n      \"blocked\": false,\n      \"blocked_by\": \"tempor aliquip nostrud et\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"anim\",\n          \"control\": \"dolore dolore incididunt\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"ea id\",\n          \"control\": \"anim Excepteur sed occa\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"pariatur elit\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"in\",\n      \"block_failed\": true,\n      \"block_failure\": \"anim do fugiat\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"cillum nostrud\",\n      \"layers_arn\": [\n        \"occaecat laborum veniam dolore\",\n        \"amet eu Duis esse\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": -74992824.95361967,\n      \"permission\": \"nisi do aliqua\",\n      \"runtime_version\": \"quis Excepteur consequat dolor eiusmod\",\n      \"runtime_language\": \"incididunt aliquip consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"anim et quis elit commodo\",\n          \"name\": \"do nostrud\",\n          \"created_date\": \"ullamco non dolore consequat magna\",\n          \"version_arn\": \"commodo eu\",\n          \"version\": 45963244.82935575\n        },\n        {\n          \"arn\": \"ipsum aute qui\",\n          \"name\": \"in voluptate laborum\",\n          \"created_date\": \"veniam laboris nostr\",\n          \"version_arn\": \"Ut\",\n          \"version\": 25212132.5305319\n        }\n      ],\n      \"role_id\": \"irure commodo eu pariatur cillum\",\n      \"role_resources\": [\n        {\n          \"name\": \"voluptate nostrud Duis\",\n          \"actions\": [\n            \"veniam ipsu\",\n            \"nostrud esse velit minim\"\n          ],\n          \"last_usage\": -66698713.04240322,\n          \"severity\": 51345193.21367636,\n          \"issue\": \"Duis qui\"\n        },\n        {\n          \"name\": \"anim ut elit\",\n          \"actions\": [\n            \"non in\",\n            \"labore non cupidatat deserunt\"\n          ],\n          \"last_usage\": -46907806.978048995,\n          \"severity\": 20130600.36707844,\n          \"issue\": \"in tempor proident Duis\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 28025573.851786405,\n      \"role_error\": \"adipisicing do elit\",\n      \"num_permissive\": -48379699.55197474,\n      \"num_unused\": -82891017.70056368,\n      \"num_known\": 25378434.536059484\n    },\n    {\n      \"function_id\": \"Duis adipisicing\",\n      \"name\": \"dolore aliquip laboris sed\",\n      \"project\": \"incididunt culpa sunt dolor anim\",\n      \"description\": \"\",\n      \"digest\": \"adipisicing dolore ut aute quis\",\n      \"crit_vulns\": 30093504.196930975,\n      \"high_vulns\": -92475279.13410583,\n      \"low_vulns\": -75986830.23516859,\n      \"neg_vulns\": -22646087.68958789,\n      \"sensitive\": 71411946.22355735,\n      \"vulns_found\": 27645946.798490778,\n      \"malware\": 36413252.71973336,\n      \"version\": \"qui sint\",\n      \"handler\": \"Ut in magna dolor\",\n      \"last_scan\": \"1964-11-03T18:20:26.099Z\",\n      \"scan_status\": \"in cupidata\",\n      \"tags\": [\n        \"adipisicing tempor nulla\",\n        \"enim amet consectetur\"\n      ],\n      \"environments\": [\n        \"aliquip laborum\",\n        \"u\"\n      ],\n      \"invocations\": 23491134.066160545,\n      \"durationsAverage\": -54440834.06237002,\n      \"triggers\": [\n        \"enim est\",\n        \"voluptate velit\"\n      ],\n      \"sensitive_environments\": [\n        \"sit et\",\n        \"cillum qui\"\n      ],\n      \"scan_warnings\": [\n        \"exercitation incididunt ex consectetur non\",\n        \"quis\"\n      ],\n      \"last_modified\": \"2001-10-02T11:02:15.203Z\",\n      \"scan_error\": \"officia dolor occaecat\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"in in in voluptate\",\n      \"disallowed\": false,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"commodo\",\n          \"control\": \"non proident\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"nulla officia eiusmod exercitation ex\",\n          \"control\": \"ut dolore cupidatat eiusmod\",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"mollit\",\n      \"assurance_failed\": false,\n      \"assurance_failure\": \"eiusmod\",\n      \"block_failed\": true,\n      \"block_failure\": \"veniam consectetur\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"pariatur elit\",\n      \"layers_arn\": [\n        \"laborum velit veniam\",\n        \"ad ut\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": 64048364.93563527,\n      \"permission\": \"Excepteur mollit\",\n      \"runtime_version\": \"adipisicing labo\",\n      \"runtime_language\": \"nisi sunt consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"reprehenderit esse Lorem veniam sunt\",\n          \"name\": \"et velit in incididunt\",\n          \"created_date\": \"occaecat est\",\n          \"version_arn\": \"cillum sint\",\n          \"version\": -70005010.0108499\n        },\n        {\n          \"arn\": \"eu occaecat\",\n          \"name\": \"magna Excepteur cupidatat qui\",\n          \"created_date\": \"culpa magna Ut\",\n          \"version_arn\": \"enim ipsum\",\n          \"version\": -28263121.359053895\n        }\n      ],\n      \"role_id\": \"nisi proident tempor sed\",\n      \"role_resources\": [\n        {\n          \"name\": \"dolor consequat dolor magna\",\n          \"actions\": [\n            \"fugiat anim ut ullamco\",\n            \"aliquip anim in\"\n          ],\n          \"last_usage\": 58143643.95272395,\n          \"severity\": 86350401.32964137,\n          \"issue\": \"ut dolor\"\n        },\n        {\n          \"name\": \"sed culpa\",\n          \"actions\": [\n            \"quis velit\",\n            \"id aliquip est nisi\"\n          ],\n          \"last_usage\": -20835091.343184814,\n          \"severity\": 85749490.616137,\n          \"issue\": \"voluptate qui irure ipsum\"\n        }\n      ],\n      \"role_managed\": false,\n      \"role_common\": -98608919.63352132,\n      \"role_error\": \"minim enim f\",\n      \"num_permissive\": -94290771.32966155,\n      \"num_unused\": 60511659.64677483,\n      \"num_known\": -90316182.63084371\n    }\n  ],\n  \"scan_all\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions/rescan",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions",
														"rescan"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Delete serverless functions",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"include_functions\": [\n    {\n      \"function_id\": \"dolore\",\n      \"name\": \"magna adipisicing ex nostrud\",\n      \"project\": \"pariatur ut\",\n      \"description\": \"ex minim Lorem\",\n      \"digest\": \"ea\",\n      \"crit_vulns\": -99147062.45802742,\n      \"high_vulns\": 74602827.62452373,\n      \"low_vulns\": 23317012.077921852,\n      \"neg_vulns\": 51903346.61508426,\n      \"sensitive\": -54974004.87539257,\n      \"vulns_found\": 58777693.65464425,\n      \"malware\": 36416875.94114584,\n      \"version\": \"est consequat tempor exercitation\",\n      \"handler\": \"officia tempor velit\",\n      \"last_scan\": \"1945-07-06T12:28:33.528Z\",\n      \"scan_status\": \"ut Ut sunt\",\n      \"tags\": [\n        \"est\",\n        \"pariatur dolor\"\n      ],\n      \"environments\": [\n        \"minim in id veniam\",\n        \"ut amet mollit ad\"\n      ],\n      \"invocations\": -25954641.629899293,\n      \"durationsAverage\": -16523485.938220397,\n      \"triggers\": [\n        \"Excepteur anim mollit\",\n        \"laborum minim\"\n      ],\n      \"sensitive_environments\": [\n        \"proident voluptate Excepteur anim incididunt\",\n        \"sit fugiat occaecat\"\n      ],\n      \"scan_warnings\": [\n        \"eiusmod in culpa nulla incididunt\",\n        \"et deserunt\"\n      ],\n      \"last_modified\": \"1975-01-24T06:53:48.374Z\",\n      \"scan_error\": \"velit labore dolor magna dolore\",\n      \"permissive\": false,\n      \"blocked\": true,\n      \"blocked_by\": \"minim non ex veniam\",\n      \"disallowed\": true,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"sunt sit in\",\n          \"control\": \"velit sit\",\n          \"failed\": false\n        },\n        {\n          \"policy_name\": \"magna cillu\",\n          \"control\": \"ipsum\",\n          \"failed\": false\n        }\n      ],\n      \"assurance_results\": \"exercitation officia\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"cillum mollit laborum Ut\",\n      \"block_failed\": true,\n      \"block_failure\": \"ut sed\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"esse\",\n      \"layers_arn\": [\n        \"labore\",\n        \"pari\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": 97499405.74152145,\n      \"permission\": \"enim incididunt sunt\",\n      \"runtime_version\": \"aliquip\",\n      \"runtime_language\": \"consectetur proident consequat aliquip\",\n      \"layers\": [\n        {\n          \"arn\": \"Ex\",\n          \"name\": \"amet\",\n          \"created_date\": \"sed velit dolore eu\",\n          \"version_arn\": \"Duis \",\n          \"version\": -21886782.74862434\n        },\n        {\n          \"arn\": \"esse irure ad anim\",\n          \"name\": \"id se\",\n          \"created_date\": \"minim no\",\n          \"version_arn\": \"sint\",\n          \"version\": -18347952.51304002\n        }\n      ],\n      \"role_id\": \"ad veniam dolor consequat\",\n      \"role_resources\": [\n        {\n          \"name\": \"sed consectetur tempor\",\n          \"actions\": [\n            \"sed elit laborum enim anim\",\n            \"Ut incididunt magna sint veniam\"\n          ],\n          \"last_usage\": 91474649.21703944,\n          \"severity\": 83842605.10327253,\n          \"issue\": \"fugiat nisi\"\n        },\n        {\n          \"name\": \"amet est fugiat tempor\",\n          \"actions\": [\n            \"voluptate culpa sunt quis reprehenderit\",\n            \"dolore Ut\"\n          ],\n          \"last_usage\": 14334543.785976976,\n          \"severity\": -27348907.20041299,\n          \"issue\": \"cillum proident nulla\"\n        }\n      ],\n      \"role_managed\": false,\n      \"role_common\": -67740561.8208089,\n      \"role_error\": \"ex\",\n      \"num_permissive\": -9093493.01622346,\n      \"num_unused\": -15791336.664309338,\n      \"num_known\": 57457105.88447276\n    },\n    {\n      \"function_id\": \"enim veniam sunt\",\n      \"name\": \"aliquip magna ut\",\n      \"project\": \"do in Ut ex\",\n      \"description\": \"reprehenderit aliqua\",\n      \"digest\": \"Ut cupidatat\",\n      \"crit_vulns\": -12160213.200239763,\n      \"high_vulns\": 722997.4979736656,\n      \"low_vulns\": -11972155.828398064,\n      \"neg_vulns\": 88050510.1705449,\n      \"sensitive\": -25364589.85198565,\n      \"vulns_found\": 90251890.8433806,\n      \"malware\": 4643726.835990772,\n      \"version\": \"cillum veniam dolore voluptate\",\n      \"handler\": \"laboris\",\n      \"last_scan\": \"1987-03-10T15:28:58.371Z\",\n      \"scan_status\": \"culpa pariatur aliquip veniam ullamco\",\n      \"tags\": [\n        \"fugiat Duis\",\n        \"non\"\n      ],\n      \"environments\": [\n        \"do ea sunt\",\n        \"id ea\"\n      ],\n      \"invocations\": -46872764.89623291,\n      \"durationsAverage\": 29476561.556994736,\n      \"triggers\": [\n        \"veniam qui\",\n        \"cupidatat exercitation Excepteur\"\n      ],\n      \"sensitive_environments\": [\n        \"occaecat ei\",\n        \"sit Lo\"\n      ],\n      \"scan_warnings\": [\n        \"enim ullamco\",\n        \"ut nulla exercitation\"\n      ],\n      \"last_modified\": \"1968-03-26T22:19:21.340Z\",\n      \"scan_error\": \"officia nisi quis\",\n      \"permissive\": false,\n      \"blocked\": false,\n      \"blocked_by\": \"sint dolore\",\n      \"disallowed\": true,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"magna irure\",\n          \"control\": \"Excepteur ex labore ut\",\n          \"failed\": true\n        },\n        {\n          \"policy_name\": \"la\",\n          \"control\": \"pariatur do\",\n          \"failed\": false\n        }\n      ],\n      \"assurance_results\": \"quis sit officia\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"anim do sunt\",\n      \"block_failed\": false,\n      \"block_failure\": \"ut do aliquip dolore\",\n      \"unblock_failed\": true,\n      \"unblock_failure\": \"fugiat in\",\n      \"layers_arn\": [\n        \"pariatur sunt\",\n        \"ad deserunt\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": -42924552.05583772,\n      \"permission\": \"eiusmod\",\n      \"runtime_version\": \"pariatur sit sint Excepteur\",\n      \"runtime_language\": \"cillum consequat\",\n      \"layers\": [\n        {\n          \"arn\": \"culpa incididunt enim\",\n          \"name\": \"in fugiat voluptate\",\n          \"created_date\": \"officia voluptate in\",\n          \"version_arn\": \"ea\",\n          \"version\": -12607413.00595139\n        },\n        {\n          \"arn\": \"eu\",\n          \"name\": \"magna proident\",\n          \"created_date\": \"commodo mo\",\n          \"version_arn\": \"sunt eu\",\n          \"version\": 69083176.90377751\n        }\n      ],\n      \"role_id\": \"dolore aute dolore\",\n      \"role_resources\": [\n        {\n          \"name\": \"elit incididunt in in\",\n          \"actions\": [\n            \"veniam nulla do dolor non\",\n            \"incididunt elit consequat\"\n          ],\n          \"last_usage\": 28940176.977714896,\n          \"severity\": 89901945.1456958,\n          \"issue\": \"p\"\n        },\n        {\n          \"name\": \"repreh\",\n          \"actions\": [\n            \"sint sit commodo non\",\n            \"voluptate \"\n          ],\n          \"last_usage\": -32922121.994098544,\n          \"severity\": 33096803.37332739,\n          \"issue\": \"aliqua in amet\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 48392163.29293051,\n      \"role_error\": \"adipisicing esse Ut non dolore\",\n      \"num_permissive\": -58315207.37543805,\n      \"num_unused\": 29131775.18985641,\n      \"num_known\": -93143207.62518857\n    }\n  ],\n  \"delete_all\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/serverless/functions/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"serverless",
												"functions",
												"delete"
											]
										},
										"description": "Delete serverless functions"
									},
									"response": [
										{
											"name": "Serverless functions deleted successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"include_functions\": [\n    {\n      \"function_id\": \"voluptate magna\",\n      \"name\": \"aute amet\",\n      \"project\": \"sunt aliquip\",\n      \"description\": \"et occaecat sint id\",\n      \"digest\": \"ullamco cupidatat reprehenderit\",\n      \"crit_vulns\": 52423133.74559301,\n      \"high_vulns\": -81769498.57872793,\n      \"low_vulns\": 14663591.536600247,\n      \"neg_vulns\": -12073716.474679679,\n      \"sensitive\": -90491671.98926331,\n      \"vulns_found\": 27090696.85506469,\n      \"malware\": 69488599.57513371,\n      \"version\": \"aute incididunt\",\n      \"handler\": \"reprehenderit irur\",\n      \"last_scan\": \"1945-07-08T01:25:16.056Z\",\n      \"scan_status\": \"ut veniam id ea\",\n      \"tags\": [\n        \"aliqua\",\n        \"ipsum\"\n      ],\n      \"environments\": [\n        \"incididunt ut in ex reprehenderit\",\n        \"aliqua dolore aliquip\"\n      ],\n      \"invocations\": -16150560.117019534,\n      \"durationsAverage\": -82803790.81897959,\n      \"triggers\": [\n        \"irure nostrud dolor officia\",\n        \"\"\n      ],\n      \"sensitive_environments\": [\n        \"irure nulla\",\n        \"tempor culpa\"\n      ],\n      \"scan_warnings\": [\n        \"sit labore quis veniam\",\n        \"d\"\n      ],\n      \"last_modified\": \"1962-12-05T13:18:04.666Z\",\n      \"scan_error\": \"anim magna\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"in\",\n      \"disallowed\": true,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"veniam Excepteur eu dolor\",\n          \"control\": \"enim quis amet\",\n          \"failed\": false\n        },\n        {\n          \"policy_name\": \"nostrud eiusmod laboris enim\",\n          \"control\": \"sed ut labore \",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"elit in ipsum\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"qui ut\",\n      \"block_failed\": true,\n      \"block_failure\": \"adipisicing\",\n      \"unblock_failed\": false,\n      \"unblock_failure\": \"nostrud eiusmod exercitation\",\n      \"layers_arn\": [\n        \"in incididunt esse exercitation\",\n        \"aliquip sint dolor Duis adipisicing\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": 79652820.81205758,\n      \"permission\": \"ut\",\n      \"runtime_version\": \"fugiat ullamco mollit\",\n      \"runtime_language\": \"nisi consequat et venia\",\n      \"layers\": [\n        {\n          \"arn\": \"Duis est\",\n          \"name\": \"sunt nostrud\",\n          \"created_date\": \"ex Ut veniam et magna\",\n          \"version_arn\": \"voluptate occaecat\",\n          \"version\": 54572529.00050098\n        },\n        {\n          \"arn\": \"sunt culpa sed non\",\n          \"name\": \"id do exercitation\",\n          \"created_date\": \"Ut\",\n          \"version_arn\": \"sunt proident officia\",\n          \"version\": 47451484.545395404\n        }\n      ],\n      \"role_id\": \"Excepteur veniam qui non\",\n      \"role_resources\": [\n        {\n          \"name\": \"Duis tempor do ut amet\",\n          \"actions\": [\n            \"irure cillum laboris\",\n            \"enim amet laborum\"\n          ],\n          \"last_usage\": 32580383.997704357,\n          \"severity\": 64604243.90118441,\n          \"issue\": \"e\"\n        },\n        {\n          \"name\": \"velit mollit\",\n          \"actions\": [\n            \"sint Excepteur\",\n            \"adipi\"\n          ],\n          \"last_usage\": 67541232.96825165,\n          \"severity\": 6416095.8122840375,\n          \"issue\": \"cillum quis irure officia\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 15105796.522366256,\n      \"role_error\": \"in\",\n      \"num_permissive\": 68227849.96790251,\n      \"num_unused\": 1251994.2798648179,\n      \"num_known\": -3074371.898656383\n    },\n    {\n      \"function_id\": \"eu occaecat elit tempor id\",\n      \"name\": \"Ut et enim id\",\n      \"project\": \"nostrud ullamco fugiat\",\n      \"description\": \"esse et minim dolor\",\n      \"digest\": \"voluptate esse\",\n      \"crit_vulns\": 97006336.63905188,\n      \"high_vulns\": -86114216.31265336,\n      \"low_vulns\": 18362376.73002863,\n      \"neg_vulns\": 10703903.03561388,\n      \"sensitive\": 60258033.276739985,\n      \"vulns_found\": -42474418.84189937,\n      \"malware\": 40010302.46815166,\n      \"version\": \"pari\",\n      \"handler\": \"ut sint\",\n      \"last_scan\": \"2021-07-17T10:38:31.426Z\",\n      \"scan_status\": \"magna nostrud consectetur veniam ullamco\",\n      \"tags\": [\n        \"sed aliqua nostrud\",\n        \"Ut consectetur reprehenderit\"\n      ],\n      \"environments\": [\n        \"dolor quis\",\n        \"dolor deserunt nostrud\"\n      ],\n      \"invocations\": -48297846.972734295,\n      \"durationsAverage\": -91359193.13422361,\n      \"triggers\": [\n        \"laborum ipsum ea ex elit\",\n        \"mollit ipsum Duis nostrud ullamco\"\n      ],\n      \"sensitive_environments\": [\n        \"proident co\",\n        \"incididunt eiusmo\"\n      ],\n      \"scan_warnings\": [\n        \"reprehenderit magna Ut\",\n        \"veniam esse est in\"\n      ],\n      \"last_modified\": \"1976-01-05T01:49:12.229Z\",\n      \"scan_error\": \"elit anim\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"Excepteur\",\n      \"disallowed\": true,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"in fugiat est amet\",\n          \"control\": \"nostrud culpa ullamco ea\",\n          \"failed\": false\n        },\n        {\n          \"policy_name\": \"est\",\n          \"control\": \"elit fugiat dolor\",\n          \"failed\": false\n        }\n      ],\n      \"assurance_results\": \"proident\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"laboris aliquip\",\n      \"block_failed\": false,\n      \"block_failure\": \"aliqua tempor\",\n      \"unblock_failed\": false,\n      \"unblock_failure\": \"aliquip sed in\",\n      \"layers_arn\": [\n        \"officia tempor magna\",\n        \"ullamco consequat\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": 28685353.61580187,\n      \"permission\": \"esse aliquip laborum commodo tem\",\n      \"runtime_version\": \"aliqua esse\",\n      \"runtime_language\": \"aliqu\",\n      \"layers\": [\n        {\n          \"arn\": \"incididunt aute occaecat\",\n          \"name\": \"reprehenderit laboris\",\n          \"created_date\": \"est\",\n          \"version_arn\": \"elit dolore eiusmod fugiat\",\n          \"version\": -37030493.71748985\n        },\n        {\n          \"arn\": \"anim voluptate amet\",\n          \"name\": \"deserunt cupidatat ut\",\n          \"created_date\": \"eu sit non\",\n          \"version_arn\": \"reprehenderit tempor ex\",\n          \"version\": -5128906.0480505675\n        }\n      ],\n      \"role_id\": \"dolor sunt\",\n      \"role_resources\": [\n        {\n          \"name\": \"ut sunt nisi do\",\n          \"actions\": [\n            \"sunt velit irure fugiat ipsum\",\n            \"ipsum velit nulla\"\n          ],\n          \"last_usage\": -7881567.584749892,\n          \"severity\": 44151832.01010904,\n          \"issue\": \"reprehenderit mollit dolore\"\n        },\n        {\n          \"name\": \"ipsum anim\",\n          \"actions\": [\n            \"do esse minim elit in\",\n            \"nisi ut labore in ut\"\n          ],\n          \"last_usage\": 43630820.55780089,\n          \"severity\": 90398956.73485506,\n          \"issue\": \"ut ea\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 46715782.162242055,\n      \"role_error\": \"irure nostrud pariatur ad\",\n      \"num_permissive\": -93059456.3888302,\n      \"num_unused\": 38376645.11015588,\n      \"num_known\": -25816591.700576946\n    }\n  ],\n  \"delete_all\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions/delete",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions",
														"delete"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"include_functions\": [\n    {\n      \"function_id\": \"voluptate magna\",\n      \"name\": \"aute amet\",\n      \"project\": \"sunt aliquip\",\n      \"description\": \"et occaecat sint id\",\n      \"digest\": \"ullamco cupidatat reprehenderit\",\n      \"crit_vulns\": 52423133.74559301,\n      \"high_vulns\": -81769498.57872793,\n      \"low_vulns\": 14663591.536600247,\n      \"neg_vulns\": -12073716.474679679,\n      \"sensitive\": -90491671.98926331,\n      \"vulns_found\": 27090696.85506469,\n      \"malware\": 69488599.57513371,\n      \"version\": \"aute incididunt\",\n      \"handler\": \"reprehenderit irur\",\n      \"last_scan\": \"1945-07-08T01:25:16.056Z\",\n      \"scan_status\": \"ut veniam id ea\",\n      \"tags\": [\n        \"aliqua\",\n        \"ipsum\"\n      ],\n      \"environments\": [\n        \"incididunt ut in ex reprehenderit\",\n        \"aliqua dolore aliquip\"\n      ],\n      \"invocations\": -16150560.117019534,\n      \"durationsAverage\": -82803790.81897959,\n      \"triggers\": [\n        \"irure nostrud dolor officia\",\n        \"\"\n      ],\n      \"sensitive_environments\": [\n        \"irure nulla\",\n        \"tempor culpa\"\n      ],\n      \"scan_warnings\": [\n        \"sit labore quis veniam\",\n        \"d\"\n      ],\n      \"last_modified\": \"1962-12-05T13:18:04.666Z\",\n      \"scan_error\": \"anim magna\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"in\",\n      \"disallowed\": true,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"veniam Excepteur eu dolor\",\n          \"control\": \"enim quis amet\",\n          \"failed\": false\n        },\n        {\n          \"policy_name\": \"nostrud eiusmod laboris enim\",\n          \"control\": \"sed ut labore \",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"elit in ipsum\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"qui ut\",\n      \"block_failed\": true,\n      \"block_failure\": \"adipisicing\",\n      \"unblock_failed\": false,\n      \"unblock_failure\": \"nostrud eiusmod exercitation\",\n      \"layers_arn\": [\n        \"in incididunt esse exercitation\",\n        \"aliquip sint dolor Duis adipisicing\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": 79652820.81205758,\n      \"permission\": \"ut\",\n      \"runtime_version\": \"fugiat ullamco mollit\",\n      \"runtime_language\": \"nisi consequat et venia\",\n      \"layers\": [\n        {\n          \"arn\": \"Duis est\",\n          \"name\": \"sunt nostrud\",\n          \"created_date\": \"ex Ut veniam et magna\",\n          \"version_arn\": \"voluptate occaecat\",\n          \"version\": 54572529.00050098\n        },\n        {\n          \"arn\": \"sunt culpa sed non\",\n          \"name\": \"id do exercitation\",\n          \"created_date\": \"Ut\",\n          \"version_arn\": \"sunt proident officia\",\n          \"version\": 47451484.545395404\n        }\n      ],\n      \"role_id\": \"Excepteur veniam qui non\",\n      \"role_resources\": [\n        {\n          \"name\": \"Duis tempor do ut amet\",\n          \"actions\": [\n            \"irure cillum laboris\",\n            \"enim amet laborum\"\n          ],\n          \"last_usage\": 32580383.997704357,\n          \"severity\": 64604243.90118441,\n          \"issue\": \"e\"\n        },\n        {\n          \"name\": \"velit mollit\",\n          \"actions\": [\n            \"sint Excepteur\",\n            \"adipi\"\n          ],\n          \"last_usage\": 67541232.96825165,\n          \"severity\": 6416095.8122840375,\n          \"issue\": \"cillum quis irure officia\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 15105796.522366256,\n      \"role_error\": \"in\",\n      \"num_permissive\": 68227849.96790251,\n      \"num_unused\": 1251994.2798648179,\n      \"num_known\": -3074371.898656383\n    },\n    {\n      \"function_id\": \"eu occaecat elit tempor id\",\n      \"name\": \"Ut et enim id\",\n      \"project\": \"nostrud ullamco fugiat\",\n      \"description\": \"esse et minim dolor\",\n      \"digest\": \"voluptate esse\",\n      \"crit_vulns\": 97006336.63905188,\n      \"high_vulns\": -86114216.31265336,\n      \"low_vulns\": 18362376.73002863,\n      \"neg_vulns\": 10703903.03561388,\n      \"sensitive\": 60258033.276739985,\n      \"vulns_found\": -42474418.84189937,\n      \"malware\": 40010302.46815166,\n      \"version\": \"pari\",\n      \"handler\": \"ut sint\",\n      \"last_scan\": \"2021-07-17T10:38:31.426Z\",\n      \"scan_status\": \"magna nostrud consectetur veniam ullamco\",\n      \"tags\": [\n        \"sed aliqua nostrud\",\n        \"Ut consectetur reprehenderit\"\n      ],\n      \"environments\": [\n        \"dolor quis\",\n        \"dolor deserunt nostrud\"\n      ],\n      \"invocations\": -48297846.972734295,\n      \"durationsAverage\": -91359193.13422361,\n      \"triggers\": [\n        \"laborum ipsum ea ex elit\",\n        \"mollit ipsum Duis nostrud ullamco\"\n      ],\n      \"sensitive_environments\": [\n        \"proident co\",\n        \"incididunt eiusmo\"\n      ],\n      \"scan_warnings\": [\n        \"reprehenderit magna Ut\",\n        \"veniam esse est in\"\n      ],\n      \"last_modified\": \"1976-01-05T01:49:12.229Z\",\n      \"scan_error\": \"elit anim\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"Excepteur\",\n      \"disallowed\": true,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"in fugiat est amet\",\n          \"control\": \"nostrud culpa ullamco ea\",\n          \"failed\": false\n        },\n        {\n          \"policy_name\": \"est\",\n          \"control\": \"elit fugiat dolor\",\n          \"failed\": false\n        }\n      ],\n      \"assurance_results\": \"proident\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"laboris aliquip\",\n      \"block_failed\": false,\n      \"block_failure\": \"aliqua tempor\",\n      \"unblock_failed\": false,\n      \"unblock_failure\": \"aliquip sed in\",\n      \"layers_arn\": [\n        \"officia tempor magna\",\n        \"ullamco consequat\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": 28685353.61580187,\n      \"permission\": \"esse aliquip laborum commodo tem\",\n      \"runtime_version\": \"aliqua esse\",\n      \"runtime_language\": \"aliqu\",\n      \"layers\": [\n        {\n          \"arn\": \"incididunt aute occaecat\",\n          \"name\": \"reprehenderit laboris\",\n          \"created_date\": \"est\",\n          \"version_arn\": \"elit dolore eiusmod fugiat\",\n          \"version\": -37030493.71748985\n        },\n        {\n          \"arn\": \"anim voluptate amet\",\n          \"name\": \"deserunt cupidatat ut\",\n          \"created_date\": \"eu sit non\",\n          \"version_arn\": \"reprehenderit tempor ex\",\n          \"version\": -5128906.0480505675\n        }\n      ],\n      \"role_id\": \"dolor sunt\",\n      \"role_resources\": [\n        {\n          \"name\": \"ut sunt nisi do\",\n          \"actions\": [\n            \"sunt velit irure fugiat ipsum\",\n            \"ipsum velit nulla\"\n          ],\n          \"last_usage\": -7881567.584749892,\n          \"severity\": 44151832.01010904,\n          \"issue\": \"reprehenderit mollit dolore\"\n        },\n        {\n          \"name\": \"ipsum anim\",\n          \"actions\": [\n            \"do esse minim elit in\",\n            \"nisi ut labore in ut\"\n          ],\n          \"last_usage\": 43630820.55780089,\n          \"severity\": 90398956.73485506,\n          \"issue\": \"ut ea\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 46715782.162242055,\n      \"role_error\": \"irure nostrud pariatur ad\",\n      \"num_permissive\": -93059456.3888302,\n      \"num_unused\": 38376645.11015588,\n      \"num_known\": -25816591.700576946\n    }\n  ],\n  \"delete_all\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions/delete",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions",
														"delete"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"include_functions\": [\n    {\n      \"function_id\": \"voluptate magna\",\n      \"name\": \"aute amet\",\n      \"project\": \"sunt aliquip\",\n      \"description\": \"et occaecat sint id\",\n      \"digest\": \"ullamco cupidatat reprehenderit\",\n      \"crit_vulns\": 52423133.74559301,\n      \"high_vulns\": -81769498.57872793,\n      \"low_vulns\": 14663591.536600247,\n      \"neg_vulns\": -12073716.474679679,\n      \"sensitive\": -90491671.98926331,\n      \"vulns_found\": 27090696.85506469,\n      \"malware\": 69488599.57513371,\n      \"version\": \"aute incididunt\",\n      \"handler\": \"reprehenderit irur\",\n      \"last_scan\": \"1945-07-08T01:25:16.056Z\",\n      \"scan_status\": \"ut veniam id ea\",\n      \"tags\": [\n        \"aliqua\",\n        \"ipsum\"\n      ],\n      \"environments\": [\n        \"incididunt ut in ex reprehenderit\",\n        \"aliqua dolore aliquip\"\n      ],\n      \"invocations\": -16150560.117019534,\n      \"durationsAverage\": -82803790.81897959,\n      \"triggers\": [\n        \"irure nostrud dolor officia\",\n        \"\"\n      ],\n      \"sensitive_environments\": [\n        \"irure nulla\",\n        \"tempor culpa\"\n      ],\n      \"scan_warnings\": [\n        \"sit labore quis veniam\",\n        \"d\"\n      ],\n      \"last_modified\": \"1962-12-05T13:18:04.666Z\",\n      \"scan_error\": \"anim magna\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"in\",\n      \"disallowed\": true,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"veniam Excepteur eu dolor\",\n          \"control\": \"enim quis amet\",\n          \"failed\": false\n        },\n        {\n          \"policy_name\": \"nostrud eiusmod laboris enim\",\n          \"control\": \"sed ut labore \",\n          \"failed\": true\n        }\n      ],\n      \"assurance_results\": \"elit in ipsum\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"qui ut\",\n      \"block_failed\": true,\n      \"block_failure\": \"adipisicing\",\n      \"unblock_failed\": false,\n      \"unblock_failure\": \"nostrud eiusmod exercitation\",\n      \"layers_arn\": [\n        \"in incididunt esse exercitation\",\n        \"aliquip sint dolor Duis adipisicing\"\n      ],\n      \"concurrency_enabled\": true,\n      \"concurrency_reserve\": 79652820.81205758,\n      \"permission\": \"ut\",\n      \"runtime_version\": \"fugiat ullamco mollit\",\n      \"runtime_language\": \"nisi consequat et venia\",\n      \"layers\": [\n        {\n          \"arn\": \"Duis est\",\n          \"name\": \"sunt nostrud\",\n          \"created_date\": \"ex Ut veniam et magna\",\n          \"version_arn\": \"voluptate occaecat\",\n          \"version\": 54572529.00050098\n        },\n        {\n          \"arn\": \"sunt culpa sed non\",\n          \"name\": \"id do exercitation\",\n          \"created_date\": \"Ut\",\n          \"version_arn\": \"sunt proident officia\",\n          \"version\": 47451484.545395404\n        }\n      ],\n      \"role_id\": \"Excepteur veniam qui non\",\n      \"role_resources\": [\n        {\n          \"name\": \"Duis tempor do ut amet\",\n          \"actions\": [\n            \"irure cillum laboris\",\n            \"enim amet laborum\"\n          ],\n          \"last_usage\": 32580383.997704357,\n          \"severity\": 64604243.90118441,\n          \"issue\": \"e\"\n        },\n        {\n          \"name\": \"velit mollit\",\n          \"actions\": [\n            \"sint Excepteur\",\n            \"adipi\"\n          ],\n          \"last_usage\": 67541232.96825165,\n          \"severity\": 6416095.8122840375,\n          \"issue\": \"cillum quis irure officia\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 15105796.522366256,\n      \"role_error\": \"in\",\n      \"num_permissive\": 68227849.96790251,\n      \"num_unused\": 1251994.2798648179,\n      \"num_known\": -3074371.898656383\n    },\n    {\n      \"function_id\": \"eu occaecat elit tempor id\",\n      \"name\": \"Ut et enim id\",\n      \"project\": \"nostrud ullamco fugiat\",\n      \"description\": \"esse et minim dolor\",\n      \"digest\": \"voluptate esse\",\n      \"crit_vulns\": 97006336.63905188,\n      \"high_vulns\": -86114216.31265336,\n      \"low_vulns\": 18362376.73002863,\n      \"neg_vulns\": 10703903.03561388,\n      \"sensitive\": 60258033.276739985,\n      \"vulns_found\": -42474418.84189937,\n      \"malware\": 40010302.46815166,\n      \"version\": \"pari\",\n      \"handler\": \"ut sint\",\n      \"last_scan\": \"2021-07-17T10:38:31.426Z\",\n      \"scan_status\": \"magna nostrud consectetur veniam ullamco\",\n      \"tags\": [\n        \"sed aliqua nostrud\",\n        \"Ut consectetur reprehenderit\"\n      ],\n      \"environments\": [\n        \"dolor quis\",\n        \"dolor deserunt nostrud\"\n      ],\n      \"invocations\": -48297846.972734295,\n      \"durationsAverage\": -91359193.13422361,\n      \"triggers\": [\n        \"laborum ipsum ea ex elit\",\n        \"mollit ipsum Duis nostrud ullamco\"\n      ],\n      \"sensitive_environments\": [\n        \"proident co\",\n        \"incididunt eiusmo\"\n      ],\n      \"scan_warnings\": [\n        \"reprehenderit magna Ut\",\n        \"veniam esse est in\"\n      ],\n      \"last_modified\": \"1976-01-05T01:49:12.229Z\",\n      \"scan_error\": \"elit anim\",\n      \"permissive\": true,\n      \"blocked\": true,\n      \"blocked_by\": \"Excepteur\",\n      \"disallowed\": true,\n      \"have_assurance_policy\": [\n        {\n          \"policy_name\": \"in fugiat est amet\",\n          \"control\": \"nostrud culpa ullamco ea\",\n          \"failed\": false\n        },\n        {\n          \"policy_name\": \"est\",\n          \"control\": \"elit fugiat dolor\",\n          \"failed\": false\n        }\n      ],\n      \"assurance_results\": \"proident\",\n      \"assurance_failed\": true,\n      \"assurance_failure\": \"laboris aliquip\",\n      \"block_failed\": false,\n      \"block_failure\": \"aliqua tempor\",\n      \"unblock_failed\": false,\n      \"unblock_failure\": \"aliquip sed in\",\n      \"layers_arn\": [\n        \"officia tempor magna\",\n        \"ullamco consequat\"\n      ],\n      \"concurrency_enabled\": false,\n      \"concurrency_reserve\": 28685353.61580187,\n      \"permission\": \"esse aliquip laborum commodo tem\",\n      \"runtime_version\": \"aliqua esse\",\n      \"runtime_language\": \"aliqu\",\n      \"layers\": [\n        {\n          \"arn\": \"incididunt aute occaecat\",\n          \"name\": \"reprehenderit laboris\",\n          \"created_date\": \"est\",\n          \"version_arn\": \"elit dolore eiusmod fugiat\",\n          \"version\": -37030493.71748985\n        },\n        {\n          \"arn\": \"anim voluptate amet\",\n          \"name\": \"deserunt cupidatat ut\",\n          \"created_date\": \"eu sit non\",\n          \"version_arn\": \"reprehenderit tempor ex\",\n          \"version\": -5128906.0480505675\n        }\n      ],\n      \"role_id\": \"dolor sunt\",\n      \"role_resources\": [\n        {\n          \"name\": \"ut sunt nisi do\",\n          \"actions\": [\n            \"sunt velit irure fugiat ipsum\",\n            \"ipsum velit nulla\"\n          ],\n          \"last_usage\": -7881567.584749892,\n          \"severity\": 44151832.01010904,\n          \"issue\": \"reprehenderit mollit dolore\"\n        },\n        {\n          \"name\": \"ipsum anim\",\n          \"actions\": [\n            \"do esse minim elit in\",\n            \"nisi ut labore in ut\"\n          ],\n          \"last_usage\": 43630820.55780089,\n          \"severity\": 90398956.73485506,\n          \"issue\": \"ut ea\"\n        }\n      ],\n      \"role_managed\": true,\n      \"role_common\": 46715782.162242055,\n      \"role_error\": \"irure nostrud pariatur ad\",\n      \"num_permissive\": -93059456.3888302,\n      \"num_unused\": 38376645.11015588,\n      \"num_known\": -25816591.700576946\n    }\n  ],\n  \"delete_all\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions/delete",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions",
														"delete"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Get a serverless function",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/serverless/functions/:project/:function",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"serverless",
												"functions",
												":project",
												":function"
											],
											"variable": [
												{
													"key": "project",
													"value": "cillum exercitation",
													"description": "(Required) Project name"
												},
												{
													"key": "function",
													"value": "cillum exercitation",
													"description": "(Required) Function name"
												}
											]
										},
										"description": "Get information about a specific serverless function, according to the function and application name"
									},
									"response": [
										{
											"name": "Serverless function listed successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions/:project/:function",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions",
														":project",
														":function"
													],
													"variable": [
														{
															"key": "project",
															"value": "cillum exercitation",
															"description": "(Required) Project name"
														},
														{
															"key": "function",
															"value": "cillum exercitation",
															"description": "(Required) Function name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"function_id\": \"proident veniam consequat\",\n  \"name\": \"id\",\n  \"project\": \"anim Lorem culpa adipisicing\",\n  \"description\": \"deserunt pariatur culpa qui est\",\n  \"digest\": \"ut culpa \",\n  \"crit_vulns\": 33133692.260483637,\n  \"high_vulns\": 64594253.99102864,\n  \"low_vulns\": -10222373.745547086,\n  \"neg_vulns\": 45707202.63269475,\n  \"sensitive\": 43161469.922409564,\n  \"vulns_found\": 97569075.62405893,\n  \"malware\": 72837386.66910732,\n  \"version\": \"nostrud i\",\n  \"handler\": \"ex nisi\",\n  \"last_scan\": \"2012-05-30T20:24:00.648Z\",\n  \"scan_status\": \"id consectetur officia\",\n  \"tags\": [\n    \"ad consectetur culpa proident labore\",\n    \"pariatur labore irure id nostrud\"\n  ],\n  \"environments\": [\n    \"quis\",\n    \"laboris dolor nostrud do\"\n  ],\n  \"invocations\": -11296558.162162334,\n  \"durationsAverage\": 98032242.38222125,\n  \"triggers\": [\n    \"in aliquip non \",\n    \"pariatur Ut reprehenderit\"\n  ],\n  \"sensitive_environments\": [\n    \"sed deserunt nulla\",\n    \"quis\"\n  ],\n  \"scan_warnings\": [\n    \"ullamco consectetur ad anim minim\",\n    \"nostrud eu\"\n  ],\n  \"last_modified\": \"2013-03-21T16:58:32.767Z\",\n  \"scan_error\": \"mollit aliquip ut\",\n  \"permissive\": false,\n  \"blocked\": true,\n  \"blocked_by\": \"voluptate labore sint\",\n  \"disallowed\": true,\n  \"have_assurance_policy\": [\n    {\n      \"policy_name\": \"ea in quis\",\n      \"control\": \"voluptate \",\n      \"failed\": false\n    },\n    {\n      \"policy_name\": \"amet velit quis consequat\",\n      \"control\": \"ut proident\",\n      \"failed\": true\n    }\n  ],\n  \"assurance_results\": \"sed dolor minim velit\",\n  \"assurance_failed\": false,\n  \"assurance_failure\": \"exercitation commodo nisi\",\n  \"block_failed\": true,\n  \"block_failure\": \"dolor id\",\n  \"unblock_failed\": true,\n  \"unblock_failure\": \"quis\",\n  \"layers_arn\": [\n    \"occaecat\",\n    \"cupidatat id\"\n  ],\n  \"concurrency_enabled\": false,\n  \"concurrency_reserve\": -10448651.001069903,\n  \"permission\": \"v\",\n  \"runtime_version\": \"officia pariatur\",\n  \"runtime_language\": \"laboris eiusmod Lorem consequat\",\n  \"layers\": [\n    {\n      \"arn\": \"eu ad est\",\n      \"name\": \"elit dolore\",\n      \"created_date\": \"dolor minim in ad cillum\",\n      \"version_arn\": \"veniam laboris cillum\",\n      \"version\": -27104072.99287492\n    },\n    {\n      \"arn\": \"aute amet ad ut\",\n      \"name\": \"dolor Excepteur exercitatio\",\n      \"created_date\": \"ut Ut\",\n      \"version_arn\": \"eiusmod mollit laborum\",\n      \"version\": -30662926.841873527\n    }\n  ],\n  \"role_id\": \"u\",\n  \"role_resources\": [\n    {\n      \"name\": \"cupidatat nulla incididunt\",\n      \"actions\": [\n        \"adipisicing eu cil\",\n        \"do aliqua irure veniam Excepteur\"\n      ],\n      \"last_usage\": -127421.5803578049,\n      \"severity\": -88713147.91417918,\n      \"issue\": \"et ut ex aute\"\n    },\n    {\n      \"name\": \"Lorem proident ullamco ut\",\n      \"actions\": [\n        \"non nisi do\",\n        \"cillum eiusmod\"\n      ],\n      \"last_usage\": 82043370.15416256,\n      \"severity\": -1282627.1396019906,\n      \"issue\": \"cillum ut\"\n    }\n  ],\n  \"role_managed\": false,\n  \"role_common\": 72221397.90932381,\n  \"role_error\": \"consectetur anim\",\n  \"num_permissive\": 92207195.83116361,\n  \"num_unused\": 86884738.17814377,\n  \"num_known\": -68467224.34980932\n}"
										},
										{
											"name": "Input error - correct before resubmitting",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions/:project/:function",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions",
														":project",
														":function"
													],
													"variable": [
														{
															"key": "project",
															"value": "cillum exercitation",
															"description": "(Required) Project name"
														},
														{
															"key": "function",
															"value": "cillum exercitation",
															"description": "(Required) Function name"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Internal error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/serverless/functions/:project/:function",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"serverless",
														"functions",
														":project",
														":function"
													],
													"variable": [
														{
															"key": "project",
															"value": "cillum exercitation",
															"description": "(Required) Project name"
														},
														{
															"key": "function",
															"value": "cillum exercitation",
															"description": "(Required) Function name"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "VMs",
					"item": [
						{
							"name": "Get list of VMs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/infrastructure?page_size=-96481460&page=-96481460&enforced=true",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"infrastructure"
									],
									"query": [
										{
											"key": "page_size",
											"value": "-96481460",
											"description": "The maximum number of images to be listed"
										},
										{
											"key": "page",
											"value": "-96481460",
											"description": "List images from the specified page of results"
										},
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Set ordering of the returned results. Can be repeated to order the results by multiple attributes. Allowed attributes are 'name', 'type', 'author'. Prefix any attribute with '-' to reverse the order.",
											"disabled": true
										},
										{
											"key": "search",
											"value": "cillum exercitation",
											"description": "Search string; display only matching items",
											"disabled": true
										},
										{
											"key": "type",
											"value": "cillum exercitation",
											"description": "Indicate if only 'nodes' or 'clusters' should be included",
											"disabled": true
										},
										{
											"key": "enforced",
											"value": "true",
											"description": "Indicate if assets should enforce policies"
										}
									]
								},
								"description": "Retrieve details of the hosts and clusters configured in the system"
							},
							"response": [
								{
									"name": "List all assets",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/infrastructure?page_size=-96481460&page=-96481460&order_by=cillum exercitation&search=cillum exercitation&type=cillum exercitation&enforced=true",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"infrastructure"
											],
											"query": [
												{
													"key": "page_size",
													"value": "-96481460"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "search",
													"value": "cillum exercitation"
												},
												{
													"key": "type",
													"value": "cillum exercitation"
												},
												{
													"key": "enforced",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 93129532,\n  \"page\": 27154196,\n  \"pagesize\": -88577857,\n  \"result\": [\n    {\n      \"cluster_id\": -20939784,\n      \"cluster_vulnerabilities\": {},\n      \"created_date\": \"voluptate\",\n      \"data\": {},\n      \"id\": -33842041,\n      \"is_enforced\": true,\n      \"name\": \"officia et elit sed\",\n      \"node_id\": \"consequat adipisicing et occaecat in\",\n      \"security_issues\": {\n        \"crit_vulns\": -97455374,\n        \"high_vulns\": 22793030,\n        \"last_vuln_scan\": -9799134,\n        \"low_vulns\": 43768910,\n        \"malware\": 26907990,\n        \"med_vulns\": 9261144,\n        \"neg_vulns\": -72312879\n      },\n      \"type\": \"in Excepteur culpa non\"\n    },\n    {\n      \"cluster_id\": 92891078,\n      \"cluster_vulnerabilities\": {},\n      \"created_date\": \"sed\",\n      \"data\": {},\n      \"id\": -13305448,\n      \"is_enforced\": false,\n      \"name\": \"velit adipisicing Lorem dolor\",\n      \"node_id\": \"anim Duis\",\n      \"security_issues\": {\n        \"crit_vulns\": 24985008,\n        \"high_vulns\": -83471626,\n        \"last_vuln_scan\": 28066347,\n        \"low_vulns\": 25727271,\n        \"malware\": 44486427,\n        \"med_vulns\": 2815992,\n        \"neg_vulns\": 23345828\n      },\n      \"type\": \"non\"\n    }\n  ]\n}"
								},
								{
									"name": "Could not get information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/infrastructure?page_size=-96481460&page=-96481460&order_by=cillum exercitation&search=cillum exercitation&type=cillum exercitation&enforced=true",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"infrastructure"
											],
											"query": [
												{
													"key": "page_size",
													"value": "-96481460"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "search",
													"value": "cillum exercitation"
												},
												{
													"key": "type",
													"value": "cillum exercitation"
												},
												{
													"key": "enforced",
													"value": "true"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Get details of VM by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/infrastructure/:id",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"infrastructure",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "cillum exercitation",
											"description": "(Required) Identify the asset by its 'node_id' value"
										}
									]
								},
								"description": "Retrieve details of the identified host or cluster in the system"
							},
							"response": [
								{
									"name": "Details of the named asset",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/infrastructure/:id",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"infrastructure",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "cillum exercitation",
													"description": "(Required) Identify the asset by its 'node_id' value"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"cluster_id\": -5036296,\n  \"cluster_vulnerabilities\": {},\n  \"created_date\": \"dolore Ut\",\n  \"data\": {},\n  \"id\": -81738357,\n  \"is_enforced\": false,\n  \"name\": \"in deserunt in\",\n  \"node_id\": \"voluptate sit occaecat\",\n  \"security_issues\": {\n    \"crit_vulns\": -37617695,\n    \"high_vulns\": 96376055,\n    \"last_vuln_scan\": 43819676,\n    \"low_vulns\": 95449023,\n    \"malware\": -3610517,\n    \"med_vulns\": 17250896,\n    \"neg_vulns\": -88629538\n  },\n  \"type\": \"in fugiat consequat\"\n}"
								},
								{
									"name": "Asset not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/infrastructure/:id",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"infrastructure",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "cillum exercitation",
													"description": "(Required) Identify the asset by its 'node_id' value"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "Kubernetes Resources",
					"item": [
						{
							"name": "Get list of K8s Resources",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/kubernetesresources?page_size=100&page=1&get_by=resources",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"kubernetesresources"
									],
									"query": [
										{
											"key": "page_size",
											"value": "100",
											"description": "The maximum number of images to be listed"
										},
										{
											"key": "page",
											"value": "1",
											"description": "List images from the specified page of results"
										},
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Set ordering of the returned results. Can be repeated to order the results by multiple attributes. Allowed attributes are 'name', 'type', 'author'. Prefix any attribute with '-' to reverse the order.",
											"disabled": true
										},
										{
											"key": "get_by",
											"value": "resources",
											"description": "Indicate if only 'nodes' or 'clusters' should be included"
										},
										{
											"key": "namespace",
											"value": "name",
											"disabled": true
										},
										{
											"key": "type",
											"value": "deployment",
											"disabled": true
										}
									]
								},
								"description": "Retrieve details of the hosts and clusters configured in the system"
							},
							"response": [
								{
									"name": "List all assets",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/infrastructure?page_size=-96481460&page=-96481460&order_by=cillum exercitation&search=cillum exercitation&type=cillum exercitation&enforced=true",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"infrastructure"
											],
											"query": [
												{
													"key": "page_size",
													"value": "-96481460"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "search",
													"value": "cillum exercitation"
												},
												{
													"key": "type",
													"value": "cillum exercitation"
												},
												{
													"key": "enforced",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 93129532,\n  \"page\": 27154196,\n  \"pagesize\": -88577857,\n  \"result\": [\n    {\n      \"cluster_id\": -20939784,\n      \"cluster_vulnerabilities\": {},\n      \"created_date\": \"voluptate\",\n      \"data\": {},\n      \"id\": -33842041,\n      \"is_enforced\": true,\n      \"name\": \"officia et elit sed\",\n      \"node_id\": \"consequat adipisicing et occaecat in\",\n      \"security_issues\": {\n        \"crit_vulns\": -97455374,\n        \"high_vulns\": 22793030,\n        \"last_vuln_scan\": -9799134,\n        \"low_vulns\": 43768910,\n        \"malware\": 26907990,\n        \"med_vulns\": 9261144,\n        \"neg_vulns\": -72312879\n      },\n      \"type\": \"in Excepteur culpa non\"\n    },\n    {\n      \"cluster_id\": 92891078,\n      \"cluster_vulnerabilities\": {},\n      \"created_date\": \"sed\",\n      \"data\": {},\n      \"id\": -13305448,\n      \"is_enforced\": false,\n      \"name\": \"velit adipisicing Lorem dolor\",\n      \"node_id\": \"anim Duis\",\n      \"security_issues\": {\n        \"crit_vulns\": 24985008,\n        \"high_vulns\": -83471626,\n        \"last_vuln_scan\": 28066347,\n        \"low_vulns\": 25727271,\n        \"malware\": 44486427,\n        \"med_vulns\": 2815992,\n        \"neg_vulns\": 23345828\n      },\n      \"type\": \"non\"\n    }\n  ]\n}"
								},
								{
									"name": "Could not get information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/infrastructure?page_size=-96481460&page=-96481460&order_by=cillum exercitation&search=cillum exercitation&type=cillum exercitation&enforced=true",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"infrastructure"
											],
											"query": [
												{
													"key": "page_size",
													"value": "-96481460"
												},
												{
													"key": "page",
													"value": "-96481460"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "search",
													"value": "cillum exercitation"
												},
												{
													"key": "type",
													"value": "cillum exercitation"
												},
												{
													"key": "enforced",
													"value": "true"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Risks",
			"item": [
				{
					"name": "acknowledge",
					"item": [
						{
							"name": "List acknowledged security issues",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/risks/acknowledge",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"risks",
										"acknowledge"
									],
									"query": [
										{
											"key": "issue_type",
											"value": "cillum exercitation",
											"description": "Limit results to security issues of a specific type ('vulnerability', 'sensitive_data' or 'malware')",
											"disabled": true
										},
										{
											"key": "page",
											"value": "cillum exercitation",
											"description": "List issues from the specified page of results",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "cillum exercitation",
											"description": "The maximum number of security issues to be listed",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Set ordering of the returned results. Can be repeated to order the results by multiple attributes. Allowed attributes are 'issue_type', 'issue_name', 'date', 'resource', 'registry', 'image' and 'repository'. Prefix any attribute with '-' to the reverse order.",
											"disabled": true
										}
									]
								},
								"description": "List acknowledged security issues"
							},
							"response": [
								{
									"name": "Acknowledged security issues successfully listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/acknowledge?issue_type=cillum exercitation&page=cillum exercitation&page_size=cillum exercitation&order_by=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"acknowledge"
											],
											"query": [
												{
													"key": "issue_type",
													"value": "cillum exercitation"
												},
												{
													"key": "page",
													"value": "cillum exercitation"
												},
												{
													"key": "page_size",
													"value": "cillum exercitation"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 62473151,\n  \"page\": 97466455,\n  \"pagesize\": 71701511,\n  \"result\": [\n    {\n      \"issue_type\": \"sit id\",\n      \"resource_type\": \"in dolore\",\n      \"issue_name\": \"Excepteur ut ipsum\",\n      \"registry\": \"minim ut id sunt commodo\",\n      \"repository\": \"dolore amet consectetur fugia\",\n      \"image\": \"dolore laborum aliquip et\",\n      \"resource_cpe\": \"esse commodo in nostrud\",\n      \"resource_name\": \"reprehenderit deserunt est ut\",\n      \"resource_version\": \"proident eiusmod ea\",\n      \"resource_hash\": \"elit velit dolore consequat reprehenderit\",\n      \"resource_path\": \"nostrud Lorem Excepteur est\",\n      \"comment\": \"magna non ut\",\n      \"author\": \"amet do consect\",\n      \"date\": \"Duis quis aute Ut eu\"\n    },\n    {\n      \"issue_type\": \"ut consectetur\",\n      \"resource_type\": \"est nulla sint\",\n      \"issue_name\": \"veniam nisi sed\",\n      \"registry\": \"pariatur laborum sint\",\n      \"repository\": \"dolor ad ipsum\",\n      \"image\": \"occaecat\",\n      \"resource_cpe\": \"elit et\",\n      \"resource_name\": \"esse in\",\n      \"resource_version\": \"do dolor\",\n      \"resource_hash\": \"adipisicing in nisi cupidatat tempor\",\n      \"resource_path\": \"velit\",\n      \"comment\": \"v\",\n      \"author\": \"ut do pariatur mollit\",\n      \"date\": \"ut magna esse\"\n    }\n  ]\n}"
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/acknowledge?issue_type=cillum exercitation&page=cillum exercitation&page_size=cillum exercitation&order_by=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"acknowledge"
											],
											"query": [
												{
													"key": "issue_type",
													"value": "cillum exercitation"
												},
												{
													"key": "page",
													"value": "cillum exercitation"
												},
												{
													"key": "page_size",
													"value": "cillum exercitation"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Acknowledge security issues",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"issues\": [\n    {\n      \"issue_type\": \"elit do\",\n      \"issue_name\": \"laborum enim\",\n      \"resource_type\": \"mollit dolor Lorem\",\n      \"repository_name\": \"cupidatat nulla Excepteur\",\n      \"image_name\": \"voluptate proident id\",\n      \"registry_name\": \"Lorem in ex commodo\",\n      \"resource_cpe\": \"sunt esse\",\n      \"resource_path\": \"aliqua adipisicing\",\n      \"resource_hash\": \"amet ea\",\n      \"resource_name\": \"consectetur tempor ut\",\n      \"resource_version\": \"aute qui\",\n      \"os\": \"incididunt magna do aute est\",\n      \"os_version\": \"labore\",\n      \"comment\": \"labore laborum proident sit\",\n      \"expiration_days\": -92819949\n    },\n    {\n      \"issue_type\": \"non in\",\n      \"issue_name\": \"eu sint fugiat\",\n      \"resource_type\": \"dolor in dolore\",\n      \"repository_name\": \"Ut sunt ex et\",\n      \"image_name\": \"dolore aliqua officia dolor\",\n      \"registry_name\": \"nisi fugiat occaecat commodo\",\n      \"resource_cpe\": \"ea tempor fugiat est\",\n      \"resource_path\": \"et cillum tempor\",\n      \"resource_hash\": \"ipsum pariatur sint\",\n      \"resource_name\": \"aliquip Ut consequat\",\n      \"resource_version\": \"Excepteur cupidatat do\",\n      \"os\": \"adipisicing aliqua sed occaecat officia\",\n      \"os_version\": \"consectetur dolore exercitation\",\n      \"comment\": \"Lorem voluptate quis\",\n      \"expiration_days\": -10446932\n    }\n  ],\n  \"comment\": \"non sit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/risks/acknowledge",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"risks",
										"acknowledge"
									]
								},
								"description": "Acknowledge security issues"
							},
							"response": [
								{
									"name": "Security issues successfully acknowledged",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"issues\": [\n    {\n      \"issue_type\": \"proident consectetur sit nisi\",\n      \"issue_name\": \"ut\",\n      \"resource_type\": \"Excepteur et sed aliquip\",\n      \"repository_name\": \"deserunt tempor amet\",\n      \"image_name\": \"commod\",\n      \"registry_name\": \"tempor commodo ut do sit\",\n      \"resource_cpe\": \"dolore do mollit f\",\n      \"resource_path\": \"occaecat tempor ut nulla\",\n      \"resource_hash\": \"dolore culpa sint amet voluptate\",\n      \"resource_name\": \"amet fugiat minim\",\n      \"resource_version\": \"et amet exercitation\",\n      \"os\": \"cillum aliqua consectetur consequa\",\n      \"os_version\": \"velit labore sint sit\",\n      \"comment\": \"incididunt cillum\",\n      \"expiration_days\": 23753295\n    },\n    {\n      \"issue_type\": \"officia Lorem\",\n      \"issue_name\": \"sint ad\",\n      \"resource_type\": \"sed est\",\n      \"repository_name\": \"adipisicing est consequat do aute\",\n      \"image_name\": \"sit commodo nostrud anim\",\n      \"registry_name\": \"dolor\",\n      \"resource_cpe\": \"sed ipsum\",\n      \"resource_path\": \"consequat\",\n      \"resource_hash\": \"proident do cillum sed laborum\",\n      \"resource_name\": \"aliquip\",\n      \"resource_version\": \"amet dolore Duis labore\",\n      \"os\": \"dolore occaecat aliqua esse\",\n      \"os_version\": \"laborum mollit\",\n      \"comment\": \"voluptate\",\n      \"expiration_days\": 91928275\n    }\n  ],\n  \"comment\": \"do dolore aliqua Lorem nisi\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/risks/acknowledge",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"acknowledge"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"issues\": [\n    {\n      \"issue_type\": \"proident consectetur sit nisi\",\n      \"issue_name\": \"ut\",\n      \"resource_type\": \"Excepteur et sed aliquip\",\n      \"repository_name\": \"deserunt tempor amet\",\n      \"image_name\": \"commod\",\n      \"registry_name\": \"tempor commodo ut do sit\",\n      \"resource_cpe\": \"dolore do mollit f\",\n      \"resource_path\": \"occaecat tempor ut nulla\",\n      \"resource_hash\": \"dolore culpa sint amet voluptate\",\n      \"resource_name\": \"amet fugiat minim\",\n      \"resource_version\": \"et amet exercitation\",\n      \"os\": \"cillum aliqua consectetur consequa\",\n      \"os_version\": \"velit labore sint sit\",\n      \"comment\": \"incididunt cillum\",\n      \"expiration_days\": 23753295\n    },\n    {\n      \"issue_type\": \"officia Lorem\",\n      \"issue_name\": \"sint ad\",\n      \"resource_type\": \"sed est\",\n      \"repository_name\": \"adipisicing est consequat do aute\",\n      \"image_name\": \"sit commodo nostrud anim\",\n      \"registry_name\": \"dolor\",\n      \"resource_cpe\": \"sed ipsum\",\n      \"resource_path\": \"consequat\",\n      \"resource_hash\": \"proident do cillum sed laborum\",\n      \"resource_name\": \"aliquip\",\n      \"resource_version\": \"amet dolore Duis labore\",\n      \"os\": \"dolore occaecat aliqua esse\",\n      \"os_version\": \"laborum mollit\",\n      \"comment\": \"voluptate\",\n      \"expiration_days\": 91928275\n    }\n  ],\n  \"comment\": \"do dolore aliqua Lorem nisi\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/risks/acknowledge",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"acknowledge"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Unacknowledge security issues",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/risks/acknowledge/multiple",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"risks",
										"acknowledge",
										"multiple"
									]
								},
								"description": "Unacknowledge multiple security issues in a single API call"
							},
							"response": [
								{
									"name": "Issues successfully unacknowledged",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "issues,[object Object],[object Object],comment,do dolore aliqua Lorem nisi",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/acknowledge/multiple",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"acknowledge",
												"multiple"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "issues,[object Object],[object Object],comment,<string>",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/acknowledge/multiple",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"acknowledge",
												"multiple"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "vulnerabilities",
					"item": [
						{
							"name": "csv",
							"item": [
								{
									"name": "Generate vulnerabilities report (CSV)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"vpatch_filter\": {\n    \"include_vpatch_info\": false,\n    \"show_negligible\": false,\n    \"page\": -95837443,\n    \"pagesize\": -67432211,\n    \"image_name\": \"laboris veniam\",\n    \"patch_status\": \"amet \",\n    \"text_search\": \"\",\n    \"severity\": \"reprehende\"\n  },\n  \"uncompressed\": true,\n  \"include_vpatch_info\": true,\n  \"isFilterApplied\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/risks/vulnerabilities/csv",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"vulnerabilities",
												"csv"
											]
										},
										"description": "Generate CSV file containing all vulnerabilities in the system.\nUse token for retrieving the file once the report is ready."
									},
									"response": [
										{
											"name": "Generate CSV export file containing all vulnerabilities",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"vpatch_filter\": {\n    \"include_vpatch_info\": false,\n    \"show_negligible\": false,\n    \"page\": -95837443,\n    \"pagesize\": -67432211,\n    \"image_name\": \"laboris veniam\",\n    \"patch_status\": \"amet \",\n    \"text_search\": \"\",\n    \"severity\": \"reprehende\"\n  },\n  \"uncompressed\": true,\n  \"include_vpatch_info\": true,\n  \"isFilterApplied\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/risks/vulnerabilities/csv",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"vulnerabilities",
														"csv"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"token\": \"veniam cupidatat deserunt ullamco\"\n}"
										},
										{
											"name": "Failed generating CVE export file",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"vpatch_filter\": {\n    \"include_vpatch_info\": false,\n    \"show_negligible\": false,\n    \"page\": -95837443,\n    \"pagesize\": -67432211,\n    \"image_name\": \"laboris veniam\",\n    \"patch_status\": \"amet \",\n    \"text_search\": \"\",\n    \"severity\": \"reprehende\"\n  },\n  \"uncompressed\": true,\n  \"include_vpatch_info\": true,\n  \"isFilterApplied\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{aqua_url_v2}}/risks/vulnerabilities/csv",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"vulnerabilities",
														"csv"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieve generated CVE report",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/vulnerabilities/csv",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"vulnerabilities",
												"csv"
											],
											"query": [
												{
													"key": "uid",
													"value": "cillum exercitation",
													"description": "(Required) Token returned by the server after the POST request to create a CVE export file",
													"disabled": true
												}
											]
										},
										"description": "Retrieve CSV file with generated token"
									},
									"response": [
										{
											"name": "Returned CVE export file",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/vulnerabilities/csv?uid=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"vulnerabilities",
														"csv"
													],
													"query": [
														{
															"key": "uid",
															"value": "cillum exercitation"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed getting CVE export file",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/vulnerabilities/csv?uid=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"vulnerabilities",
														"csv"
													],
													"query": [
														{
															"key": "uid",
															"value": "cillum exercitation"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieve the status of CVE export file",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/vulnerabilities/csv/status",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"vulnerabilities",
												"csv",
												"status"
											],
											"query": [
												{
													"key": "uid",
													"value": "cillum exercitation",
													"description": "(Required) Token returned by the server after the POST request to create a CVE export file",
													"disabled": true
												}
											]
										},
										"description": "Retrieves the status of a CVE export file by token"
									},
									"response": [
										{
											"name": "Export file status update",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/vulnerabilities/csv/status?uid=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"vulnerabilities",
														"csv",
														"status"
													],
													"query": [
														{
															"key": "uid",
															"value": "cillum exercitation"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"num_results\": -83567159,\n  \"status\": \"id elit deserunt sunt\"\n}"
										},
										{
											"name": "Export file creation had failed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/vulnerabilities/csv/status?uid=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"vulnerabilities",
														"csv",
														"status"
													],
													"query": [
														{
															"key": "uid",
															"value": "cillum exercitation"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List all image vulnerabilities",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/hub/findings/vulnerabilities/images/list?page=1&pagesize=100&show_negligible=true",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"hub",
										"findings",
										"vulnerabilities",
										"images",
										"list"
									],
									"query": [
										{
											"key": "severity",
											"value": "cillum exercitation",
											"description": "List only vulnerabilities of the specified severity",
											"disabled": true
										},
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Set ordering of returned results. Can be repeated to order by multiple attributes. Allowed attributes are 'vulnerability', 'publish_date', 'modification_date', 'vendor_seveity', 'vendor_score', 'nvd_severity', 'nvd_score', 'resource', 'resource_type', 'registry', 'image', 'parent'. Prefix any attribute with '-' to reverse the order.",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "List vulnerabilities from the specified page of results"
										},
										{
											"key": "pagesize",
											"value": "100",
											"description": "The maximum number of vulnerabilities to be listed"
										},
										{
											"key": "image_name",
											"value": "cillum exercitation",
											"description": "Container image name",
											"disabled": true
										},
										{
											"key": "id",
											"value": "",
											"disabled": true
										},
										{
											"key": "show_negligible",
											"value": "true"
										},
										{
											"key": "search_attribute",
											"value": "image_name",
											"disabled": true
										},
										{
											"key": "search_value",
											"value": "myname",
											"disabled": true
										},
										{
											"key": "search_operator",
											"value": "like",
											"disabled": true
										},
										{
											"key": "severities",
											"value": "critical",
											"disabled": true
										}
									]
								},
								"description": "List all vulnerabilities found in images"
							},
							"response": [
								{
									"name": "Vulnerabilities successfully listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/vulnerabilities?show_negligible=true&hide_base_image=true&text_search=cillum exercitation&severity=cillum exercitation&order_by=cillum exercitation&page=cillum exercitation&pagesize=cillum exercitation&include_vpatch_info=true&image_name=cillum exercitation&fix_availability=true&acknowledge_status=true&layer_position=cillum exercitation&namespace_names=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"vulnerabilities"
											],
											"query": [
												{
													"key": "show_negligible",
													"value": "true"
												},
												{
													"key": "hide_base_image",
													"value": "true"
												},
												{
													"key": "text_search",
													"value": "cillum exercitation"
												},
												{
													"key": "severity",
													"value": "cillum exercitation"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "page",
													"value": "cillum exercitation"
												},
												{
													"key": "pagesize",
													"value": "cillum exercitation"
												},
												{
													"key": "include_vpatch_info",
													"value": "true"
												},
												{
													"key": "image_name",
													"value": "cillum exercitation"
												},
												{
													"key": "fix_availability",
													"value": "true"
												},
												{
													"key": "acknowledge_status",
													"value": "true"
												},
												{
													"key": "layer_position",
													"value": "cillum exercitation"
												},
												{
													"key": "namespace_names",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 62930654,\n  \"page\": 73639960,\n  \"pagesize\": 77336595,\n  \"result\": [\n    {\n      \"name\": \"dolor proident amet qui\",\n      \"description\": \"sunt Duis sit fugiat aute\",\n      \"publish_date\": \"deserunt ullamco aute\",\n      \"modification_date\": \"elit\",\n      \"aqua_severity\": \"est laborum\",\n      \"aqua_score\": 68881663.87853056,\n      \"aqua_vectors\": \"commodo Lorem\",\n      \"aqua_scoring_system\": \"fugiat eu\",\n      \"vendor_severity\": \"labore occaecat\",\n      \"vendor_cvss2_score\": -3349982.1457161307,\n      \"vendor_cvss2_vectors\": \"tempor incididunt ullamco\",\n      \"vendor_cvss3_score\": -4771874.31525144,\n      \"vendor_cvss3_vectors\": \"reprehenderit Ut in\",\n      \"vendor_statement\": \"sed no\",\n      \"vendor_url\": \"commodo ullamco\",\n      \"nvd_severity\": \"cupidatat pariatur\",\n      \"nvd_cvss2_score\": 98253287.46531823,\n      \"nvd_cvss2_vectors\": \"ad\",\n      \"nvd_cvss3_score\": -45994841.12464043,\n      \"nvd_cvss3_vectors\": \"nulla dolor voluptate\",\n      \"nvd_url\": \"enim commodo velit dolor\",\n      \"fix_version\": \"commodo minim nisi\",\n      \"solution\": \"nostrud consectetur\",\n      \"classification\": \"qui\",\n      \"parent\": \"sunt id Ut nulla nostrud\",\n      \"qualys_ids\": [\n        \"labore\",\n        \"amet enim pariatur\"\n      ],\n      \"resource\": {\n        \"type\": \"voluptate\",\n        \"cpe\": \"in dolor\",\n        \"format\": \"labore sed\",\n        \"path\": \"nulla enim in occaecat dol\",\n        \"name\": \"ipsum tempor esse\",\n        \"version\": \"Ut Excepteur ullamco cupidatat\",\n        \"arch\": \"exercitation in labore\",\n        \"licenses\": [\n          \"deserunt Excepteur\",\n          \"sunt aliquip in\"\n        ],\n        \"hash\": \"sit sed\"\n      },\n      \"registry\": \"ut sed sint ullamco\",\n      \"image_name\": \"laborum amet commodo ut\",\n      \"image_repository_name\": \"pariatur cillum nulla labore\",\n      \"image_digest\": \"laboris nisi consectetur velit\",\n      \"referenced_vulnerabilities\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/ImageVulnerability detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/ImageVulnerability detected>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"anim aliquip\",\n      \"description\": \"deserunt minim in\",\n      \"publish_date\": \"dolore est officia\",\n      \"modification_date\": \"cupidatat off\",\n      \"aqua_severity\": \"in\",\n      \"aqua_score\": 84880085.58734927,\n      \"aqua_vectors\": \"minim ipsum ea\",\n      \"aqua_scoring_system\": \"irure consequat ipsum\",\n      \"vendor_severity\": \"dolor fugiat consectetur ad\",\n      \"vendor_cvss2_score\": -2751132.4531822354,\n      \"vendor_cvss2_vectors\": \"non\",\n      \"vendor_cvss3_score\": -66091167.266801596,\n      \"vendor_cvss3_vectors\": \"quis dolor amet eiusmod\",\n      \"vendor_statement\": \"culpa cupidatat\",\n      \"vendor_url\": \"et officia\",\n      \"nvd_severity\": \"dolore est \",\n      \"nvd_cvss2_score\": 51724447.6879012,\n      \"nvd_cvss2_vectors\": \"adipisicing occaecat\",\n      \"nvd_cvss3_score\": 54615177.32480407,\n      \"nvd_cvss3_vectors\": \"offi\",\n      \"nvd_url\": \"reprehenderit id anim\",\n      \"fix_version\": \"id pariatur in\",\n      \"solution\": \"laborum ut consectetur\",\n      \"classification\": \"ullamco est ut\",\n      \"parent\": \"id minim\",\n      \"qualys_ids\": [\n        \"occaecat et anim\",\n        \"sed sit\"\n      ],\n      \"resource\": {\n        \"type\": \"esse\",\n        \"cpe\": \"in ut quis occaeca\",\n        \"format\": \"sunt \",\n        \"path\": \"eiusmod commodo dolor\",\n        \"name\": \"eiusmod Duis\",\n        \"version\": \"ad dolor adipisicing velit\",\n        \"arch\": \"veniam occaecat adipisicing dolor\",\n        \"licenses\": [\n          \"laboris dolore\",\n          \"cupidatat\"\n        ],\n        \"hash\": \"laborum aute\"\n      },\n      \"registry\": \"ipsum enim pariatur consequat\",\n      \"image_name\": \"reprehende\",\n      \"image_repository_name\": \"consectetur nostrud consequat ea\",\n      \"image_digest\": \"nostrud minim cupidatat nisi qui\",\n      \"referenced_vulnerabilities\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/ImageVulnerability detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/ImageVulnerability detected>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Invalid or missing input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/vulnerabilities?show_negligible=true&hide_base_image=true&text_search=cillum exercitation&severity=cillum exercitation&order_by=cillum exercitation&page=cillum exercitation&pagesize=cillum exercitation&include_vpatch_info=true&image_name=cillum exercitation&fix_availability=true&acknowledge_status=true&layer_position=cillum exercitation&namespace_names=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"vulnerabilities"
											],
											"query": [
												{
													"key": "show_negligible",
													"value": "true"
												},
												{
													"key": "hide_base_image",
													"value": "true"
												},
												{
													"key": "text_search",
													"value": "cillum exercitation"
												},
												{
													"key": "severity",
													"value": "cillum exercitation"
												},
												{
													"key": "order_by",
													"value": "cillum exercitation"
												},
												{
													"key": "page",
													"value": "cillum exercitation"
												},
												{
													"key": "pagesize",
													"value": "cillum exercitation"
												},
												{
													"key": "include_vpatch_info",
													"value": "true"
												},
												{
													"key": "image_name",
													"value": "cillum exercitation"
												},
												{
													"key": "fix_availability",
													"value": "true"
												},
												{
													"key": "acknowledge_status",
													"value": "true"
												},
												{
													"key": "layer_position",
													"value": "cillum exercitation"
												},
												{
													"key": "namespace_names",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "bench",
					"item": [
						{
							"name": "{type}",
							"item": [
								{
									"name": "hosts",
									"item": [
										{
											"name": "Get compact bench results (of a given type) for all hosts",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v1}}/risks/bench/:type/hosts",
													"host": [
														"{{aqua_url_v1}}"
													],
													"path": [
														"risks",
														"bench",
														":type",
														"hosts"
													],
													"query": [
														{
															"key": "search",
															"value": "cillum exercitation",
															"description": "Text search",
															"disabled": true
														},
														{
															"key": "config_file_name",
															"value": "cillum exercitation",
															"description": "Config file name",
															"disabled": true
														},
														{
															"key": "scope",
															"value": "cillum exercitation",
															"description": "Application scope",
															"disabled": true
														},
														{
															"key": "orderby",
															"value": "cillum exercitation",
															"description": "Order by",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "type",
															"value": "cillum exercitation",
															"description": "(Required) Type of bench"
														}
													]
												},
												"description": "Get bench results (of a given type) for all hosts in a compact format"
											},
											"response": [
												{
													"name": "List of hosts and their bench results",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v1}}/risks/bench/:type/hosts?search=cillum exercitation&config_file_name=cillum exercitation&scope=cillum exercitation&orderby=cillum exercitation",
															"host": [
																"{{aqua_url_v1}}"
															],
															"path": [
																"risks",
																"bench",
																":type",
																"hosts"
															],
															"query": [
																{
																	"key": "search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "config_file_name",
																	"value": "cillum exercitation"
																},
																{
																	"key": "scope",
																	"value": "cillum exercitation"
																},
																{
																	"key": "orderby",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "type",
																	"value": "cillum exercitation",
																	"description": "(Required) Type of bench"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"query\": {\n    \"address\": \"ipsum commodo esse laboris\",\n    \"batch_name\": \"irure cupidatat laborum\",\n    \"compliant\": \"dolor voluptate\",\n    \"config_file_name\": \"et Excepteur nulla\",\n    \"cve\": \"enim\",\n    \"enforcer_type\": \"dolore Excepteur occaecat\",\n    \"image_id\": \"ex voluptate sint cupidatat\",\n    \"image_name\": \"aute qui ut mollit\",\n    \"kube_enforcer_id\": \"aliqua magna elit sint velit\",\n    \"machine_ids\": [\n      \"et sed occaecat Ut mi\",\n      \"deserunt\"\n    ],\n    \"orderby\": \"dolore sint\",\n    \"scope\": \"id\",\n    \"search\": \"quis enim exercitation ea\",\n    \"server_id\": \"fugiat dolore voluptate no\",\n    \"status\": \"in elit\"\n  },\n  \"count\": 2,\n  \"is_estimated_count\": true,\n  \"page\": 2,\n  \"pagesize\": 10,\n  \"result\": [\n    {\n      \"host\": {\n        \"file\": \"Duis ut laborum dolor\",\n        \"id\": \"consequat ex et in\",\n        \"logical_name\": \"in ea voluptate commodo\",\n        \"name\": \"ad commodo irure amet anim\"\n      },\n      \"result\": {\n        \"date\": \"2021-04-13T13:57:16Z\",\n        \"total_fail\": 10,\n        \"total_info\": 3,\n        \"total_pass\": 0,\n        \"total_warn\": 5\n      }\n    },\n    {\n      \"host\": {\n        \"file\": \"reprehenderit \",\n        \"id\": \"nisi eu qui\",\n        \"logical_name\": \"dolor\",\n        \"name\": \"commodo \"\n      },\n      \"result\": {\n        \"date\": \"2021-04-13T13:57:16Z\",\n        \"total_fail\": 10,\n        \"total_info\": 3,\n        \"total_pass\": 0,\n        \"total_warn\": 5\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Bench type does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v1}}/risks/bench/:type/hosts?search=cillum exercitation&config_file_name=cillum exercitation&scope=cillum exercitation&orderby=cillum exercitation",
															"host": [
																"{{aqua_url_v1}}"
															],
															"path": [
																"risks",
																"bench",
																":type",
																"hosts"
															],
															"query": [
																{
																	"key": "search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "config_file_name",
																	"value": "cillum exercitation"
																},
																{
																	"key": "scope",
																	"value": "cillum exercitation"
																},
																{
																	"key": "orderby",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "type",
																	"value": "cillum exercitation",
																	"description": "(Required) Type of bench"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Failed loading list of hosts and their bench results",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v1}}/risks/bench/:type/hosts?search=cillum exercitation&config_file_name=cillum exercitation&scope=cillum exercitation&orderby=cillum exercitation",
															"host": [
																"{{aqua_url_v1}}"
															],
															"path": [
																"risks",
																"bench",
																":type",
																"hosts"
															],
															"query": [
																{
																	"key": "search",
																	"value": "cillum exercitation"
																},
																{
																	"key": "config_file_name",
																	"value": "cillum exercitation"
																},
																{
																	"key": "scope",
																	"value": "cillum exercitation"
																},
																{
																	"key": "orderby",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "type",
																	"value": "cillum exercitation",
																	"description": "(Required) Type of bench"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										},
										{
											"name": "Get concise bench results (of a given type) for all hosts",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/bench/:type/hosts/csv",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"bench",
														":type",
														"hosts",
														"csv"
													],
													"query": [
														{
															"key": "config_file_name",
															"value": "cillum exercitation",
															"description": "Config file name",
															"disabled": true
														},
														{
															"key": "scope",
															"value": "cillum exercitation",
															"description": "Application scope",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "type",
															"value": "cillum exercitation",
															"description": "(Required) Type of bench"
														}
													]
												},
												"description": "Get bench results (of a given type) for all hosts in a concise CSV format"
											},
											"response": [
												{
													"name": "List of hosts and their bench results",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/risks/bench/:type/hosts/csv?config_file_name=cillum exercitation&scope=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"risks",
																"bench",
																":type",
																"hosts",
																"csv"
															],
															"query": [
																{
																	"key": "config_file_name",
																	"value": "cillum exercitation"
																},
																{
																	"key": "scope",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "type",
																	"value": "cillum exercitation",
																	"description": "(Required) Type of bench"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/csv"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bench type does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/risks/bench/:type/hosts/csv?config_file_name=cillum exercitation&scope=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"risks",
																"bench",
																":type",
																"hosts",
																"csv"
															],
															"query": [
																{
																	"key": "config_file_name",
																	"value": "cillum exercitation"
																},
																{
																	"key": "scope",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "type",
																	"value": "cillum exercitation",
																	"description": "(Required) Type of bench"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												},
												{
													"name": "Failed loading list of hosts and their bench results",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "cillum exercitation",
																"description": "(Required) Authorization header must include Bearer token or Basic authentication"
															}
														],
														"url": {
															"raw": "{{aqua_url_v2}}/risks/bench/:type/hosts/csv?config_file_name=cillum exercitation&scope=cillum exercitation",
															"host": [
																"{{aqua_url_v2}}"
															],
															"path": [
																"risks",
																"bench",
																":type",
																"hosts",
																"csv"
															],
															"query": [
																{
																	"key": "config_file_name",
																	"value": "cillum exercitation"
																},
																{
																	"key": "scope",
																	"value": "cillum exercitation"
																}
															],
															"variable": [
																{
																	"key": "type",
																	"value": "cillum exercitation",
																	"description": "(Required) Type of bench"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get bench results of a given type (on all hosts)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/bench/:type/summary",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"bench",
												":type",
												"summary"
											],
											"query": [
												{
													"key": "search",
													"value": "cillum exercitation",
													"description": "Text search",
													"disabled": true
												},
												{
													"key": "config_file_name",
													"value": "cillum exercitation",
													"description": "Config file name",
													"disabled": true
												},
												{
													"key": "scope",
													"value": "cillum exercitation",
													"description": "Application scope",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "type",
													"value": "cillum exercitation",
													"description": "(Required) Type of bench"
												}
											]
										},
										"description": "Get a cumulative summary of all bench results of a given type (on all hosts)"
									},
									"response": [
										{
											"name": "Summary of bench results",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/bench/:type/summary?search=cillum exercitation&config_file_name=cillum exercitation&scope=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"bench",
														":type",
														"summary"
													],
													"query": [
														{
															"key": "search",
															"value": "cillum exercitation"
														},
														{
															"key": "config_file_name",
															"value": "cillum exercitation"
														},
														{
															"key": "scope",
															"value": "cillum exercitation"
														}
													],
													"variable": [
														{
															"key": "type",
															"value": "cillum exercitation",
															"description": "(Required) Type of bench"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"host_count\": 5,\n  \"totals\": {\n    \"date\": \"2021-04-13T13:57:16Z\",\n    \"total_fail\": 10,\n    \"total_info\": 3,\n    \"total_pass\": 0,\n    \"total_warn\": 5\n  }\n}"
										},
										{
											"name": "Bench type does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/bench/:type/summary?search=cillum exercitation&config_file_name=cillum exercitation&scope=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"bench",
														":type",
														"summary"
													],
													"query": [
														{
															"key": "search",
															"value": "cillum exercitation"
														},
														{
															"key": "config_file_name",
															"value": "cillum exercitation"
														},
														{
															"key": "scope",
															"value": "cillum exercitation"
														}
													],
													"variable": [
														{
															"key": "type",
															"value": "cillum exercitation",
															"description": "(Required) Type of bench"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Failed loading summary of bench results",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/bench/:type/summary?search=cillum exercitation&config_file_name=cillum exercitation&scope=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"bench",
														":type",
														"summary"
													],
													"query": [
														{
															"key": "search",
															"value": "cillum exercitation"
														},
														{
															"key": "config_file_name",
															"value": "cillum exercitation"
														},
														{
															"key": "scope",
															"value": "cillum exercitation"
														}
													],
													"variable": [
														{
															"key": "type",
															"value": "cillum exercitation",
															"description": "(Required) Type of bench"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								},
								{
									"name": "Get concise bench results of a given type and a given host",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/bench/:type/:host_id/csv",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"bench",
												":type",
												":host_id",
												"csv"
											],
											"query": [
												{
													"key": "config_file_name",
													"value": "cillum exercitation",
													"description": "Config file name",
													"disabled": true
												},
												{
													"key": "scope",
													"value": "cillum exercitation",
													"description": "Application scope",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "type",
													"value": "cillum exercitation",
													"description": "(Required) Type of bench"
												},
												{
													"key": "host_id",
													"value": "cillum exercitation",
													"description": "(Required) Host ID"
												}
											]
										},
										"description": "Get bench results of a given type and a given host in a concise CSV format"
									},
									"response": [
										{
											"name": "Bench results",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/bench/:type/:host_id/csv?config_file_name=cillum exercitation&scope=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"bench",
														":type",
														":host_id",
														"csv"
													],
													"query": [
														{
															"key": "config_file_name",
															"value": "cillum exercitation"
														},
														{
															"key": "scope",
															"value": "cillum exercitation"
														}
													],
													"variable": [
														{
															"key": "type",
															"value": "cillum exercitation",
															"description": "(Required) Type of bench"
														},
														{
															"key": "host_id",
															"value": "cillum exercitation",
															"description": "(Required) Host ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/csv"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bench type does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/bench/:type/:host_id/csv?config_file_name=cillum exercitation&scope=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"bench",
														":type",
														":host_id",
														"csv"
													],
													"query": [
														{
															"key": "config_file_name",
															"value": "cillum exercitation"
														},
														{
															"key": "scope",
															"value": "cillum exercitation"
														}
													],
													"variable": [
														{
															"key": "type",
															"value": "cillum exercitation",
															"description": "(Required) Type of bench"
														},
														{
															"key": "host_id",
															"value": "cillum exercitation",
															"description": "(Required) Host ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										},
										{
											"name": "Failed loading bench results",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "cillum exercitation",
														"description": "(Required) Authorization header must include Bearer token or Basic authentication"
													}
												],
												"url": {
													"raw": "{{aqua_url_v2}}/risks/bench/:type/:host_id/csv?config_file_name=cillum exercitation&scope=cillum exercitation",
													"host": [
														"{{aqua_url_v2}}"
													],
													"path": [
														"risks",
														"bench",
														":type",
														":host_id",
														"csv"
													],
													"query": [
														{
															"key": "config_file_name",
															"value": "cillum exercitation"
														},
														{
															"key": "scope",
															"value": "cillum exercitation"
														}
													],
													"variable": [
														{
															"key": "type",
															"value": "cillum exercitation",
															"description": "(Required) Type of bench"
														},
														{
															"key": "host_id",
															"value": "cillum exercitation",
															"description": "(Required) Host ID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get detailed bench results for a given host",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/risks/bench/:host_id/bench_results",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"risks",
										"bench",
										":host_id",
										"bench_results"
									],
									"query": [
										{
											"key": "scope",
											"value": "cillum exercitation",
											"description": "Application scope",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "host_id",
											"value": "cillum exercitation",
											"description": "(Required) Host ID"
										}
									]
								},
								"description": "Get all bench results for a given host in an detailed format"
							},
							"response": [
								{
									"name": "All bench results of a given host",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/bench/:host_id/bench_results?scope=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"bench",
												":host_id",
												"bench_results"
											],
											"query": [
												{
													"key": "scope",
													"value": "cillum exercitation"
												}
											],
											"variable": [
												{
													"key": "host_id",
													"value": "cillum exercitation",
													"description": "(Required) Host ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"cis\": {\n    \"host\": {\n      \"file\": \"occaecat minim ea\",\n      \"id\": \"esse elit et quis\",\n      \"logical_name\": \"est ad elit cupidatat\",\n      \"name\": \"aliqua culpa sed\"\n    },\n    \"result\": {\n      \"date\": \"example\",\n      \"host\": \"8e4b3c64-c1d6-4a96-82b4-1ec2ee89f8e2\",\n      \"tests\": [\n        {\n          \"desc\": \"example\",\n          \"fail\": 2,\n          \"info\": 3,\n          \"pass\": 5,\n          \"results\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"section\": \"1.1\",\n          \"warn\": 7\n        },\n        {\n          \"desc\": \"example\",\n          \"fail\": 2,\n          \"info\": 3,\n          \"pass\": 5,\n          \"results\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"section\": \"1.1\",\n          \"warn\": 7\n        }\n      ],\n      \"total_fail\": 2,\n      \"total_info\": 3,\n      \"total_pass\": 2,\n      \"total_warn\": 5\n    }\n  },\n  \"custom\": [\n    {\n      \"host\": {\n        \"file\": \"proident ex\",\n        \"id\": \"officia \",\n        \"logical_name\": \"aliqua qui\",\n        \"name\": \"minim sit Excepteur cillum\"\n      },\n      \"name\": \"culpa consectetur Duis Lorem tempor\",\n      \"policy\": \"labore dolor eiusmod enim cupidatat\",\n      \"result\": {\n        \"date\": \"example\",\n        \"host\": \"8e4b3c64-c1d6-4a96-82b4-1ec2ee89f8e2\",\n        \"tests\": [\n          {\n            \"desc\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fail\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"info\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"pass\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"results\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"section\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"warn\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"desc\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fail\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"info\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"pass\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"results\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"section\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"warn\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"total_fail\": 2,\n        \"total_info\": 3,\n        \"total_pass\": 2,\n        \"total_warn\": 5\n      }\n    },\n    {\n      \"host\": {\n        \"file\": \"do pariatur ex\",\n        \"id\": \"aliquip\",\n        \"logical_name\": \"ipsum\",\n        \"name\": \"do qui\"\n      },\n      \"name\": \"elit in cillum\",\n      \"policy\": \"magna incididunt mollit Excepteur eu\",\n      \"result\": {\n        \"date\": \"example\",\n        \"host\": \"8e4b3c64-c1d6-4a96-82b4-1ec2ee89f8e2\",\n        \"tests\": [\n          {\n            \"desc\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fail\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"info\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"pass\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"results\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"section\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"warn\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"desc\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fail\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"info\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"pass\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"results\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"section\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"warn\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"total_fail\": 2,\n        \"total_info\": 3,\n        \"total_pass\": 2,\n        \"total_warn\": 5\n      }\n    }\n  ],\n  \"date\": 2,\n  \"kube_bench\": {\n    \"host\": {\n      \"file\": \"eiusmod adipisicing Ut consectetur\",\n      \"id\": \"nisi a\",\n      \"logical_name\": \"qui \",\n      \"name\": \"aliquip ea et\"\n    },\n    \"result\": {\n      \"date\": \"example\",\n      \"host\": \"8e4b3c64-c1d6-4a96-82b4-1ec2ee89f8e2\",\n      \"tests\": [\n        {\n          \"desc\": \"example\",\n          \"fail\": 2,\n          \"info\": 3,\n          \"pass\": 5,\n          \"results\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"section\": \"1.1\",\n          \"warn\": 7\n        },\n        {\n          \"desc\": \"example\",\n          \"fail\": 2,\n          \"info\": 3,\n          \"pass\": 5,\n          \"results\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"section\": \"1.1\",\n          \"warn\": 7\n        }\n      ],\n      \"total_fail\": 2,\n      \"total_info\": 3,\n      \"total_pass\": 2,\n      \"total_warn\": 5\n    }\n  },\n  \"linux\": {\n    \"host\": {\n      \"file\": \"dolor deserunt sit\",\n      \"id\": \"sunt nisi magna consequat\",\n      \"logical_name\": \"ut ut officia anim\",\n      \"name\": \"dolor sit velit elit\"\n    },\n    \"result\": {\n      \"date\": \"example\",\n      \"host\": \"8e4b3c64-c1d6-4a96-82b4-1ec2ee89f8e2\",\n      \"tests\": [\n        {\n          \"desc\": \"example\",\n          \"fail\": 2,\n          \"info\": 3,\n          \"pass\": 5,\n          \"results\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"section\": \"1.1\",\n          \"warn\": 7\n        },\n        {\n          \"desc\": \"example\",\n          \"fail\": 2,\n          \"info\": 3,\n          \"pass\": 5,\n          \"results\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"section\": \"1.1\",\n          \"warn\": 7\n        }\n      ],\n      \"total_fail\": 2,\n      \"total_info\": 3,\n      \"total_pass\": 2,\n      \"total_warn\": 5\n    }\n  },\n  \"openshift\": {\n    \"host\": {\n      \"file\": \"qui Lorem cupidatat deserunt\",\n      \"id\": \"ut quis aliquip\",\n      \"logical_name\": \"cupidatat ea ad\",\n      \"name\": \"dolore aliquip a\"\n    },\n    \"result\": {\n      \"date\": \"example\",\n      \"host\": \"8e4b3c64-c1d6-4a96-82b4-1ec2ee89f8e2\",\n      \"tests\": [\n        {\n          \"desc\": \"example\",\n          \"fail\": 2,\n          \"info\": 3,\n          \"pass\": 5,\n          \"results\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"section\": \"1.1\",\n          \"warn\": 7\n        },\n        {\n          \"desc\": \"example\",\n          \"fail\": 2,\n          \"info\": 3,\n          \"pass\": 5,\n          \"results\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"section\": \"1.1\",\n          \"warn\": 7\n        }\n      ],\n      \"total_fail\": 2,\n      \"total_info\": 3,\n      \"total_pass\": 2,\n      \"total_warn\": 5\n    }\n  }\n}"
								},
								{
									"name": "Failed loading all bench results of a given host",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/risks/bench/:host_id/bench_results?scope=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"risks",
												"bench",
												":host_id",
												"bench_results"
											],
											"query": [
												{
													"key": "scope",
													"value": "cillum exercitation"
												}
											],
											"variable": [
												{
													"key": "host_id",
													"value": "cillum exercitation",
													"description": "(Required) Host ID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "License",
					"item": [
						{
							"name": "Get all licenses",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/licenses",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"licenses"
									],
									"query": [
										{
											"key": "order_by",
											"value": "cillum exercitation",
											"description": "Set the ordering of the returned results. Can be repeated to order the results by multiple attributes. Allowed attributes are 'id', 'status', 'issue_date', 'expiration_data', and 'type'. Prefix any attribute with '-' to reverse the order. The default ordering is by 'id'.",
											"disabled": true
										}
									]
								},
								"description": "Get all registered licenses"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/licenses?order_by=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"licenses"
											],
											"query": [
												{
													"key": "order_by",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"license_data\": [\n    {\n      \"license\": {\n        \"type\": \"aute enim\",\n        \"organization\": \"dolor eiusmod ex in\",\n        \"account_id\": \"fugiat mollit ullamco ut sint\",\n        \"client_name\": \"ut deserunt eu tempor non\",\n        \"email\": \"Meo7BMgoPmEKaS@jfxyIMzv.bd\",\n        \"issue_date\": -99666327,\n        \"exp_date\": -45436007,\n        \"non_prod\": false,\n        \"approved\": true,\n        \"strict\": false,\n        \"num_agents\": -5780316,\n        \"num_microenforcers\": 17381477,\n        \"num_hostenforcers\": -34754368,\n        \"num_images\": 45203362,\n        \"num_functions\": 30786809,\n        \"num_advanced_functions\": -61262002,\n        \"num_pas\": -69301934,\n        \"vpatch_coverage\": 74220038,\n        \"level_pas\": \"dolor in\",\n        \"vpatch\": true\n      },\n      \"resources_status\": {\n        \"enforcers\": \"proident Lorem dolor nostrud\",\n        \"vm_enfrocers\": \"aliquip voluptate aute exercitation\",\n        \"micro_enforcers\": \"qui ullamco sint consectetur\",\n        \"repositories\": \"Excepteur \",\n        \"kubernetes_cluster_protection\": \"ut consectetur do cillum mollit\"\n      }\n    },\n    {\n      \"license\": {\n        \"type\": \"id\",\n        \"organization\": \"eiusmod sint dolore nulla exercitation\",\n        \"account_id\": \"tempor irure non nulla\",\n        \"client_name\": \"id officia velit ipsum\",\n        \"email\": \"9zeSRLr5@BAnaLEjuzce.rm\",\n        \"issue_date\": -87866278,\n        \"exp_date\": 4378647,\n        \"non_prod\": false,\n        \"approved\": true,\n        \"strict\": false,\n        \"num_agents\": 87822864,\n        \"num_microenforcers\": 76071420,\n        \"num_hostenforcers\": 88698743,\n        \"num_images\": -62300218,\n        \"num_functions\": -90310781,\n        \"num_advanced_functions\": -44526318,\n        \"num_pas\": 49930788,\n        \"vpatch_coverage\": 54257230,\n        \"level_pas\": \"enim conse\",\n        \"vpatch\": false\n      },\n      \"resources_status\": {\n        \"enforcers\": \"sunt voluptate consequat\",\n        \"vm_enfrocers\": \"deserunt enim cupidatat laborum\",\n        \"micro_enforcers\": \"sed est minim laborum\",\n        \"repositories\": \"D\",\n        \"kubernetes_cluster_protection\": \"ipsum quis ea aute pariatur\"\n      }\n    }\n  ]\n}"
								},
								{
									"name": "Could not load licenses from database",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/licenses?order_by=cillum exercitation",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"licenses"
											],
											"query": [
												{
													"key": "order_by",
													"value": "cillum exercitation"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Get license",
							"protocolProfileBehavior": {
								"followAuthorizationHeader": false,
								"followOriginalHttpMethod": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/license",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"license"
									]
								},
								"description": "Data of all active licenses aggregated into one single license object, and resource status"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/license",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"license"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"license_data\": {\n    \"license\": {\n      \"type\": \"ad sunt velit consequat\",\n      \"organization\": \"cillum voluptate\",\n      \"account_id\": \"minim eu\",\n      \"client_name\": \"laborum commodo\",\n      \"email\": \"u8EnYOGJZ9k1GF@MoAkcvozerdFWrtSIGxsMTmcgm.ksxv\",\n      \"issue_date\": -29027281,\n      \"exp_date\": 58932781,\n      \"non_prod\": true,\n      \"approved\": true,\n      \"strict\": false,\n      \"num_agents\": -15909271,\n      \"num_microenforcers\": -78538865,\n      \"num_hostenforcers\": -76255115,\n      \"num_images\": 68628952,\n      \"num_functions\": 57343259,\n      \"num_advanced_functions\": -91053217,\n      \"num_pas\": 8407889,\n      \"vpatch_coverage\": 24805277,\n      \"level_pas\": \"dolor\",\n      \"vpatch\": true\n    },\n    \"resources_status\": {\n      \"enforcers\": \"culpa qui reprehenderit Duis\",\n      \"vm_enfrocers\": \"dolore ipsum\",\n      \"micro_enforcers\": \"laborum ipsum eiusmod elit pariatur\",\n      \"repositories\": \"cupidatat minim do\",\n      \"kubernetes_cluster_protection\": \"proident qui\"\n    }\n  }\n}"
								},
								{
									"name": "Could not load license details from database",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/license",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"license"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Add license",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"commodo al\",\n  \"telemetry_enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/license",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"license"
									]
								},
								"description": "Add a new license to the system"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"commodo al\",\n  \"telemetry_enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/license",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"license"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Input error - correct before resubmitting",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"commodo al\",\n  \"telemetry_enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/license",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"license"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								},
								{
									"name": "Could not add license",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"commodo al\",\n  \"telemetry_enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/license",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"license"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Remove license",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  -42127745,\n  92044386\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/license/delete",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"license",
										"delete"
									]
								},
								"description": "Delete one or more licenses, specified by license IDs, from the system"
							},
							"response": [
								{
									"name": "Deleted the specified licenses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  76577064,\n  15385065\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/license/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"license",
												"delete"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Input error - correct before resubmitting",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  76577064,\n  15385065\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/license/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"license",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								},
								{
									"name": "Could not delete license(s)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  76577064,\n  15385065\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/license/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"license",
												"delete"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "custom vulnerabilities",
					"item": [
						{
							"name": "Set custom severity values",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"custom_vulnerabilities\": [\n    {\n      \"cve\": \"dolor aliqua\",\n      \"severity\": \"esse\",\n      \"notes\": \"officia laboris fugiat\"\n    },\n    {\n      \"cve\": \"esse deserunt fugiat quis\",\n      \"severity\": \"consequat incididunt sed Lorem\",\n      \"notes\": \"esse nostrud\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/custom_vulnerabilities",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"custom_vulnerabilities"
									]
								},
								"description": "Define a custom severity value for each of the vulnerabilities specified. This value will override the severity value that Aqua defines. Each call to this endpoint will add to (and replace) values previously specified with the endpoint. Use of this endpoint requires the Administrator role."
							},
							"response": [
								{
									"name": "Custom Vulnerabilities saved",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_vulnerabilities\": [\n    {\n      \"cve\": \"quis dolor\",\n      \"severity\": \"aliquip Duis nisi in\",\n      \"notes\": \"pariatur\"\n    },\n    {\n      \"cve\": \"mollit consectetur anim ea enim\",\n      \"severity\": \"est mollit qui non\",\n      \"notes\": \"sed q\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/custom_vulnerabilities",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"custom_vulnerabilities"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Input error - failed reading the Custom Vulnerabilities body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_vulnerabilities\": [\n    {\n      \"cve\": \"quis dolor\",\n      \"severity\": \"aliquip Duis nisi in\",\n      \"notes\": \"pariatur\"\n    },\n    {\n      \"cve\": \"mollit consectetur anim ea enim\",\n      \"severity\": \"est mollit qui non\",\n      \"notes\": \"sed q\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/custom_vulnerabilities",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"custom_vulnerabilities"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								},
								{
									"name": "Failed setting custom vulnerability severity values",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"custom_vulnerabilities\": [\n    {\n      \"cve\": \"quis dolor\",\n      \"severity\": \"aliquip Duis nisi in\",\n      \"notes\": \"pariatur\"\n    },\n    {\n      \"cve\": \"mollit consectetur anim ea enim\",\n      \"severity\": \"est mollit qui non\",\n      \"notes\": \"sed q\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/custom_vulnerabilities",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"custom_vulnerabilities"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Delete custom severity values",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cves\": [\n    \"ut laboris nisi ipsum\",\n    \"ullam\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/custom_vulnerabilities/delete",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"custom_vulnerabilities",
										"delete"
									]
								},
								"description": "Delete custom severity values from the set of vulnerabilities specified. Calling this will remove values previously specified with POST custom_vulnerabilities. Use of this endpoint requires the Administrator role."
							},
							"response": [
								{
									"name": "Custom Vulnerabilities deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cves\": [\n    \"pariatur Lorem est voluptate aliqua\",\n    \"est irure\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/custom_vulnerabilities/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"custom_vulnerabilities",
												"delete"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Input error - failed reading the Custom Vulnerabilities body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cves\": [\n    \"pariatur Lorem est voluptate aliqua\",\n    \"est irure\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/custom_vulnerabilities/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"custom_vulnerabilities",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								},
								{
									"name": "Failed deleting custom vulnerability severity values",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cves\": [\n    \"pariatur Lorem est voluptate aliqua\",\n    \"est irure\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/custom_vulnerabilities/delete",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"custom_vulnerabilities",
												"delete"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "exporter",
					"item": [
						{
							"name": "List export jobs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/exporter",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"exporter"
									]
								},
								"description": "List all export jobs for the requesting user (as per the credentials)"
							},
							"response": [
								{
									"name": "Export jobs retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/exporter",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"exporter"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"Lorem pariatur\",\n    \"token\": \"qui culpa Ut occaecat\",\n    \"status\": \"velit ea magna\",\n    \"file_format\": \"veniam dolore pariatur\",\n    \"created_at\": 96219064,\n    \"updated_at\": 27283410,\n    \"description\": \"officia\",\n    \"author\": \"adipisicing\"\n  },\n  {\n    \"id\": \"dolore\",\n    \"token\": \"sit et sunt esse\",\n    \"status\": \"dolor Lorem laboris ipsum\",\n    \"file_format\": \"Ut anim pariatur non\",\n    \"created_at\": 37398308,\n    \"updated_at\": -93776235,\n    \"description\": \"in sunt cillum magna\",\n    \"author\": \"sint id\"\n  }\n]"
								}
							]
						},
						{
							"name": "Export file",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"minim ex dolor\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v2}}/exporter",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"exporter"
									]
								},
								"description": "Generate and return the export file as per the provided format."
							},
							"response": [
								{
									"name": "Exported file generated successfully, the file type will be determined by the file format specificed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"minim ex dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/exporter",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"exporter"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The export job is not ready yet for export, the status is either Created or Collecting",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"minim ex dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/exporter",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"exporter"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"minim ex dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v2}}/exporter",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"exporter"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						},
						{
							"name": "Delete an export job",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/exporter/:token",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"exporter",
										":token"
									],
									"variable": [
										{
											"key": "token",
											"value": "cillum exercitation",
											"description": "(Required) Export job unique token"
										}
									]
								},
								"description": "Delete an export job - metadata, data for export and the associated notification."
							},
							"response": [
								{
									"name": "Export job removed successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/exporter/:token",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"exporter",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "cillum exercitation",
													"description": "(Required) Export job unique token"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or missing token",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/exporter/:token",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"exporter",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "cillum exercitation",
													"description": "(Required) Export job unique token"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
								}
							]
						}
					]
				},
				{
					"name": "User Password",
					"item": [
						{
							"name": "Reset user passwords",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login_ids\": [\n    \"mollit eiusmod et\",\n    \"mollit officia\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v1}}/users/reset_password",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"users",
										"reset_password"
									]
								},
								"description": "Reset user passwords"
							},
							"response": [
								{
									"name": "User passwords have been reset successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "cillum exercitation",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"login_ids\": [\n    \"irure sed\",\n    \"aliqua qui\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{aqua_url_v1}}/users/reset_password",
											"host": [
												"{{aqua_url_v1}}"
											],
											"path": [
												"users",
												"reset_password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"updated\": 77307163\n}"
								}
							]
						},
						{
							"name": "Change user's own password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/self_service/change_password?current_password=qwerty@123&new_password=123123@qwerty",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"self_service",
										"change_password"
									],
									"query": [
										{
											"key": "current_password",
											"value": "qwerty@123",
											"description": "(Required) User's current password"
										},
										{
											"key": "new_password",
											"value": "123123@qwerty",
											"description": "(Required) User's current password"
										}
									]
								},
								"description": "Change user's own password"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{vault:bearer-token}} ...",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/self_service/change_password?current_password=qwerty@123&new_password=123123@qwerty",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"self_service",
												"change_password"
											],
											"query": [
												{
													"key": "current_password",
													"value": "qwerty@123"
												},
												{
													"key": "new_password",
													"value": "123123@qwerty"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed changing password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{vault:bearer-token}} ...",
												"description": "(Required) Authorization header must include Bearer token or Basic authentication"
											}
										],
										"url": {
											"raw": "{{aqua_url_v2}}/self_service/change_password?current_password=qwerty@123&new_password=123123@qwerty",
											"host": [
												"{{aqua_url_v2}}"
											],
											"path": [
												"self_service",
												"change_password"
											],
											"query": [
												{
													"key": "current_password",
													"value": "qwerty@123"
												},
												{
													"key": "new_password",
													"value": "123123@qwerty"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get last notification information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{aqua_url_v2}}/notifications",
							"host": [
								"{{aqua_url_v2}}"
							],
							"path": [
								"notifications"
							]
						},
						"description": "Get information of the last notification sent by the environment"
					},
					"response": [
						{
							"name": "Supported host scope information included",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "cillum exercitation",
										"description": "(Required) Authorization header must include Bearer token or Basic authentication"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/notifications",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"created_at\": \"dolor magna consequat\",\n  \"id\": -5120216,\n  \"message\": \"Excepteur commodo\",\n  \"type\": \"velit ea adipisicing elit\",\n  \"url\": \"sit sunt incididunt minim deserunt\"\n}"
						},
						{
							"name": "Could not connect to notifications",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "cillum exercitation",
										"description": "(Required) Authorization header must include Bearer token or Basic authentication"
									}
								],
								"url": {
									"raw": "{{aqua_url_v2}}/notifications",
									"host": [
										"{{aqua_url_v2}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
						}
					]
				},
				{
					"name": "Test connection to a registry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"id\",\n  \"type\": \"eiusmod eu aliquip fugiat\",\n  \"always_pull_patterns\": [\n    \"ex nostrud culpa\",\n    \"quis ex adipisicing\"\n  ],\n  \"auto_pull\": false,\n  \"auto_pull_max\": -29061598.457278848,\n  \"auto_pull_rescan\": true,\n  \"auto_pull_time\": \"exercitation\",\n  \"description\": \"amet mollit eiusmod\",\n  \"options\": [\n    \"est incididunt consectetur dolore nostrud\",\n    \"Ut Lorem voluptate pariatur enim\"\n  ],\n  \"password\": \"officia culpa dolor \",\n  \"prefixes\": [\n    \"dolor in\",\n    \"ex\"\n  ],\n  \"pull_image_age\": \"tempor id in\",\n  \"pull_image_tag_pattern\": [\n    \"ipsum veniam\",\n    \"aliquip in\"\n  ],\n  \"pull_repo_patterns_excluded\": [\n    \"dolor officia do ad\",\n    \"adipisicing magna et pariatur aliqua\"\n  ],\n  \"url\": \"elit laboris non dolore sit\",\n  \"username\": \"est\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{aqua_url_v1}}/registries/validate",
							"host": [
								"{{aqua_url_v1}}"
							],
							"path": [
								"registries",
								"validate"
							]
						},
						"description": "Test registry connection"
					},
					"response": [
						{
							"name": "Test completed successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "cillum exercitation",
										"description": "(Required) Authorization header must include Bearer token or Basic authentication"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"in magna labore ex\",\n  \"type\": \"labore amet exercitation\",\n  \"always_pull_patterns\": [\n    \"nul\",\n    \"ut in sint\"\n  ],\n  \"auto_pull\": false,\n  \"auto_pull_max\": -55016288.7319741,\n  \"auto_pull_rescan\": true,\n  \"auto_pull_time\": \"veniam\",\n  \"description\": \"est ipsum\",\n  \"options\": [\n    \"ipsum qui minim\",\n    \"laboris nisi amet\"\n  ],\n  \"password\": \"fugiat in aliquip\",\n  \"prefixes\": [\n    \"Duis\",\n    \"aliquip dolor elit\"\n  ],\n  \"pull_image_age\": \"cillum aliquip dolore exercitation ut\",\n  \"pull_image_tag_pattern\": [\n    \"mollit consectetur\",\n    \"commodo velit\"\n  ],\n  \"pull_repo_patterns_excluded\": [\n    \"commodo aliqua Excepteur\",\n    \"magna ut id est ut\"\n  ],\n  \"url\": \"est ea eiusmod\",\n  \"username\": \"ad adipisicing ullamco\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v1}}/registries/validate",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"registries",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid or missing input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "cillum exercitation",
										"description": "(Required) Authorization header must include Bearer token or Basic authentication"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"in magna labore ex\",\n  \"type\": \"labore amet exercitation\",\n  \"always_pull_patterns\": [\n    \"nul\",\n    \"ut in sint\"\n  ],\n  \"auto_pull\": false,\n  \"auto_pull_max\": -55016288.7319741,\n  \"auto_pull_rescan\": true,\n  \"auto_pull_time\": \"veniam\",\n  \"description\": \"est ipsum\",\n  \"options\": [\n    \"ipsum qui minim\",\n    \"laboris nisi amet\"\n  ],\n  \"password\": \"fugiat in aliquip\",\n  \"prefixes\": [\n    \"Duis\",\n    \"aliquip dolor elit\"\n  ],\n  \"pull_image_age\": \"cillum aliquip dolore exercitation ut\",\n  \"pull_image_tag_pattern\": [\n    \"mollit consectetur\",\n    \"commodo velit\"\n  ],\n  \"pull_repo_patterns_excluded\": [\n    \"commodo aliqua Excepteur\",\n    \"magna ut id est ut\"\n  ],\n  \"url\": \"est ea eiusmod\",\n  \"username\": \"ad adipisicing ullamco\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{aqua_url_v1}}/registries/validate",
									"host": [
										"{{aqua_url_v1}}"
									],
									"path": [
										"registries",
										"validate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"est ex deserunt aliqua\",\n  \"code\": 72515222,\n  \"aqua_code\": 56184994\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}